{"version":3,"file":"static/js/616.269685da.chunk.js","mappings":"0KAKA,MAAMA,GAASC,EAAAA,EAAAA,IAAG,yBAyFlB,EAvFgBC,KACZ,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KACzC,SAAEG,IAAaC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,OAChDC,QAAQC,IAAIL,IACZM,EAAAA,EAAAA,YAAU,KACNd,EAAOe,GAAG,eAAgBC,IACtBT,GAAgBU,GAAS,IAAI,IAAIC,IAAI,IAAID,KAASD,EAAKG,gBAAe,IAGnE,KACHnB,EAAOoB,IAAI,cAAc,IAE9B,IAyCH,OACIC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQC,oBAAqB,iBAAkBC,IAAK,QAASL,SAC/E,IAAIM,MAAM,IAAIC,QAAQC,KAAIC,IACvB,MAAMC,EAAaD,EAAI,EACvB,OACIR,EAAAA,EAAAA,KAAA,OAEIU,QAASA,IAhDJD,KACrB1B,EAAY4B,SAASF,KAErB7B,EAAc+B,SAASF,GACvB5B,EAAiBD,EAAcgC,QAAOC,GAAOA,IAAQJ,KAErD5B,EAAiB,IAAID,EAAe6B,IACxC,EAyCmCK,CAAoBL,GACnCR,MAAO,CACHc,QAAS,OACTC,UAAW,SACXC,gBAAiBlC,EAAY4B,SAASF,GAChC,UACA7B,EAAc+B,SAASF,GACvB,UACA,UACNS,OAAQnC,EAAY4B,SAASF,GAAc,cAAgB,WAC7DV,SAEDU,GAbIA,EAcH,OAIlBT,EAAAA,EAAAA,KAAA,UAAQU,QAtDMS,UAClB,IAAKlC,EAED,YADAmC,MAAM,uBAMV,IACI/B,QAAQC,IAAI,SAAUL,EAASoC,mBAERC,EAAAA,EAAMC,KAAK,qCAAsC,CACpEC,OANO,2BAOP5B,YAAahB,GACd,CACC6C,QAAS,CACLC,cAAe,UAAUzC,EAASoC,iBAI1CD,MAAM,8BAA8BxC,EAAc+C,KAAK,SACvD9C,EAAiB,GACrB,CAAE,MAAO+C,GACLR,MAAM,mBACN/B,QAAQuC,MAAM,iBAAkBA,EACpC,GA6BoCC,SAAmC,IAAzBjD,EAAckD,OAAa/B,SAAC,0BAGpE,C","sources":["components/booking/Seatmap.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst SeatMap = () => {\r\n    const [selectedSeats, setSelectedSeats] = useState([]);  \r\n    const [bookedSeats, setBookedSeats] = useState([]); \r\n    const { userInfo } = useSelector(state => state.user);  \r\n    console.log(userInfo);\r\n    useEffect(() => {\r\n        socket.on('seatsBooked', (data) => {\r\n            setBookedSeats((prev) => [...new Set([...prev, ...data.seatNumbers])]);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('seatsBooked');  \r\n        };\r\n    }, []);\r\n\r\n    const toggleSeatSelection = (seatNumber) => {\r\n        if (bookedSeats.includes(seatNumber)) return;  // Ngăn chọn ghế đã được đặt\r\n\r\n        if (selectedSeats.includes(seatNumber)) {\r\n            setSelectedSeats(selectedSeats.filter(num => num !== seatNumber));  // Bỏ chọn ghế nếu đã chọn\r\n        } else {\r\n            setSelectedSeats([...selectedSeats, seatNumber]);  // Chọn ghế\r\n        }\r\n    };\r\n\r\n    // Hàm để xử lý khi người dùng đặt ghế\r\n    const handleBooking = async () => {\r\n        if (!userInfo) {\r\n            alert('Please login first.');\r\n            return;\r\n        }\r\n\r\n        const tripId = '66bc65487c951d848da2fec3';  // Ví dụ về tripId, bạn cần thay thế bằng tripId thực tế\r\n\r\n        try {\r\n            console.log('Token:', userInfo.accessToken);  // Kiểm tra token trong console\r\n\r\n            const response = await axios.post('http://localhost:5000/api/bookings', {\r\n                tripId,\r\n                seatNumbers: selectedSeats\r\n            }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${userInfo.accessToken}`  // Gửi token trong header\r\n                }\r\n            });\r\n\r\n            alert(`Successfully booked seats: ${selectedSeats.join(', ')}`);\r\n            setSelectedSeats([]);  // Xóa ghế đã chọn sau khi đặt thành công\r\n        } catch (error) {\r\n            alert('Booking failed.');\r\n            console.error('Booking error:', error);  // Hiển thị lỗi trong console\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Seat Map</h2>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: '10px' }}>\r\n                {[...Array(40).keys()].map(i => {\r\n                    const seatNumber = i + 1;\r\n                    return (\r\n                        <div\r\n                            key={seatNumber}\r\n                            onClick={() => toggleSeatSelection(seatNumber)}\r\n                            style={{\r\n                                padding: '10px',\r\n                                textAlign: 'center',\r\n                                backgroundColor: bookedSeats.includes(seatNumber)\r\n                                    ? '#f44336'  // Màu đỏ cho ghế đã đặt\r\n                                    : selectedSeats.includes(seatNumber)\r\n                                    ? '#4CAF50'  // Màu xanh cho ghế được chọn\r\n                                    : '#e0e0e0',  // Màu xám cho ghế chưa chọn\r\n                                cursor: bookedSeats.includes(seatNumber) ? 'not-allowed' : 'pointer'\r\n                            }}\r\n                        >\r\n                            {seatNumber}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <button onClick={handleBooking} disabled={selectedSeats.length === 0}>\r\n                Book Selected Seats\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SeatMap\r\n"],"names":["socket","io","SeatMap","selectedSeats","setSelectedSeats","useState","bookedSeats","setBookedSeats","userInfo","useSelector","state","user","console","log","useEffect","on","data","prev","Set","seatNumbers","off","_jsxs","children","_jsx","style","display","gridTemplateColumns","gap","Array","keys","map","i","seatNumber","onClick","includes","filter","num","toggleSeatSelection","padding","textAlign","backgroundColor","cursor","async","alert","accessToken","axios","post","tripId","headers","Authorization","join","error","disabled","length"],"sourceRoot":""}