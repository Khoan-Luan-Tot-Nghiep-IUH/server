{"version":3,"file":"static/js/243.9d909e3d.chunk.js","mappings":"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","sources":["components/auth/Register.js","components/shared/Notification/Notification.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useRegisterMutation, useVerifyOtpMutation } from '../../Redux/User/apiSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCredentials } from '../../Redux/User/userSlice';\r\nimport Notification from '../shared/Notification/Notification';\r\n\r\nconst Register = () => {\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [step, setStep] = useState(1);\r\n  const [formattedPhoneNumber, setFormattedPhoneNumber] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [register, { isLoading: isRegistering }] = useRegisterMutation();\r\n  const [verify, { isLoading: isVerifying }] = useVerifyOtpMutation();\r\n\r\n  const [notificationOpen, setNotificationOpen] = useState(false);\r\n  const [notificationMessage, setNotificationMessage] = useState('');\r\n  const [notificationSeverity, setNotificationSeverity] = useState('success');\r\n\r\n  // Hiển thị thông báo\r\n  const showNotification = (severity, message) => {\r\n    setNotificationSeverity(severity);\r\n    setNotificationMessage(message);\r\n    setNotificationOpen(true);\r\n  };\r\n\r\n  // Đóng thông báo\r\n  const handleNotificationClose = () => {\r\n    setNotificationOpen(false);\r\n  };\r\n\r\n  // Hàm xử lý đăng ký người dùng\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage('');\r\n\r\n    const phoneRegex = /^[0-9]{10}$/; // Số điện thoại phải có đúng 10 chữ số\r\n    if (!phoneRegex.test(phoneNumber)) {\r\n      setErrorMessage('Số điện thoại phải có 10 chữ số.');\r\n      return;\r\n    }\r\n  \r\n    // Kiểm tra định dạng email\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\\.com$/; // Chỉ cho phép email kết thúc bằng @gmail.com\r\n    if (!emailRegex.test(email)) {\r\n      setErrorMessage('Email phải thuộc miền @gmail.com.');\r\n      return;\r\n    }\r\n    // Định dạng lại số điện thoại nếu bắt đầu bằng '0'\r\n    let formattedPhone = phoneNumber.startsWith('0') ? `+84${phoneNumber.slice(1)}` : phoneNumber;\r\n\r\n    try {\r\n      // Gửi yêu cầu đăng ký qua API\r\n      const userData = await register({\r\n        userName,\r\n        password,\r\n        fullName,\r\n        email,\r\n        phoneNumber: formattedPhone\r\n      }).unwrap();\r\n\r\n      // Nếu đăng ký thành công, chuyển sang bước xác thực OTP\r\n      if (userData?.success) {\r\n        setFormattedPhoneNumber(formattedPhone);\r\n        setStep(2);\r\n        showNotification('success', 'Mã OTP đã được gửi!');\r\n      } else {\r\n        throw new Error(userData?.message || 'Đăng ký thất bại');\r\n      }\r\n    } catch (err) {\r\n      const errorMsg = err?.data?.message || 'Đăng ký thất bại. Vui lòng thử lại.';\r\n      setErrorMessage(errorMsg);\r\n      showNotification('error', errorMsg);\r\n    }\r\n  };\r\n\r\n  const handleVerifyOTP = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const verifyData = await verify({\r\n        phoneNumber: formattedPhoneNumber,\r\n        verificationCode: otp,\r\n      }).unwrap();\r\n      console.log(\"Verify Data:\", verifyData);\r\n      if (verifyData?.success) {\r\n        showNotification('success', 'Xác minh OTP thành công! Vui lòng đăng nhập.');\r\n        navigate('/login');\r\n      } else {\r\n        throw new Error('Xác minh OTP thất bại');\r\n      }\r\n    } catch (err) {\r\n      const errorMsg = err?.response?.data?.message || 'Xác minh OTP thất bại. Vui lòng thử lại.';\r\n      console.error(\"Lỗi xác minh OTP: \", err);\r\n      showNotification('error', errorMsg);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center bg-cover bg-center bg-fixed\" style={{ backgroundImage: 'url(\"https://source.unsplash.com/1600x900/?nature,water\")' }}>\r\n      <div className=\"bg-white shadow-md rounded-lg p-8 w-full max-w-md bg-opacity-80\">\r\n        <h2 className=\"text-2xl font-bold text-center mb-6\">\r\n          {step === 1 ? 'Create Your Account' : 'Enter OTP'}\r\n        </h2>\r\n\r\n        {step === 1 ? (\r\n          <form className=\"space-y-4\" onSubmit={handleRegister}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              value={userName}\r\n              onChange={(e) => setUserName(e.target.value)}\r\n              required\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Full Name\"\r\n              value={fullName}\r\n              onChange={(e) => setFullName(e.target.value)}\r\n              required\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              className={`shadow appearance-none border ${errorMessage.includes('Email') ? 'border-red-500' : ''} rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500`}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Phone Number\"\r\n              value={phoneNumber}\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n              required\r\n             className={`shadow appearance-none border ${errorMessage.includes('Số điện thoại') ? 'border-red-500' : ''} rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500`}\r\n            />\r\n            {errorMessage && <p className=\"text-red-500 text-xs italic\">{errorMessage}</p>}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-black text-white font-bold py-2 px-4 rounded hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-500\"\r\n            >\r\n              {isRegistering ? 'Registering...' : 'Register'}\r\n            </button>\r\n          </form>\r\n        ) : (\r\n          <form className=\"space-y-4\" onSubmit={handleVerifyOTP}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter OTP\"\r\n              value={otp}\r\n              onChange={(e) => setOtp(e.target.value)}\r\n              required\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n            {errorMessage && <p className=\"text-red-500 text-xs italic\">{errorMessage}</p>}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-black text-white font-bold py-2 px-4 rounded hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-500\"\r\n            >\r\n              {isVerifying ? 'Verifying...' : 'Verify OTP'}\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n\r\n      {/* Notification component */}\r\n      <Notification\r\n        open={notificationOpen}\r\n        onClose={handleNotificationClose}\r\n        severity={notificationSeverity}\r\n        message={notificationMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Slide from '@mui/material/Slide';\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Notification = ({ open, onClose, severity, message, autoHideDuration = 3000, TransitionComponent = Slide }) => {\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={autoHideDuration}\r\n      onClose={onClose}\r\n      TransitionComponent={TransitionComponent}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }} \r\n    >\r\n      <Alert onClose={onClose} severity={severity} sx={{ width: '100%' }}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\nexport default Notification;\r\n"],"names":["Register","userName","setUserName","useState","password","setPassword","fullName","setFullName","email","setEmail","phoneNumber","setPhoneNumber","otp","setOtp","step","setStep","formattedPhoneNumber","setFormattedPhoneNumber","errorMessage","setErrorMessage","navigate","useDispatch","useNavigate","register","isLoading","isRegistering","useRegisterMutation","verify","isVerifying","useVerifyOtpMutation","notificationOpen","setNotificationOpen","notificationMessage","setNotificationMessage","notificationSeverity","setNotificationSeverity","showNotification","severity","message","_jsxs","className","style","backgroundImage","children","_jsx","onSubmit","async","e","preventDefault","test","formattedPhone","startsWith","slice","userData","unwrap","success","Error","err","_err$data","errorMsg","data","type","placeholder","value","onChange","target","required","includes","verifyData","verificationCode","console","log","_err$response","_err$response$data","response","error","Notification","open","onClose","handleNotificationClose","Alert","React","props","ref","MuiAlert","elevation","variant","_ref","autoHideDuration","TransitionComponent","Slide","Snackbar","anchorOrigin","vertical","horizontal","sx","width"],"sourceRoot":""}