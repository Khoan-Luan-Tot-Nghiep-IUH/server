{"version":3,"file":"static/js/264.4ace3ad1.chunk.js","mappings":"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","sources":["components/SuperAdmin/SideBar/Sidebar.js","components/SuperAdmin/navSideBar/Statistics.js","components/SuperAdmin/navSideBar/Settings.js","components/SuperAdmin/navSideBar/Require.js","components/SuperAdmin/SuperAdminDashboard.js","components/SuperAdmin/navSideBar/Location.js","components/SuperAdmin/navSideBar/ManageAdmins.js","components/SuperAdmin/navSideBar/Company/CompanyForm.js","components/SuperAdmin/navSideBar/Company/SnackbarNotification.js","components/SuperAdmin/navSideBar/Company/CompanyCard.js","components/SuperAdmin/navSideBar/ManageCompanies.js","components/SuperAdmin/navSideBar/ManageUsers.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FaHome, FaClipboardList, FaUser, FaChartBar, FaCogs, FaSignOutAlt, FaChevronLeft, FaChevronRight, FaSearchLocation } from 'react-icons/fa';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from '../../../Redux/User/userSlice';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst Sidebar = ({ setActiveContent }) => {\r\n  const dispatch = useDispatch();\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const handleNavigation = (content) => {\r\n    setActiveContent(content);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`h-screen fixed top-0 left-0 flex flex-col items-center bg-gray-900 text-white shadow-lg transition-all duration-300 ${\r\n        collapsed ? 'w-16' : 'w-64'\r\n      }`}\r\n    >\r\n      {/* Sidebar Header */}\r\n      <div className=\"w-full p-4 flex justify-between items-center bg-gray-800\">\r\n        {!collapsed && <span className=\"font-bold text-lg\">Quản lý Hệ thống</span>}\r\n        <button\r\n          className=\"text-xl text-gray-400 hover:text-white focus:outline-none ml-auto\"\r\n          onClick={() => setCollapsed(!collapsed)}\r\n        >\r\n          {collapsed ? <FaChevronRight /> : <FaChevronLeft />}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Navigation Menu */}\r\n      <ul className=\"flex-1 w-full mt-4 space-y-1\">\r\n        {/* Tổng Quan */}\r\n        <Tooltip title=\"Tổng Quan\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('default')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaHome className=\"text-xl\" />\r\n            {/* Ẩn chữ khi Sidebar thu gọn */}\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Tổng Quan</span>\r\n          </li>\r\n        </Tooltip>\r\n\r\n        {/* Quản lý Công ty */}\r\n        <Tooltip title=\"Quản lý Công ty\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('companies')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaClipboardList className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Quản lý Công ty</span>\r\n          </li>\r\n        </Tooltip>\r\n        {/* Quản lý Người dùng */}\r\n        <Tooltip title=\"Quản lý Người dùng\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('users')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaUser className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Quản lý Người dùng</span>\r\n          </li>\r\n        </Tooltip>\r\n\r\n        {/* Thống kê */}\r\n        <Tooltip title=\"Thống kê\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('statistics')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaChartBar className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Thống kê</span>\r\n          </li>\r\n        </Tooltip>\r\n\r\n        {/* Nhật ký hoạt động */}\r\n        <Tooltip title=\"Địa điểm\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('Location')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaSearchLocation className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Địa điểm cho hệ thống</span>\r\n          </li>\r\n        </Tooltip>\r\n        <Tooltip title=\"Yêu cầu hợp tác\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('require')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaCogs className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Yêu cầu hợp tác</span>\r\n          </li>\r\n        </Tooltip>\r\n        {/* Cài đặt */}\r\n        <Tooltip title=\"Cài đặt\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('settings')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaCogs className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Cài đặt</span>\r\n          </li>\r\n        </Tooltip>\r\n        <Tooltip title=\"Hỗ trợ\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('faq')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaCogs className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Hỗ trợ người dùng</span>\r\n          </li>\r\n        </Tooltip>\r\n      </ul>\r\n\r\n      {/* Nút Đăng Xuất */}\r\n      <Tooltip title=\"Đăng Xuất\" placement=\"right\" visible={collapsed}>\r\n        <li\r\n          onClick={handleLogout}\r\n          className={`flex items-center p-4 hover:bg-red-600 transition-all duration-300 cursor-pointer ${\r\n            collapsed ? 'justify-center' : 'justify-start'\r\n          }`}\r\n        >\r\n          <FaSignOutAlt className=\"text-xl\" />\r\n          <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Đăng Xuất</span>\r\n        </li>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { Tabs } from 'antd'; // Import Ant Design Tabs\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\nimport { useGetRevenueByCompanyQuery, useGetCancellationStatisticsQuery } from '../../../Redux/Revenue/revenueApiSlice'; // Import hooks from RTK Query\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register chart components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, ArcElement, Title, Tooltip, Legend);\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst Statistics = () => {\r\n  // Fetch revenue data\r\n  const { data: revenueData, error: revenueError, isLoading: revenueLoading } = useGetRevenueByCompanyQuery({});\r\n\r\n  // Fetch cancellation statistics data\r\n  const { data: cancellationData, error: cancellationError, isLoading: cancellationLoading } = useGetCancellationStatisticsQuery({});\r\n\r\n  // Revenue Chart Data\r\n  const revenueChartData = {\r\n    labels: revenueData?.data.map((item) => item.companyName),\r\n    datasets: [\r\n      {\r\n        label: 'Tổng Doanh Thu',\r\n        data: revenueData?.data.map((item) => item.totalRevenue),\r\n        backgroundColor: 'rgba(54, 162, 235, 0.5)',\r\n      },\r\n      {\r\n        label: 'Doanh Thu Online',\r\n        data: revenueData?.data.map((item) => item.onlineRevenue || 0),\r\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n      },\r\n      {\r\n        label: 'Doanh Thu OnBoard',\r\n        data: revenueData?.data.map((item) => item.onboardRevenue || 0),\r\n        backgroundColor: 'rgba(255, 206, 86, 0.5)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const revenueChartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Thống kê doanh thu các công ty',\r\n      },\r\n    },\r\n  };\r\n\r\n  // Cancellation Chart Data\r\n  const cancellationChartData = {\r\n    labels: cancellationData?.data.map((item) => item.companyName),\r\n    datasets: [\r\n      {\r\n        label: 'Tỷ lệ hủy (%)',\r\n        data: cancellationData?.data.map((item) => item.cancellationPercentage),\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.5)',\r\n          'rgba(54, 162, 235, 0.5)',\r\n          'rgba(255, 206, 86, 0.5)',\r\n          'rgba(75, 192, 192, 0.5)',\r\n          'rgba(153, 102, 255, 0.5)',\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(153, 102, 255, 1)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const cancellationChartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Tỷ lệ hủy vé theo công ty (%)',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"statistics-container\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Thống kê</h1>\r\n      <Tabs defaultActiveKey=\"1\">\r\n        {/* Tab 1: Revenue */}\r\n        <TabPane tab=\"Doanh Thu\" key=\"1\">\r\n          {revenueLoading ? (\r\n            <p>Loading...</p>\r\n          ) : revenueError ? (\r\n            <p>Error: {revenueError.message}</p>\r\n          ) : (\r\n            <div className=\"chart-container bg-white p-6 rounded-lg shadow-lg\">\r\n              <h2 className=\"text-lg font-semibold mb-4\">Thống kê doanh thu các công ty</h2>\r\n              <Bar data={revenueChartData} options={revenueChartOptions} />\r\n            </div>\r\n          )}\r\n        </TabPane>\r\n\r\n        {/* Tab 2: Cancellations */}\r\n        <TabPane tab=\"Hủy Vé\" key=\"2\">\r\n          {cancellationLoading ? (\r\n            <p>Loading...</p>\r\n          ) : cancellationError ? (\r\n            <p>Error: {cancellationError.message}</p>\r\n          ) : (\r\n            <div className=\"chart-container bg-white p-6 rounded-lg shadow-lg\">\r\n              <h2 className=\"text-lg font-semibold mb-4\">Thống kê tỷ lệ hủy vé</h2>\r\n              <Pie data={cancellationChartData} options={cancellationChartOptions} />\r\n            </div>\r\n          )}\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useToggleNewUserVoucherMutation, useCreateVoucherMutation } from '../../../Redux/Company/companyApiSlice';\r\nimport Notification from '../../shared/Notification/Notification';\r\n\r\nconst Settings = () => {\r\n  const [newUserVoucher, setNewUserVoucher] = useState(false);\r\n  const [toggleNewUserVoucher] = useToggleNewUserVoucherMutation();\r\n  const [createVoucher] = useCreateVoucherMutation();\r\n  const [notification, setNotification] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: 'success',\r\n  });\r\n\r\n  const [voucherData, setVoucherData] = useState({\r\n    code: '',\r\n    userId: '',\r\n    discount: '',\r\n    expiryDate: '',\r\n    type: 'system',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const storedSetting = JSON.parse(localStorage.getItem('newUserVoucher'));\r\n    if (storedSetting !== null) {\r\n      setNewUserVoucher(storedSetting);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('newUserVoucher', JSON.stringify(newUserVoucher));\r\n  }, [newUserVoucher]);\r\n\r\n  const handleToggleNewUserVoucher = async () => {\r\n    try {\r\n      await toggleNewUserVoucher(!newUserVoucher).unwrap();\r\n      setNewUserVoucher(!newUserVoucher);\r\n      setNotification({\r\n        open: true,\r\n        message: `Voucher khi đăng ký đã được ${!newUserVoucher ? 'bật' : 'tắt'} thành công.`,\r\n        severity: 'success',\r\n      });\r\n    } catch (error) {\r\n      console.error('Lỗi khi bật/tắt voucher người dùng mới:', error);\r\n      setNotification({\r\n        open: true,\r\n        message: 'Lỗi khi cập nhật cài đặt voucher. Vui lòng thử lại.',\r\n        severity: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCreateVoucher = async () => {\r\n    try {\r\n      await createVoucher(voucherData).unwrap();\r\n      setNotification({\r\n        open: true,\r\n        message: 'Tạo voucher thành công',\r\n        severity: 'success',\r\n      });\r\n      setVoucherData({ code: '', userId: '', discount: '', expiryDate: '', type: 'system' });\r\n    } catch (error) {\r\n      console.error('Lỗi khi tạo voucher:', error);\r\n      setNotification({\r\n        open: true,\r\n        message: 'Lỗi khi tạo voucher. Vui lòng thử lại.',\r\n        severity: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap justify-center gap-20 p-8 bg-gradient-to-br from-indigo-100 to-indigo-50 shadow-lg rounded-2xl max-w-5xl mx-auto\">\r\n      {/* Card Tặng Voucher Khi Đăng Ký */}\r\n      <div className=\"flex flex-col items-center p-10 bg-gradient-to-r from-indigo-100 via-white to-indigo-100 shadow-lg rounded-2xl max-w-md transform transition-all duration-300 hover:shadow-2xl\">\r\n        <h2 className=\"text-3xl font-semibold text-indigo-800 mb-6 animate-pulse\">Cài Đặt Voucher</h2>\r\n        \r\n        <div className=\"flex items-center justify-between w-full bg-white p-5 rounded-xl shadow-inner hover:shadow-lg transform transition duration-200\">\r\n          <span className=\"text-lg font-medium text-gray-700\">Tặng Voucher Khi Đăng Ký</span>\r\n          <label className=\"relative inline-flex items-center cursor-pointer\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={newUserVoucher}\r\n              onChange={handleToggleNewUserVoucher}\r\n              className=\"sr-only peer\"\r\n            />\r\n            <div className=\"w-12 h-7 bg-gray-300 rounded-full peer-focus:outline-none peer peer-checked:bg-indigo-600 transition-colors duration-300 ease-in-out\"></div>\r\n            <div className=\"w-6 h-6 bg-white border rounded-full absolute left-0.5 top-0.5 transform peer-checked:translate-x-5 transition-transform duration-300 ease-in-out shadow-md\"></div>\r\n          </label>\r\n        </div>\r\n\r\n        <p className=\"text-gray-600 text-sm mt-5 text-center\">\r\n          Bật tùy chọn này để tự động tặng voucher 50% cho tài khoản mới khi đăng ký.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Card Tạo Voucher Mới */}\r\n      <div className=\"flex flex-col items-center p-10 bg-gradient-to-r from-white to-indigo-100 shadow-lg rounded-2xl max-w-md transform transition-all duration-300 hover:shadow-2xl\">\r\n        <h2 className=\"text-3xl font-semibold text-indigo-800 mb-6\">Tạo Voucher Mới</h2>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Mã Voucher\"\r\n          value={voucherData.code}\r\n          onChange={(e) => setVoucherData({ ...voucherData, code: e.target.value })}\r\n          className=\"w-full mb-3 p-3 border rounded\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"User ID (Nếu là Voucher Cá Nhân)\"\r\n          value={voucherData.userId}\r\n          onChange={(e) => setVoucherData({ ...voucherData, userId: e.target.value })}\r\n          className=\"w-full mb-3 p-3 border rounded\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Giảm Giá (%)\"\r\n          value={voucherData.discount}\r\n          onChange={(e) => setVoucherData({ ...voucherData, discount: e.target.value })}\r\n          className=\"w-full mb-3 p-3 border rounded\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          placeholder=\"Ngày Hết Hạn\"\r\n          value={voucherData.expiryDate}\r\n          onChange={(e) => setVoucherData({ ...voucherData, expiryDate: e.target.value })}\r\n          className=\"w-full mb-3 p-3 border rounded\"\r\n        />\r\n        <select\r\n          value={voucherData.type}\r\n          onChange={(e) => setVoucherData({ ...voucherData, type: e.target.value })}\r\n          className=\"w-full mb-3 p-3 border rounded\"\r\n        >\r\n          <option value=\"system\">Hệ Thống</option>\r\n          <option value=\"personal\">Cá Nhân</option>\r\n        </select>\r\n        <button\r\n          onClick={handleCreateVoucher}\r\n          className=\"w-full bg-indigo-600 text-white py-3 rounded transition duration-200 hover:bg-indigo-700\"\r\n        >\r\n          Tạo Voucher\r\n        </button>\r\n      </div>\r\n\r\n      {/* Thông Báo */}\r\n      <Notification\r\n        open={notification.open}\r\n        onClose={() => setNotification({ ...notification, open: false })}\r\n        severity={notification.severity}\r\n        message={notification.message}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useState } from 'react';\r\nimport { useGetCompanyRequestsQuery, useUpdateCompanyRequestMutation } from '../../../Redux/User/apiSlice';\r\nimport { Table, Tag, Button, Modal, message, Space } from 'antd';\r\n\r\nconst CompanyRequests = () => {\r\n  const { data: companyRequests, isLoading } = useGetCompanyRequestsQuery();\r\n  const [updateCompanyRequest] = useUpdateCompanyRequestMutation();\r\n  const [selectedRequest, setSelectedRequest] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleAction = async (requestId, status) => {\r\n    try {\r\n      console.log({ requestId, status }); // Log dữ liệu gửi đi\r\n      await updateCompanyRequest({ requestId, status }).unwrap();\r\n      message.success(`Yêu cầu đã được ${status === 'Approved' ? 'phê duyệt' : 'từ chối'} thành công!`);\r\n    } catch (error) {\r\n      console.error('Lỗi khi cập nhật yêu cầu:', error); // Log lỗi chi tiết\r\n\r\n      // Hiển thị lỗi từ backend (nếu có)\r\n      if (error?.data?.message) {\r\n        message.error(error.data.message);\r\n      } else {\r\n        message.error('Đã xảy ra lỗi. Vui lòng thử lại.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Tên công ty',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (status) => (\r\n        <Tag color={status === 'Pending' ? 'blue' : status === 'Approved' ? 'green' : 'red'}>\r\n          {status === 'Pending' ? 'Chờ xử lý' : status === 'Approved' ? 'Đã phê duyệt' : 'Đã từ chối'}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Thông tin người dùng',\r\n      dataIndex: 'userId',\r\n      key: 'userId',\r\n      render: (user) => (\r\n        <div>\r\n          <p>{user?.fullName}</p>\r\n          <p style={{ fontSize: '12px', color: '#888' }}>{user?.email}</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Ngày tạo',\r\n      dataIndex: 'createdAt',\r\n      key: 'createdAt',\r\n      render: (date) => new Date(date).toLocaleDateString('vi-VN'),\r\n    },\r\n    {\r\n      title: 'Hành động',\r\n      key: 'actions',\r\n      render: (_, record) => (\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleAction(record._id, 'Approved')}\r\n            disabled={record.status !== 'Pending'}\r\n          >\r\n            Phê duyệt\r\n          </Button>\r\n          <Button\r\n            danger\r\n            onClick={() => handleAction(record._id, 'Rejected')}\r\n            disabled={record.status !== 'Pending'}\r\n          >\r\n            Từ chối\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setSelectedRequest(record);\r\n              setIsModalOpen(true);\r\n            }}\r\n          >\r\n            Xem chi tiết\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return <p>Đang tải danh sách yêu cầu...</p>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h1>Danh sách yêu cầu công ty</h1>\r\n      <Table\r\n        dataSource={companyRequests?.data || []}\r\n        columns={columns}\r\n        rowKey=\"_id\"\r\n        bordered\r\n        pagination={{ pageSize: 10 }}\r\n      />\r\n      <Modal\r\n        title=\"Chi tiết yêu cầu\"\r\n        open={isModalOpen}\r\n        onCancel={() => setIsModalOpen(false)}\r\n        footer={[\r\n          <Button key=\"close\" onClick={() => setIsModalOpen(false)}>\r\n            Đóng\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {selectedRequest && (\r\n          <div>\r\n            <p><strong>Tên công ty:</strong> {selectedRequest.name}</p>\r\n            <p><strong>Trạng thái:</strong> {selectedRequest.status === 'Pending' ? 'Chờ xử lý' : selectedRequest.status === 'Approved' ? 'Đã phê duyệt' : 'Đã từ chối'}</p>\r\n            <p><strong>Địa chỉ:</strong> {selectedRequest.address}</p>\r\n            <p><strong>Thông tin liên lạc:</strong> {selectedRequest.contactInfo}</p>\r\n            <p><strong>Số điện thoại:</strong> {selectedRequest.phoneNumber}</p>\r\n            <p><strong>Email:</strong> {selectedRequest.email}</p>\r\n            <p><strong>Website:</strong> {selectedRequest.website}</p>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyRequests;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Sidebar from './SideBar/Sidebar';\r\nimport ManageCompanies from './navSideBar/ManageCompanies';\r\nimport ManageAdmins from './navSideBar/ManageAdmins';\r\nimport ManageUsers from './navSideBar/ManageUsers';\r\nimport './SuperAdminDashboard.css';\r\nimport Statistics from './navSideBar/Statistics';\r\nimport Settings from './navSideBar/Settings';\r\nimport Location from './navSideBar/Location';\r\nimport Require from './navSideBar/Require';\r\nimport FAQManagement from './navSideBar/FAQManagement';\r\nconst SuperAdminDashboard = () => {\r\n  const [activeContent, setActiveContent] = useState('default');\r\n  const [collapsed, setCollapsed] = useState(false); \r\n\r\n  useEffect(() => {\r\n    notify();\r\n  }, []);\r\n\r\n  // Thông báo chào mừng\r\n  const notify = () => {\r\n    toast.success(\"Chào mừng bạn đến với hệ thống!\", {\r\n      autoClose: 1500,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      position: 'top-right' // Đặt vị trí thông báo cho dễ nhìn\r\n    });\r\n  };\r\n\r\n  // Render nội dung chính theo từng lựa chọn\r\n  const renderContent = () => {\r\n    switch (activeContent) {\r\n      case 'default':\r\n        return (\r\n          <div className=\"text-3xl font-bold text-center text-red-500 mt-10\">\r\n            CHÀO MỪNG BẠN ĐẾN TRANG QUẢN LÍ HỆ THỐNG\r\n          </div>\r\n        );\r\n      case 'companies':\r\n        return <ManageCompanies />;\r\n      case 'admins':\r\n        return <ManageAdmins />;\r\n      case 'users':\r\n        return <ManageUsers />;\r\n      case 'statistics':\r\n        return <Statistics />;\r\n      case 'Location':\r\n        return <Location/>\r\n      case 'require':\r\n          return <Require />;\r\n      case 'settings':\r\n        return <Settings />;\r\n      case 'faq':\r\n          return <FAQManagement />;\r\n      case 'reports':\r\n        return <div>Báo cáo Content</div>;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"super-admin-dashboard flex\">\r\n      <Sidebar setActiveContent={setActiveContent} collapsed={collapsed} setCollapsed={setCollapsed} />\r\n      <div className={`main-content transition-all duration-300 ${collapsed ? 'ml-16' : 'ml-64'} p-8`}>\r\n        {renderContent()}\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuperAdminDashboard;\r\n","import React, { useState } from 'react';\r\nimport { Button, Input, Modal, Card, Col, Row, Form, Space, Typography, message } from 'antd';\r\nimport { PlusOutlined, EditOutlined, EyeOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { useGetLocationsQuery, useCreateLocationMutation, useGetLocationByIdQuery, useUpdateLocationMutation, useDeleteLocationMutation } from '../../../Redux/Location/locationApiSlice';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Location = () => {\r\n  const [selectedLocationId, setSelectedLocationId] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [newLocation, setNewLocation] = useState({ name: '', address: '', city: '', coordinates: [0, 0] });\r\n\r\n  const { data: locations, error, isLoading } = useGetLocationsQuery();\r\n  const [createLocation] = useCreateLocationMutation();\r\n  const [updateLocation] = useUpdateLocationMutation();\r\n  const [deleteLocation] = useDeleteLocationMutation();\r\n\r\n  const { data: locationDetail } = useGetLocationByIdQuery(selectedLocationId, { skip: !selectedLocationId });\r\n\r\n  const handleOpenModal = (location = null) => {\r\n    setIsEditing(!!location);\r\n    setNewLocation(location || { name: '', address: '', city: '', coordinates: [0, 0] });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => setIsModalOpen(false);\r\n\r\n  const handleCreateOrUpdate = async () => {\r\n    try {\r\n      if (isEditing) {\r\n        await updateLocation({ id: newLocation._id, updatedLocation: newLocation }).unwrap();\r\n        message.success('Location updated successfully');\r\n      } else {\r\n        await createLocation(newLocation).unwrap();\r\n        message.success('Location created successfully');\r\n      }\r\n      handleCloseModal();\r\n    } catch (error) {\r\n      message.error('Failed to save location');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteLocation(id).unwrap();\r\n      message.success('Location deleted successfully');\r\n    } catch (error) {\r\n      message.error('Failed to delete location');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 bg-gray-100 min-h-screen\">\r\n      <Title level={2} className=\"text-center text-blue-700 mb-8 font-bold\">Location Management</Title>\r\n\r\n      {/* Danh sách địa điểm */}\r\n      <div className=\"bg-white p-4 rounded-lg shadow-lg mb-8\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <Title level={4} className=\"text-blue-600\">All Locations</Title>\r\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => handleOpenModal()} className=\"bg-blue-600\">Add Location</Button>\r\n        </div>\r\n\r\n        {isLoading && <p>Loading...</p>}\r\n        {error && <p className=\"text-red-500\">Error loading locations</p>}\r\n\r\n        <Row gutter={16}>\r\n          {locations?.data?.map((location) => (\r\n            <Col xs={24} sm={12} md={8} lg={6} key={location._id}>\r\n              <Card\r\n                hoverable\r\n                className=\"location-card shadow-md hover:shadow-lg transition-shadow duration-300\"\r\n                actions={[\r\n                  <EyeOutlined onClick={() => setSelectedLocationId(location._id)} />,\r\n                  <EditOutlined onClick={() => handleOpenModal(location)} />,\r\n                  <DeleteOutlined onClick={() => handleDelete(location._id)} />,\r\n                ]}\r\n              >\r\n                <Card.Meta\r\n                  title={<span className=\"text-blue-600 font-semibold\">{location.name}</span>}\r\n                  description={`${location.address}, ${location.city}`}\r\n                />\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n\r\n      {/* Chi tiết địa điểm */}\r\n      {locationDetail && (\r\n        <div className=\"bg-white p-4 rounded-lg shadow-lg mb-6\">\r\n          <Title level={4} className=\"text-blue-600\">Location Detail</Title>\r\n          <p><strong>Name:</strong> {locationDetail.data.name}</p>\r\n          <p><strong>Address:</strong> {locationDetail.data.address}</p>\r\n          <p><strong>City:</strong> {locationDetail.data.city}</p>\r\n          <p><strong>Coordinates:</strong> {locationDetail.data.coordinates.coordinates.join(', ')}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal Thêm / Cập nhật địa điểm */}\r\n      <Modal\r\n        title={isEditing ? 'Edit Location' : 'Add New Location'}\r\n        visible={isModalOpen}\r\n        onOk={handleCreateOrUpdate}\r\n        onCancel={handleCloseModal}\r\n        okText={isEditing ? 'Update' : 'Create'}\r\n        okButtonProps={{ className: 'bg-blue-600' }}\r\n      >\r\n        <Form layout=\"vertical\">\r\n          <Form.Item label=\"Name\" required>\r\n            <Input\r\n              value={newLocation.name}\r\n              onChange={(e) => setNewLocation({ ...newLocation, name: e.target.value })}\r\n              placeholder=\"Enter location name\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Address\" required>\r\n            <Input\r\n              value={newLocation.address}\r\n              onChange={(e) => setNewLocation({ ...newLocation, address: e.target.value })}\r\n              placeholder=\"Enter address\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"City\" required>\r\n            <Input\r\n              value={newLocation.city}\r\n              onChange={(e) => setNewLocation({ ...newLocation, city: e.target.value })}\r\n              placeholder=\"Enter city\"\r\n            />\r\n          </Form.Item>\r\n          <Space>\r\n            <Form.Item label=\"Latitude\" required>\r\n              <Input\r\n                type=\"number\"\r\n                value={newLocation.coordinates[0]}\r\n                onChange={(e) => setNewLocation({ ...newLocation, coordinates: [parseFloat(e.target.value), newLocation.coordinates[1]] })}\r\n                placeholder=\"Enter latitude\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item label=\"Longitude\" required>\r\n              <Input\r\n                type=\"number\"\r\n                value={newLocation.coordinates[1]}\r\n                onChange={(e) => setNewLocation({ ...newLocation, coordinates: [newLocation.coordinates[0], parseFloat(e.target.value)] })}\r\n                placeholder=\"Enter longitude\"\r\n              />\r\n            </Form.Item>\r\n          </Space>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import React from 'react'\r\n\r\nconst ManageAdmins = () => {\r\n  return (\r\n    <div>ManageAdmins</div>\r\n  )\r\n}\r\n\r\nexport default ManageAdmins","import React from 'react';\r\n\r\nconst CompanyForm = ({\r\n  companyName,\r\n  setCompanyName,\r\n  address,\r\n  setAddress,\r\n  contactInfo,\r\n  setContactInfo,\r\n  phoneNumber,\r\n  setPhoneNumber,\r\n  email,\r\n  setEmail,\r\n  isActive,\r\n  setIsActive,\r\n  handleCreateOrUpdateCompany,\r\n  creating,\r\n  selectedCompanyId,\r\n}) => {\r\n  return (\r\n    <div className=\"w-full flex justify-center items-start p-4\">\r\n      <form\r\n        onSubmit={handleCreateOrUpdateCompany}\r\n        className=\"bg-white shadow-md rounded-lg p-4 space-y-4 max-w-sm w-full border border-gray-200\"\r\n      >\r\n        <h2 className=\"text-xl font-semibold text-center text-blue-600\">\r\n          {selectedCompanyId ? 'Cập nhật công ty' : 'Tạo công ty mới'}\r\n        </h2>\r\n\r\n        {/* Company Name */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Tên công ty</label>\r\n          <input\r\n            type=\"text\"\r\n            value={companyName}\r\n            onChange={(e) => setCompanyName(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập tên công ty\"\r\n          />\r\n        </div>\r\n\r\n        {/* Address */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Địa chỉ</label>\r\n          <input\r\n            type=\"text\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập địa chỉ\"\r\n          />\r\n        </div>\r\n\r\n        {/* Contact Info */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Thông tin liên hệ</label>\r\n          <input\r\n            type=\"text\"\r\n            value={contactInfo}\r\n            onChange={(e) => setContactInfo(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập thông tin liên hệ\"\r\n          />\r\n        </div>\r\n\r\n        {/* Phone Number */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Số điện thoại</label>\r\n          <input\r\n            type=\"text\"\r\n            value={phoneNumber}\r\n            onChange={(e) => setPhoneNumber(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập số điện thoại\"\r\n          />\r\n        </div>\r\n\r\n        {/* Email */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập email\"\r\n          />\r\n        </div>\r\n\r\n        {/* Active Status Toggle */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Kích hoạt</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isActive}\r\n            onChange={(e) => setIsActive(e.target.checked)}\r\n            className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n          />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <button\r\n          type=\"submit\"\r\n          className={`w-full py-2 text-white font-medium rounded-lg shadow ${\r\n            creating\r\n              ? 'bg-blue-300 cursor-not-allowed'\r\n              : 'bg-gradient-to-r from-blue-500 to-blue-600 hover:bg-blue-700'\r\n          } focus:outline-none focus:ring-2 focus:ring-blue-500`}\r\n          disabled={creating}\r\n        >\r\n          {creating ? 'Đang lưu...' : selectedCompanyId ? 'Cập nhật' : 'Lưu'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyForm;\r\n","import React from 'react';\r\nimport Notification from '../../../shared/Notification/Notification';\r\n\r\nconst SnackbarNotification = ({ open, onClose, severity, message }) => {\r\n  return (\r\n    <Notification\r\n      open={open}\r\n      onClose={onClose}\r\n      severity={severity}\r\n      message={message}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SnackbarNotification;\r\n","import React from 'react';\r\n\r\nconst CompanyCard = ({ company, onClick, onToggleStatus }) => {\r\n  return (\r\n    <div\r\n      className=\"company-card bg-gradient-to-r from-blue-400 to-purple-300 rounded-lg shadow-lg p-6 hover:shadow-2xl transition-shadow duration-300 cursor-pointer text-white\"\r\n      onClick={onClick}\r\n    >\r\n      <h3 className=\"text-lg font-bold mb-2\">{company.name}</h3>\r\n      <p className=\"text-sm mb-4\">{company.address}</p>\r\n      <p\r\n        className={`text-sm font-semibold ${\r\n          company.isActive ? 'text-green-200' : 'text-red-200'\r\n        }`}\r\n      >\r\n        {company.isActive ? 'Kích hoạt' : 'Vô hiệu hóa'}\r\n      </p>\r\n\r\n      <div className=\"mt-4 flex items-center\">\r\n        <label className=\"relative inline-flex items-center cursor-pointer\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"sr-only\"\r\n            checked={company.isActive}\r\n            onChange={() => onToggleStatus(company._id)}\r\n          />\r\n          <div\r\n            className={`w-10 h-5 rounded-full transition-all duration-300 ease-in-out ${\r\n              company.isActive ? 'bg-green-400' : 'bg-red-400'\r\n            }`}\r\n          >\r\n            <div\r\n              className={`dot absolute left-1 top-1 bg-white w-3 h-3 rounded-full transition-transform duration-300 ease-in-out ${\r\n                company.isActive ? 'transform translate-x-5' : ''\r\n              }`}\r\n            ></div>\r\n          </div>\r\n          <span className=\"ml-3 text-sm\">\r\n            {company.isActive ? 'Vô hiệu hóa' : 'Kích hoạt'}\r\n          </span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyCard;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  useAddCompanyAdminMutation,\r\n  useCreateCompanyMutation,\r\n  useUpdateCompanyMutation,\r\n  useGetCompaniesQuery,\r\n  useToggleCompanyStatusMutation,\r\n} from '../../../Redux/Company/companyApiSlice';\r\nimport CompanyForm from './Company/CompanyForm';\r\nimport SnackbarNotification from './Company/SnackbarNotification';\r\nimport CompanyCard from './Company/CompanyCard';\r\n\r\nconst ManageCompanies = () => {\r\n  const [companyName, setCompanyName] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [contactInfo, setContactInfo] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [selectedCompanyId, setSelectedCompanyId] = useState(null);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [snackbarSeverity, setSnackbarSeverity] = useState('success');\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [adminUserName, setAdminUserName] = useState('');\r\n  const [adminPassword, setAdminPassword] = useState('');\r\n  const [adminPhoneNumber, setAdminPhoneNumber] = useState('');\r\n  const [adminEmail, setAdminEmail] = useState('');\r\n  const [showAddAdmin, setShowAddAdmin] = useState(false);\r\n\r\n  const { data: companiesData, isLoading: isCompaniesLoading, error: companiesError } = useGetCompaniesQuery();\r\n  const [createCompany, { isLoading: isCreating }] = useCreateCompanyMutation();\r\n  const [updateCompany] = useUpdateCompanyMutation();\r\n  const [toggleCompanyStatus] = useToggleCompanyStatusMutation();\r\n  const [addCompanyAdmin, { isLoading: isAddingAdmin }] = useAddCompanyAdminMutation();\r\n\r\n  const [companies, setCompanies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (companiesData) {\r\n      setCompanies(companiesData.companies);\r\n    }\r\n  }, [companiesData]);\r\n\r\n  const modalRef = useRef(null);\r\n\r\n  const resetForm = () => {\r\n    setCompanyName('');\r\n    setAddress('');\r\n    setContactInfo('');\r\n    setPhoneNumber('');\r\n    setEmail('');\r\n    setSelectedCompanyId(null);\r\n    setAdminUserName('');\r\n    setAdminPassword('');\r\n    setAdminEmail('');\r\n    setAdminPhoneNumber('');\r\n    setShowAddAdmin(false);\r\n  };\r\n\r\n  const showSnackbar = (severity, message) => {\r\n    setSnackbarSeverity(severity);\r\n    setSnackbarMessage(message);\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const handleToggleStatus = async (companyId) => {\r\n    try {\r\n        const updatedCompany = await toggleCompanyStatus(companyId).unwrap();\r\n        setCompanies((prevCompanies) =>\r\n            prevCompanies.map((company) =>\r\n                company._id === updatedCompany.company._id ? updatedCompany.company : company\r\n            )\r\n        );\r\n        \r\n        // Hiển thị thông báo khi thay đổi trạng thái công ty thành công\r\n        showSnackbar(\r\n            'success',\r\n            `Công ty ${updatedCompany.company.isActive ? 'đã được kích hoạt' : 'đã bị vô hiệu hóa'} và tất cả các tài khoản liên quan cũng được cập nhật trạng thái.`\r\n        );\r\n    } catch (error) {\r\n        showSnackbar('error', 'Không thể thay đổi trạng thái công ty.');\r\n    }\r\n};\r\n\r\n  const handleCreateOrUpdateCompany = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const companyData = { name: companyName, address, contactInfo, phoneNumber, email };\r\n\r\n      if (selectedCompanyId) {\r\n        const updatedCompany = await updateCompany({ companyId: selectedCompanyId, updatedData: companyData }).unwrap();\r\n        setCompanies((prevCompanies) =>\r\n          prevCompanies.map((company) =>\r\n            company._id === updatedCompany.company._id ? updatedCompany.company : company\r\n          )\r\n        );\r\n        showSnackbar('success', 'Cập nhật công ty thành công!');\r\n      } else {\r\n        const newCompany = await createCompany(companyData).unwrap();\r\n        setCompanies((prevCompanies) => [...prevCompanies, newCompany.company]);\r\n        showSnackbar('success', 'Tạo công ty thành công!');\r\n      }\r\n\r\n      resetForm();\r\n      setModalVisible(false);\r\n      document.body.style.overflow = 'auto'; // Re-enable scrolling when modal is closed\r\n    } catch (error) {\r\n      showSnackbar('error', 'Không thể thực hiện tác vụ. Vui lòng kiểm tra thông tin và thử lại.');\r\n    }\r\n  };\r\n\r\n  const handleCardClick = (company) => {\r\n    setSelectedCompanyId(company._id);\r\n    setCompanyName(company.name);\r\n    setAddress(company.address);\r\n    setContactInfo(company.contactInfo);\r\n    setPhoneNumber(company.phoneNumber);\r\n    setEmail(company.email);\r\n    setModalVisible(true);\r\n    setShowAddAdmin(true);\r\n    document.body.style.overflow = 'hidden';\r\n  };\r\n\r\n  const handleAddAdmin = async () => {\r\n    if (adminUserName && adminPassword) {\r\n      try {\r\n        await addCompanyAdmin({\r\n          companyId: selectedCompanyId,\r\n          userName: adminUserName,\r\n          password: adminPassword,\r\n          email: adminEmail,         \r\n          phoneNumber: adminPhoneNumber\r\n        }).unwrap();\r\n        showSnackbar('success', 'Thêm admin thành công!');\r\n        resetForm();\r\n      } catch (error) {\r\n        showSnackbar('error', error?.data?.message || 'Không thể thêm admin. Vui lòng kiểm tra thông tin và thử lại.');\r\n      }\r\n    } else {\r\n      showSnackbar('warning', 'Vui lòng nhập tên đăng nhập và mật khẩu.');\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n      setModalVisible(false);\r\n      document.body.style.overflow = 'hidden'; // Re-enable scrolling when modal is closed\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"manage-companies bg-gradient-to-r from-blue-50 to-blue-100 min-h-screen p-8\">\r\n      <h2 className=\"text-3xl font-bold mb-4\">{selectedCompanyId ? 'Cập nhật Công Ty' : 'Tạo Công Ty'}</h2>\r\n      <button\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition duration-300 mb-6\"\r\n        onClick={() => {\r\n          resetForm();\r\n          setModalVisible(true);\r\n          setShowAddAdmin(false);\r\n          document.body.style.overflow = 'hidden'; \r\n        }}\r\n      >\r\n        <i className=\"fas fa-plus\"></i> Thêm công ty\r\n      </button>\r\n\r\n      {/* Modal for creating/updating company */}\r\n      {modalVisible && (\r\n        <div className=\"fixed inset-y-0 right-0 bg-white shadow-lg z-50 w-1/4 overflow-y-auto\" ref={modalRef}>\r\n          <div className=\"p-6 relative\">\r\n            <span\r\n              className=\"absolute top-2 right-4 text-gray-500 cursor-pointer hover:text-gray-700 transition\"\r\n              onClick={() => {\r\n                setModalVisible(false);\r\n                document.body.style.overflow = 'auto'; // Re-enable scrolling when modal is closed\r\n              }}\r\n            >\r\n              &times;\r\n            </span>\r\n            <CompanyForm\r\n              companyName={companyName}\r\n              setCompanyName={setCompanyName}\r\n              address={address}\r\n              setAddress={setAddress}\r\n              contactInfo={contactInfo}\r\n              setContactInfo={setContactInfo}\r\n              phoneNumber={phoneNumber}\r\n              setPhoneNumber={setPhoneNumber}\r\n              email={email}\r\n              setEmail={setEmail}\r\n              handleCreateOrUpdateCompany={handleCreateOrUpdateCompany}\r\n              creating={isCreating}\r\n              selectedCompanyId={selectedCompanyId}\r\n            />\r\n            {showAddAdmin && (\r\n              <div className=\"mt-8\">\r\n                <h4 className=\"text-lg font-semibold mb-4\">Thêm Admin cho Công Ty</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={adminUserName}\r\n                  onChange={(e) => setAdminUserName(e.target.value)}\r\n                  placeholder=\"Tên Đăng Nhập của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  value={adminPassword}\r\n                  onChange={(e) => setAdminPassword(e.target.value)}\r\n                  placeholder=\"Mật khẩu của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n                 <input\r\n                  type=\"email\"\r\n                  value={adminEmail}\r\n                  onChange={(e) => setAdminEmail(e.target.value)}\r\n                  placeholder=\"Email của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n\r\n                  <input\r\n                  type=\"text\"\r\n                  value={adminPhoneNumber}\r\n                  onChange={(e) => setAdminPhoneNumber(e.target.value)}  \r\n                  placeholder=\"Số điện thoại của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n                <button\r\n                  onClick={handleAddAdmin}\r\n                  disabled={isAddingAdmin}\r\n                  className=\"bg-green-500 text-white w-full py-2 rounded-lg hover:bg-green-600 transition duration-300\"\r\n                >\r\n                  {isAddingAdmin ? 'Đang thêm...' : 'Thêm Admin'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <h3 className=\"text-xl font-semibold mt-8 mb-4\">Danh sách các công ty</h3>\r\n      <div className=\"company-cards grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {isCompaniesLoading ? (\r\n          <p>Đang tải...</p>\r\n        ) : (\r\n          companies.map((company) => (\r\n            <CompanyCard\r\n              key={company._id}\r\n              company={company}\r\n              onClick={() => handleCardClick(company)}\r\n              onToggleStatus={handleToggleStatus}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {companiesError && <p className=\"text-red-500 mt-4\">{companiesError}</p>}\r\n      <SnackbarNotification\r\n        open={snackbarOpen}\r\n        onClose={() => setSnackbarOpen(false)}\r\n        severity={snackbarSeverity}\r\n        message={snackbarMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageCompanies;\r\n","import React, { useEffect } from 'react';\r\nimport { Table, Button, Tag, Space, Spin } from 'antd';\r\nimport { useGetAllUsersByLastLoginQuery } from '../../../Redux/User/apiSlice'; // Chỉnh đường dẫn nếu cần\r\nimport moment from 'moment';\r\n\r\nconst ManageUsers = () => {\r\n  const { data: usersData, isLoading, refetch } = useGetAllUsersByLastLoginQuery();\r\n\r\n  // Định nghĩa các cột cho bảng người dùng\r\n  const columns = [\r\n    {\r\n      title: 'Tên người dùng',\r\n      dataIndex: 'userName',\r\n      key: 'userName',\r\n      render: (text) => <span className=\"font-semibold\">{text}</span>,\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Vai trò',\r\n      dataIndex: 'roleId',\r\n      key: 'roleId',\r\n      render: (roleId) => {\r\n        let color = roleId === 'superadmin' ? 'volcano' : roleId === 'companyadmin' ? 'green' : 'blue';\r\n        return <Tag color={color}>{roleId.toUpperCase()}</Tag>;\r\n      },\r\n    },\r\n    {\r\n      title: 'Ngày đăng nhập cuối',\r\n      dataIndex: 'lastLogin',\r\n      key: 'lastLogin',\r\n      render: (lastLogin) => (lastLogin ? moment(lastLogin).format('DD-MM-YYYY HH:mm') : 'Chưa đăng nhập'),\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'isActive',\r\n      key: 'isActive',\r\n      render: (isActive) => (\r\n        <Tag color={isActive ? 'green' : 'red'}>\r\n          {isActive ? 'Hoạt động' : 'Vô hiệu hóa'}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Hành động',\r\n      key: 'action',\r\n      render: (record) => (\r\n        <Space size=\"middle\">\r\n          <Button type=\"primary\" onClick={() => handleEditUser(record)}>\r\n            Sửa\r\n          </Button>\r\n          <Button danger onClick={() => handleToggleStatus(record)}>\r\n            {record.isActive ? 'Vô hiệu hóa' : 'Kích hoạt'}\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleEditUser = (user) => {\r\n    // Logic mở modal hoặc điều hướng đến trang chỉnh sửa người dùng\r\n    console.log('Chỉnh sửa người dùng:', user);\r\n  };\r\n\r\n  const handleToggleStatus = async (user) => {\r\n    try {\r\n      // Gọi API để cập nhật trạng thái của người dùng\r\n      console.log('Thay đổi trạng thái người dùng:', user);\r\n    } catch (error) {\r\n      console.error('Không thể thay đổi trạng thái:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Hàm refetch để cập nhật lại dữ liệu\r\n    refetch();\r\n  }, [refetch]);\r\n\r\n  return (\r\n    <div className=\"p-6 bg-gradient-to-r from-blue-50 to-blue-100 min-h-screen\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h2 className=\"text-3xl font-bold\">Quản lý người dùng</h2>\r\n        <Button type=\"primary\" onClick={refetch}>\r\n          Cập nhật danh sách\r\n        </Button>\r\n      </div>\r\n      \r\n      {isLoading ? (\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <Spin size=\"large\" />\r\n        </div>\r\n      ) : (\r\n        <Table \r\n          columns={columns} \r\n          dataSource={Array.isArray(usersData?.users) ? usersData.users : []} \r\n          rowKey={(record) => record._id} \r\n          className=\"bg-white shadow-lg rounded-lg overflow-hidden\"\r\n          pagination={{ pageSize: 10 }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageUsers;\r\n"],"names":["_ref","setActiveContent","dispatch","useDispatch","collapsed","setCollapsed","useState","handleNavigation","content","_jsxs","className","children","_jsx","onClick","FaChevronRight","FaChevronLeft","Tooltip","title","placement","visible","FaHome","FaClipboardList","FaUser","FaChartBar","FaSearchLocation","FaCogs","handleLogout","logout","window","location","href","FaSignOutAlt","ChartJS","register","CategoryScale","LinearScale","BarElement","ArcElement","Title","Legend","TabPane","Tabs","Statistics","data","revenueData","error","revenueError","isLoading","revenueLoading","useGetRevenueByCompanyQuery","cancellationData","cancellationError","cancellationLoading","useGetCancellationStatisticsQuery","revenueChartData","labels","map","item","companyName","datasets","label","totalRevenue","backgroundColor","onlineRevenue","onboardRevenue","cancellationChartData","cancellationPercentage","borderColor","borderWidth","defaultActiveKey","tab","message","Bar","options","responsive","plugins","legend","position","display","text","Pie","Settings","newUserVoucher","setNewUserVoucher","toggleNewUserVoucher","useToggleNewUserVoucherMutation","createVoucher","useCreateVoucherMutation","notification","setNotification","open","severity","voucherData","setVoucherData","code","userId","discount","expiryDate","type","useEffect","storedSetting","JSON","parse","localStorage","getItem","setItem","stringify","checked","onChange","async","unwrap","console","placeholder","value","e","target","Notification","onClose","CompanyRequests","companyRequests","useGetCompanyRequestsQuery","updateCompanyRequest","useUpdateCompanyRequestMutation","selectedRequest","setSelectedRequest","isModalOpen","setIsModalOpen","handleAction","requestId","status","log","success","_error$data","columns","dataIndex","key","render","Tag","color","user","fullName","style","fontSize","email","date","Date","toLocaleDateString","_","record","Space","Button","_id","disabled","danger","padding","Table","dataSource","rowKey","bordered","pagination","pageSize","Modal","onCancel","footer","name","address","contactInfo","phoneNumber","website","SuperAdminDashboard","activeContent","notify","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Sidebar","renderContent","ManageCompanies","ManageAdmins","ManageUsers","Location","Require","FAQManagement","ToastContainer","Typography","_locations$data","selectedLocationId","setSelectedLocationId","isEditing","setIsEditing","newLocation","setNewLocation","city","coordinates","locations","useGetLocationsQuery","createLocation","useCreateLocationMutation","updateLocation","useUpdateLocationMutation","deleteLocation","useDeleteLocationMutation","locationDetail","useGetLocationByIdQuery","skip","handleOpenModal","arguments","length","handleCloseModal","level","icon","PlusOutlined","Row","gutter","Col","xs","sm","md","lg","Card","hoverable","actions","EyeOutlined","EditOutlined","DeleteOutlined","id","handleDelete","Meta","description","join","onOk","updatedLocation","okText","okButtonProps","Form","layout","Item","required","Input","parseFloat","setCompanyName","setAddress","setContactInfo","setPhoneNumber","setEmail","isActive","setIsActive","handleCreateOrUpdateCompany","creating","selectedCompanyId","onSubmit","company","onToggleStatus","setSelectedCompanyId","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","modalVisible","setModalVisible","adminUserName","setAdminUserName","adminPassword","setAdminPassword","adminPhoneNumber","setAdminPhoneNumber","adminEmail","setAdminEmail","showAddAdmin","setShowAddAdmin","companiesData","isCompaniesLoading","companiesError","useGetCompaniesQuery","createCompany","isCreating","useCreateCompanyMutation","updateCompany","useUpdateCompanyMutation","toggleCompanyStatus","useToggleCompanyStatusMutation","addCompanyAdmin","isAddingAdmin","useAddCompanyAdminMutation","companies","setCompanies","modalRef","useRef","resetForm","showSnackbar","handleToggleStatus","updatedCompany","companyId","prevCompanies","handleClickOutside","event","current","contains","document","body","overflow","addEventListener","removeEventListener","ref","CompanyForm","preventDefault","companyData","updatedData","newCompany","userName","password","CompanyCard","handleCardClick","SnackbarNotification","usersData","refetch","useGetAllUsersByLastLoginQuery","roleId","toUpperCase","lastLogin","moment","format","size","handleEditUser","Spin","Array","isArray","users"],"sourceRoot":""}