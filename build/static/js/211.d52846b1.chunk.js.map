{"version":3,"file":"static/js/211.d52846b1.chunk.js","mappings":"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","sources":["components/SuperAdmin/SideBar/Sidebar.js","components/SuperAdmin/navSideBar/Statistics.js","components/SuperAdmin/navSideBar/Settings.js","components/SuperAdmin/SuperAdminDashboard.js","components/SuperAdmin/navSideBar/ManageAdmins.js","components/SuperAdmin/navSideBar/Company/CompanyForm.js","components/SuperAdmin/navSideBar/Company/SnackbarNotification.js","components/SuperAdmin/navSideBar/Company/CompanyCard.js","components/SuperAdmin/navSideBar/ManageCompanies.js","components/SuperAdmin/navSideBar/ManageUsers.js","components/shared/Notification/Notification.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FaHome, FaClipboardList, FaUser, FaChartBar, FaCogs, FaSignOutAlt, FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from '../../../Redux/User/userSlice';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst Sidebar = ({ setActiveContent }) => {\r\n  const dispatch = useDispatch();\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const handleNavigation = (content) => {\r\n    setActiveContent(content);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`h-screen fixed top-0 left-0 flex flex-col items-center bg-gray-900 text-white shadow-lg transition-all duration-300 ${\r\n        collapsed ? 'w-16' : 'w-64'\r\n      }`}\r\n    >\r\n      {/* Sidebar Header */}\r\n      <div className=\"w-full p-4 flex justify-between items-center bg-gray-800\">\r\n        {!collapsed && <span className=\"font-bold text-lg\">Quản lý Hệ thống</span>}\r\n        <button\r\n          className=\"text-xl text-gray-400 hover:text-white focus:outline-none ml-auto\"\r\n          onClick={() => setCollapsed(!collapsed)}\r\n        >\r\n          {collapsed ? <FaChevronRight /> : <FaChevronLeft />}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Navigation Menu */}\r\n      <ul className=\"flex-1 w-full mt-4 space-y-1\">\r\n        {/* Tổng Quan */}\r\n        <Tooltip title=\"Tổng Quan\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('default')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaHome className=\"text-xl\" />\r\n            {/* Ẩn chữ khi Sidebar thu gọn */}\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Tổng Quan</span>\r\n          </li>\r\n        </Tooltip>\r\n\r\n        {/* Quản lý Công ty */}\r\n        <Tooltip title=\"Quản lý Công ty\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('companies')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaClipboardList className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Quản lý Công ty</span>\r\n          </li>\r\n        </Tooltip>\r\n\r\n        {/* Quản lý Admin */}\r\n        <Tooltip title=\"Quản lý Admin\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('admins')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaUser className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Quản lý Admin</span>\r\n          </li>\r\n        </Tooltip>\r\n\r\n        {/* Quản lý Người dùng */}\r\n        <Tooltip title=\"Quản lý Người dùng\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('users')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaUser className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Quản lý Người dùng</span>\r\n          </li>\r\n        </Tooltip>\r\n\r\n        {/* Thống kê */}\r\n        <Tooltip title=\"Thống kê\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('statistics')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaChartBar className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Thống kê</span>\r\n          </li>\r\n        </Tooltip>\r\n\r\n        {/* Nhật ký hoạt động */}\r\n        <Tooltip title=\"Nhật ký hoạt động\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('logs')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaClipboardList className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Nhật ký hoạt động</span>\r\n          </li>\r\n        </Tooltip>\r\n\r\n        {/* Cài đặt */}\r\n        <Tooltip title=\"Cài đặt\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('settings')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaCogs className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Cài đặt</span>\r\n          </li>\r\n        </Tooltip>\r\n      </ul>\r\n\r\n      {/* Nút Đăng Xuất */}\r\n      <Tooltip title=\"Đăng Xuất\" placement=\"right\" visible={collapsed}>\r\n        <li\r\n          onClick={handleLogout}\r\n          className={`flex items-center p-4 hover:bg-red-600 transition-all duration-300 cursor-pointer ${\r\n            collapsed ? 'justify-center' : 'justify-start'\r\n          }`}\r\n        >\r\n          <FaSignOutAlt className=\"text-xl\" />\r\n          <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Đăng Xuất</span>\r\n        </li>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { Bar, Line, Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, LineElement, PointElement, ArcElement } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, LineElement, PointElement, ArcElement);\r\n\r\nconst Statistics = () => {\r\n  const barChartData = {\r\n    labels: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6'],\r\n    datasets: [\r\n      {\r\n        label: 'Doanh thu (triệu VND)',\r\n        data: [30, 45, 60, 50, 70, 90],\r\n        backgroundColor: '#4A90E2',\r\n        borderColor: '#357ABD',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const barChartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Doanh thu hàng tháng',\r\n      },\r\n    },\r\n  };\r\n\r\n  // Fake Data for Line Chart\r\n  const lineChartData = {\r\n    labels: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6'],\r\n    datasets: [\r\n      {\r\n        label: 'Số lượng người dùng mới',\r\n        data: [50, 65, 80, 120, 100, 150],\r\n        fill: false,\r\n        borderColor: '#50E3C2',\r\n        tension: 0.3,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const lineChartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Số lượng người dùng mới mỗi tháng',\r\n      },\r\n    },\r\n  };\r\n\r\n  // Fake Data for Pie Chart\r\n  const pieChartData = {\r\n    labels: ['Công ty A', 'Công ty B', 'Công ty C'],\r\n    datasets: [\r\n      {\r\n        label: 'Tỷ lệ doanh thu',\r\n        data: [300, 150, 100],\r\n        backgroundColor: ['#4A90E2', '#50E3C2', '#F5A623'],\r\n        hoverOffset: 4,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const pieChartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Tỷ lệ doanh thu theo công ty',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8\">\r\n      <h2 className=\"text-2xl font-bold mb-6\">Thống kê doanh thu và người dùng</h2>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n        {/* Bar Chart */}\r\n        <div className=\"bg-white shadow-lg rounded-lg p-4\">\r\n          <Bar data={barChartData} options={barChartOptions} />\r\n        </div>\r\n\r\n        {/* Line Chart */}\r\n        <div className=\"bg-white shadow-lg rounded-lg p-4\">\r\n          <Line data={lineChartData} options={lineChartOptions} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Pie Chart */}\r\n      <div className=\"bg-white shadow-lg rounded-lg p-4 mt-8\">\r\n        <Pie data={pieChartData} options={pieChartOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { useState } from 'react';\r\n\r\nconst Settings = () => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [emailNotifications, setEmailNotifications] = useState(true);\r\n\r\n  return (\r\n    <div className=\"p-8\">\r\n      <h2 className=\"text-2xl font-bold mb-6\">Cài đặt</h2>\r\n\r\n      <div className=\"space-y-6\">\r\n        {/* Dark Mode Setting */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <span>Chế độ tối</span>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={darkMode}\r\n            onChange={() => setDarkMode(!darkMode)}\r\n            className=\"form-checkbox h-6 w-6 text-blue-600\"\r\n          />\r\n        </div>\r\n\r\n        {/* Email Notifications */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <span>Thông báo qua email</span>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={emailNotifications}\r\n            onChange={() => setEmailNotifications(!emailNotifications)}\r\n            className=\"form-checkbox h-6 w-6 text-blue-600\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Sidebar from './SideBar/Sidebar';\r\nimport ManageCompanies from './navSideBar/ManageCompanies';\r\nimport ManageAdmins from './navSideBar/ManageAdmins';\r\nimport ManageUsers from './navSideBar/ManageUsers';\r\nimport './SuperAdminDashboard.css';\r\nimport Statistics from './navSideBar/Statistics';\r\nimport Settings from './navSideBar/Settings';\r\n\r\nconst SuperAdminDashboard = () => {\r\n  const [activeContent, setActiveContent] = useState('default');\r\n  const [collapsed, setCollapsed] = useState(false); // Trạng thái Sidebar thu nhỏ/mở rộng\r\n\r\n  useEffect(() => {\r\n    notify();\r\n  }, []);\r\n\r\n  // Thông báo chào mừng\r\n  const notify = () => {\r\n    toast.success(\"Chào mừng bạn đến với hệ thống!\", {\r\n      autoClose: 1500,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      position: 'top-right' // Đặt vị trí thông báo cho dễ nhìn\r\n    });\r\n  };\r\n\r\n  // Render nội dung chính theo từng lựa chọn\r\n  const renderContent = () => {\r\n    switch (activeContent) {\r\n      case 'default':\r\n        return (\r\n          <div className=\"text-3xl font-bold text-center text-red-500 mt-10\">\r\n            CHÀO MỪNG BẠN ĐẾN TRANG QUẢN LÍ HỆ THỐNG\r\n          </div>\r\n        );\r\n      case 'companies':\r\n        return <ManageCompanies />;\r\n      case 'admins':\r\n        return <ManageAdmins />;\r\n      case 'users':\r\n        return <ManageUsers />;\r\n      case 'statistics':\r\n        return <Statistics />;\r\n      case 'logs':\r\n        return <div>Nhật ký hoạt động Content</div>;\r\n      case 'settings':\r\n        return <Settings />;\r\n      case 'reports':\r\n        return <div>Báo cáo Content</div>;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"super-admin-dashboard flex\">\r\n      <Sidebar setActiveContent={setActiveContent} collapsed={collapsed} setCollapsed={setCollapsed} />\r\n      <div className={`main-content transition-all duration-300 ${collapsed ? 'ml-16' : 'ml-64'} p-8`}>\r\n        {renderContent()}\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuperAdminDashboard;\r\n","import React from 'react'\r\n\r\nconst ManageAdmins = () => {\r\n  return (\r\n    <div>ManageAdmins</div>\r\n  )\r\n}\r\n\r\nexport default ManageAdmins","import React from 'react';\r\n\r\nconst CompanyForm = ({\r\n  companyName,\r\n  setCompanyName,\r\n  address,\r\n  setAddress,\r\n  contactInfo,\r\n  setContactInfo,\r\n  phoneNumber,\r\n  setPhoneNumber,\r\n  email,\r\n  setEmail,\r\n  isActive,\r\n  setIsActive,\r\n  handleCreateOrUpdateCompany,\r\n  creating,\r\n  selectedCompanyId,\r\n}) => {\r\n  return (\r\n    <div className=\"w-full flex justify-center items-start p-4\">\r\n      <form\r\n        onSubmit={handleCreateOrUpdateCompany}\r\n        className=\"bg-white shadow-md rounded-lg p-4 space-y-4 max-w-sm w-full border border-gray-200\"\r\n      >\r\n        <h2 className=\"text-xl font-semibold text-center text-blue-600\">\r\n          {selectedCompanyId ? 'Cập nhật công ty' : 'Tạo công ty mới'}\r\n        </h2>\r\n\r\n        {/* Company Name */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Tên công ty</label>\r\n          <input\r\n            type=\"text\"\r\n            value={companyName}\r\n            onChange={(e) => setCompanyName(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập tên công ty\"\r\n          />\r\n        </div>\r\n\r\n        {/* Address */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Địa chỉ</label>\r\n          <input\r\n            type=\"text\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập địa chỉ\"\r\n          />\r\n        </div>\r\n\r\n        {/* Contact Info */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Thông tin liên hệ</label>\r\n          <input\r\n            type=\"text\"\r\n            value={contactInfo}\r\n            onChange={(e) => setContactInfo(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập thông tin liên hệ\"\r\n          />\r\n        </div>\r\n\r\n        {/* Phone Number */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Số điện thoại</label>\r\n          <input\r\n            type=\"text\"\r\n            value={phoneNumber}\r\n            onChange={(e) => setPhoneNumber(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập số điện thoại\"\r\n          />\r\n        </div>\r\n\r\n        {/* Email */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập email\"\r\n          />\r\n        </div>\r\n\r\n        {/* Active Status Toggle */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Kích hoạt</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isActive}\r\n            onChange={(e) => setIsActive(e.target.checked)}\r\n            className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n          />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <button\r\n          type=\"submit\"\r\n          className={`w-full py-2 text-white font-medium rounded-lg shadow ${\r\n            creating\r\n              ? 'bg-blue-300 cursor-not-allowed'\r\n              : 'bg-gradient-to-r from-blue-500 to-blue-600 hover:bg-blue-700'\r\n          } focus:outline-none focus:ring-2 focus:ring-blue-500`}\r\n          disabled={creating}\r\n        >\r\n          {creating ? 'Đang lưu...' : selectedCompanyId ? 'Cập nhật' : 'Lưu'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyForm;\r\n","import React from 'react';\r\nimport Notification from '../../../shared/Notification/Notification';\r\n\r\nconst SnackbarNotification = ({ open, onClose, severity, message }) => {\r\n  return (\r\n    <Notification\r\n      open={open}\r\n      onClose={onClose}\r\n      severity={severity}\r\n      message={message}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SnackbarNotification;\r\n","import React from 'react';\r\n\r\nconst CompanyCard = ({ company, onClick, onToggleStatus }) => {\r\n  return (\r\n    <div\r\n      className=\"company-card bg-gradient-to-r from-blue-400 to-purple-300 rounded-lg shadow-lg p-6 hover:shadow-2xl transition-shadow duration-300 cursor-pointer text-white\"\r\n      onClick={onClick}\r\n    >\r\n      <h3 className=\"text-lg font-bold mb-2\">{company.name}</h3>\r\n      <p className=\"text-sm mb-4\">{company.address}</p>\r\n      <p\r\n        className={`text-sm font-semibold ${\r\n          company.isActive ? 'text-green-200' : 'text-red-200'\r\n        }`}\r\n      >\r\n        {company.isActive ? 'Kích hoạt' : 'Vô hiệu hóa'}\r\n      </p>\r\n\r\n      <div className=\"mt-4 flex items-center\">\r\n        <label className=\"relative inline-flex items-center cursor-pointer\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"sr-only\"\r\n            checked={company.isActive}\r\n            onChange={() => onToggleStatus(company._id)}\r\n          />\r\n          <div\r\n            className={`w-10 h-5 rounded-full transition-all duration-300 ease-in-out ${\r\n              company.isActive ? 'bg-green-400' : 'bg-red-400'\r\n            }`}\r\n          >\r\n            <div\r\n              className={`dot absolute left-1 top-1 bg-white w-3 h-3 rounded-full transition-transform duration-300 ease-in-out ${\r\n                company.isActive ? 'transform translate-x-5' : ''\r\n              }`}\r\n            ></div>\r\n          </div>\r\n          <span className=\"ml-3 text-sm\">\r\n            {company.isActive ? 'Vô hiệu hóa' : 'Kích hoạt'}\r\n          </span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyCard;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  useAddCompanyAdminMutation,\r\n  useCreateCompanyMutation,\r\n  useUpdateCompanyMutation,\r\n  useGetCompaniesQuery,\r\n  useToggleCompanyStatusMutation,\r\n} from '../../../Redux/Company/companyApiSlice';\r\nimport CompanyForm from './Company/CompanyForm';\r\nimport SnackbarNotification from './Company/SnackbarNotification';\r\nimport CompanyCard from './Company/CompanyCard';\r\n\r\nconst ManageCompanies = () => {\r\n  const [companyName, setCompanyName] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [contactInfo, setContactInfo] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [selectedCompanyId, setSelectedCompanyId] = useState(null);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [snackbarSeverity, setSnackbarSeverity] = useState('success');\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [adminUserName, setAdminUserName] = useState('');\r\n  const [adminPassword, setAdminPassword] = useState('');\r\n  const [adminPhoneNumber, setAdminPhoneNumber] = useState('');\r\n  const [adminEmail, setAdminEmail] = useState('');\r\n  const [showAddAdmin, setShowAddAdmin] = useState(false);\r\n\r\n  const { data: companiesData, isLoading: isCompaniesLoading, error: companiesError } = useGetCompaniesQuery();\r\n  const [createCompany, { isLoading: isCreating }] = useCreateCompanyMutation();\r\n  const [updateCompany] = useUpdateCompanyMutation();\r\n  const [toggleCompanyStatus] = useToggleCompanyStatusMutation();\r\n  const [addCompanyAdmin, { isLoading: isAddingAdmin }] = useAddCompanyAdminMutation();\r\n\r\n  const [companies, setCompanies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (companiesData) {\r\n      setCompanies(companiesData.companies);\r\n    }\r\n  }, [companiesData]);\r\n\r\n  const modalRef = useRef(null);\r\n\r\n  const resetForm = () => {\r\n    setCompanyName('');\r\n    setAddress('');\r\n    setContactInfo('');\r\n    setPhoneNumber('');\r\n    setEmail('');\r\n    setSelectedCompanyId(null);\r\n    setAdminUserName('');\r\n    setAdminPassword('');\r\n    setAdminEmail('');\r\n    setAdminPhoneNumber('');\r\n    setShowAddAdmin(false);\r\n  };\r\n\r\n  const showSnackbar = (severity, message) => {\r\n    setSnackbarSeverity(severity);\r\n    setSnackbarMessage(message);\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const handleToggleStatus = async (companyId) => {\r\n    try {\r\n      const updatedCompany = await toggleCompanyStatus(companyId).unwrap();\r\n      setCompanies((prevCompanies) =>\r\n        prevCompanies.map((company) =>\r\n          company._id === updatedCompany.company._id ? updatedCompany.company : company\r\n        )\r\n      );\r\n      showSnackbar(\r\n        'success',\r\n        `Công ty ${updatedCompany.company.isActive ? 'đã được kích hoạt' : 'đã bị vô hiệu hóa'}.`\r\n      );\r\n    } catch (error) {\r\n      showSnackbar('error', 'Không thể thay đổi trạng thái công ty.');\r\n    }\r\n  };\r\n\r\n  const handleCreateOrUpdateCompany = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const companyData = { name: companyName, address, contactInfo, phoneNumber, email };\r\n\r\n      if (selectedCompanyId) {\r\n        const updatedCompany = await updateCompany({ companyId: selectedCompanyId, updatedData: companyData }).unwrap();\r\n        setCompanies((prevCompanies) =>\r\n          prevCompanies.map((company) =>\r\n            company._id === updatedCompany.company._id ? updatedCompany.company : company\r\n          )\r\n        );\r\n        showSnackbar('success', 'Cập nhật công ty thành công!');\r\n      } else {\r\n        const newCompany = await createCompany(companyData).unwrap();\r\n        setCompanies((prevCompanies) => [...prevCompanies, newCompany.company]);\r\n        showSnackbar('success', 'Tạo công ty thành công!');\r\n      }\r\n\r\n      resetForm();\r\n      setModalVisible(false);\r\n      document.body.style.overflow = 'auto'; // Re-enable scrolling when modal is closed\r\n    } catch (error) {\r\n      showSnackbar('error', 'Không thể thực hiện tác vụ. Vui lòng kiểm tra thông tin và thử lại.');\r\n    }\r\n  };\r\n\r\n  const handleCardClick = (company) => {\r\n    setSelectedCompanyId(company._id);\r\n    setCompanyName(company.name);\r\n    setAddress(company.address);\r\n    setContactInfo(company.contactInfo);\r\n    setPhoneNumber(company.phoneNumber);\r\n    setEmail(company.email);\r\n    setModalVisible(true);\r\n    setShowAddAdmin(true);\r\n    document.body.style.overflow = 'hidden';\r\n  };\r\n\r\n  const handleAddAdmin = async () => {\r\n    if (adminUserName && adminPassword) {\r\n      try {\r\n        await addCompanyAdmin({\r\n          companyId: selectedCompanyId,\r\n          userName: adminUserName,\r\n          password: adminPassword,\r\n          email: adminEmail,         \r\n          phoneNumber: adminPhoneNumber\r\n        }).unwrap();\r\n        showSnackbar('success', 'Thêm admin thành công!');\r\n        resetForm();\r\n      } catch (error) {\r\n        showSnackbar('error', error?.data?.message || 'Không thể thêm admin. Vui lòng kiểm tra thông tin và thử lại.');\r\n      }\r\n    } else {\r\n      showSnackbar('warning', 'Vui lòng nhập tên đăng nhập và mật khẩu.');\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n      setModalVisible(false);\r\n      document.body.style.overflow = 'hidden'; // Re-enable scrolling when modal is closed\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"manage-companies bg-gradient-to-r from-blue-50 to-blue-100 min-h-screen p-8\">\r\n      <h2 className=\"text-3xl font-bold mb-4\">{selectedCompanyId ? 'Cập nhật Công Ty' : 'Tạo Công Ty'}</h2>\r\n      <button\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition duration-300 mb-6\"\r\n        onClick={() => {\r\n          resetForm();\r\n          setModalVisible(true);\r\n          setShowAddAdmin(false);\r\n          document.body.style.overflow = 'hidden'; \r\n        }}\r\n      >\r\n        <i className=\"fas fa-plus\"></i> Thêm công ty\r\n      </button>\r\n\r\n      {/* Modal for creating/updating company */}\r\n      {modalVisible && (\r\n        <div className=\"fixed inset-y-0 right-0 bg-white shadow-lg z-50 w-1/4 overflow-y-auto\" ref={modalRef}>\r\n          <div className=\"p-6 relative\">\r\n            <span\r\n              className=\"absolute top-2 right-4 text-gray-500 cursor-pointer hover:text-gray-700 transition\"\r\n              onClick={() => {\r\n                setModalVisible(false);\r\n                document.body.style.overflow = 'auto'; // Re-enable scrolling when modal is closed\r\n              }}\r\n            >\r\n              &times;\r\n            </span>\r\n            <CompanyForm\r\n              companyName={companyName}\r\n              setCompanyName={setCompanyName}\r\n              address={address}\r\n              setAddress={setAddress}\r\n              contactInfo={contactInfo}\r\n              setContactInfo={setContactInfo}\r\n              phoneNumber={phoneNumber}\r\n              setPhoneNumber={setPhoneNumber}\r\n              email={email}\r\n              setEmail={setEmail}\r\n              handleCreateOrUpdateCompany={handleCreateOrUpdateCompany}\r\n              creating={isCreating}\r\n              selectedCompanyId={selectedCompanyId}\r\n            />\r\n            {showAddAdmin && (\r\n              <div className=\"mt-8\">\r\n                <h4 className=\"text-lg font-semibold mb-4\">Thêm Admin cho Công Ty</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={adminUserName}\r\n                  onChange={(e) => setAdminUserName(e.target.value)}\r\n                  placeholder=\"Tên Đăng Nhập của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  value={adminPassword}\r\n                  onChange={(e) => setAdminPassword(e.target.value)}\r\n                  placeholder=\"Mật khẩu của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n                 <input\r\n                  type=\"email\"\r\n                  value={adminEmail}\r\n                  onChange={(e) => setAdminEmail(e.target.value)}\r\n                  placeholder=\"Email của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n\r\n                  <input\r\n                  type=\"text\"\r\n                  value={adminPhoneNumber}\r\n                  onChange={(e) => setAdminPhoneNumber(e.target.value)}  \r\n                  placeholder=\"Số điện thoại của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n                <button\r\n                  onClick={handleAddAdmin}\r\n                  disabled={isAddingAdmin}\r\n                  className=\"bg-green-500 text-white w-full py-2 rounded-lg hover:bg-green-600 transition duration-300\"\r\n                >\r\n                  {isAddingAdmin ? 'Đang thêm...' : 'Thêm Admin'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <h3 className=\"text-xl font-semibold mt-8 mb-4\">Danh sách các công ty</h3>\r\n      <div className=\"company-cards grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {isCompaniesLoading ? (\r\n          <p>Đang tải...</p>\r\n        ) : (\r\n          companies.map((company) => (\r\n            <CompanyCard\r\n              key={company._id}\r\n              company={company}\r\n              onClick={() => handleCardClick(company)}\r\n              onToggleStatus={handleToggleStatus}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {companiesError && <p className=\"text-red-500 mt-4\">{companiesError}</p>}\r\n      <SnackbarNotification\r\n        open={snackbarOpen}\r\n        onClose={() => setSnackbarOpen(false)}\r\n        severity={snackbarSeverity}\r\n        message={snackbarMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageCompanies;\r\n","import React from 'react'\r\n\r\nconst ManageUsers = () => {\r\n  return (\r\n    <div>ManageUsers</div>\r\n  )\r\n}\r\n\r\nexport default ManageUsers","import React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Slide from '@mui/material/Slide';\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Notification = ({ open, onClose, severity, message, autoHideDuration = 3000, TransitionComponent = Slide }) => {\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={autoHideDuration}\r\n      onClose={onClose}\r\n      TransitionComponent={TransitionComponent}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }} \r\n    >\r\n      <Alert onClose={onClose} severity={severity} sx={{ width: '100%' }}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\nexport default Notification;\r\n"],"names":["_ref","setActiveContent","dispatch","useDispatch","collapsed","setCollapsed","useState","handleNavigation","content","_jsxs","className","children","_jsx","onClick","FaChevronRight","FaChevronLeft","Tooltip","title","placement","visible","FaHome","FaClipboardList","FaUser","FaChartBar","FaCogs","handleLogout","logout","window","location","href","FaSignOutAlt","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Legend","LineElement","PointElement","ArcElement","Statistics","Bar","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","display","position","text","Line","fill","tension","Pie","hoverOffset","Settings","darkMode","setDarkMode","emailNotifications","setEmailNotifications","type","checked","onChange","SuperAdminDashboard","activeContent","useEffect","notify","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Sidebar","renderContent","ManageCompanies","ManageAdmins","ManageUsers","ToastContainer","companyName","setCompanyName","address","setAddress","contactInfo","setContactInfo","phoneNumber","setPhoneNumber","email","setEmail","isActive","setIsActive","handleCreateOrUpdateCompany","creating","selectedCompanyId","onSubmit","value","e","target","required","placeholder","disabled","open","onClose","severity","message","Notification","company","onToggleStatus","name","_id","setSelectedCompanyId","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","modalVisible","setModalVisible","adminUserName","setAdminUserName","adminPassword","setAdminPassword","adminPhoneNumber","setAdminPhoneNumber","adminEmail","setAdminEmail","showAddAdmin","setShowAddAdmin","companiesData","isLoading","isCompaniesLoading","error","companiesError","useGetCompaniesQuery","createCompany","isCreating","useCreateCompanyMutation","updateCompany","useUpdateCompanyMutation","toggleCompanyStatus","useToggleCompanyStatusMutation","addCompanyAdmin","isAddingAdmin","useAddCompanyAdminMutation","companies","setCompanies","modalRef","useRef","resetForm","showSnackbar","handleToggleStatus","async","updatedCompany","companyId","unwrap","prevCompanies","map","handleClickOutside","event","current","contains","document","body","style","overflow","addEventListener","removeEventListener","ref","CompanyForm","preventDefault","companyData","updatedData","newCompany","userName","password","_error$data","CompanyCard","handleCardClick","SnackbarNotification","Alert","React","props","MuiAlert","elevation","variant","autoHideDuration","TransitionComponent","Slide","Snackbar","anchorOrigin","vertical","horizontal","sx","width"],"sourceRoot":""}