{"version":3,"file":"static/js/211.66c80c10.chunk.js","mappings":"sOAMA,MA+HA,EA/HgBA,IAA2B,IAA1B,iBAAEC,GAAkBD,EACnC,MAAME,GAAWC,EAAAA,EAAAA,OACVC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAErCC,EAAoBC,IACxBP,EAAiBO,EAAQ,EAQ3B,OACEC,EAAAA,EAAAA,MAAA,OACEC,UAAW,wHACTN,EAAY,OAAS,QACpBO,SAAA,EAGHF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2DAA0DC,SAAA,EACrEP,IAAaQ,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oBAAmBC,SAAC,wCACnDC,EAAAA,EAAAA,KAAA,UACEF,UAAU,oEACVG,QAASA,IAAMR,GAAcD,GAAWO,SAEvCP,GAAYQ,EAAAA,EAAAA,KAACE,EAAAA,IAAc,KAAMF,EAAAA,EAAAA,KAACG,EAAAA,IAAa,UAKpDN,EAAAA,EAAAA,MAAA,MAAIC,UAAU,+BAA8BC,SAAA,EAE1CC,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAACC,MAAM,iBAAYC,UAAU,QAAQC,QAASf,EAAUO,UAC9DF,EAAAA,EAAAA,MAAA,MACEI,QAASA,IAAMN,EAAiB,WAChCG,UAAW,uFACTN,EAAY,iBAAmB,iBAC9BO,SAAA,EAEHC,EAAAA,EAAAA,KAACQ,EAAAA,IAAM,CAACV,UAAU,aAElBE,EAAAA,EAAAA,KAAA,QAAMF,UAAW,IAAGN,EAAY,SAAW,QAASO,SAAC,yBAKzDC,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAACC,MAAM,6BAAkBC,UAAU,QAAQC,QAASf,EAAUO,UACpEF,EAAAA,EAAAA,MAAA,MACEI,QAASA,IAAMN,EAAiB,aAChCG,UAAW,uFACTN,EAAY,iBAAmB,iBAC9BO,SAAA,EAEHC,EAAAA,EAAAA,KAACS,EAAAA,IAAe,CAACX,UAAU,aAC3BE,EAAAA,EAAAA,KAAA,QAAMF,UAAW,IAAGN,EAAY,SAAW,QAASO,SAAC,qCAIzDC,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAACC,MAAM,0CAAqBC,UAAU,QAAQC,QAASf,EAAUO,UACvEF,EAAAA,EAAAA,MAAA,MACEI,QAASA,IAAMN,EAAiB,SAChCG,UAAW,uFACTN,EAAY,iBAAmB,iBAC9BO,SAAA,EAEHC,EAAAA,EAAAA,KAACU,EAAAA,IAAM,CAACZ,UAAU,aAClBE,EAAAA,EAAAA,KAAA,QAAMF,UAAW,IAAGN,EAAY,SAAW,QAASO,SAAC,kDAKzDC,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAACC,MAAM,mBAAWC,UAAU,QAAQC,QAASf,EAAUO,UAC7DF,EAAAA,EAAAA,MAAA,MACEI,QAASA,IAAMN,EAAiB,cAChCG,UAAW,uFACTN,EAAY,iBAAmB,iBAC9BO,SAAA,EAEHC,EAAAA,EAAAA,KAACW,EAAAA,IAAU,CAACb,UAAU,aACtBE,EAAAA,EAAAA,KAAA,QAAMF,UAAW,IAAGN,EAAY,SAAW,QAASO,SAAC,2BAKzDC,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAACC,MAAM,+BAAWC,UAAU,QAAQC,QAASf,EAAUO,UAC7DF,EAAAA,EAAAA,MAAA,MACEI,QAASA,IAAMN,EAAiB,YAChCG,UAAW,uFACTN,EAAY,iBAAmB,iBAC9BO,SAAA,EAEHC,EAAAA,EAAAA,KAACY,EAAAA,IAAgB,CAACd,UAAU,aAC5BE,EAAAA,EAAAA,KAAA,QAAMF,UAAW,IAAGN,EAAY,SAAW,QAASO,SAAC,8DAKzDC,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAACC,MAAM,uBAAUC,UAAU,QAAQC,QAASf,EAAUO,UAC5DF,EAAAA,EAAAA,MAAA,MACEI,QAASA,IAAMN,EAAiB,YAChCG,UAAW,uFACTN,EAAY,iBAAmB,iBAC9BO,SAAA,EAEHC,EAAAA,EAAAA,KAACa,EAAAA,IAAM,CAACf,UAAU,aAClBE,EAAAA,EAAAA,KAAA,QAAMF,UAAW,IAAGN,EAAY,SAAW,QAASO,SAAC,kCAM3DC,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAACC,MAAM,2BAAYC,UAAU,QAAQC,QAASf,EAAUO,UAC9DF,EAAAA,EAAAA,MAAA,MACEI,QA1Gaa,KACnBxB,GAASyB,EAAAA,EAAAA,OACTC,OAAOC,SAASC,KAAO,GAAG,EAyGpBpB,UAAW,sFACTN,EAAY,iBAAmB,iBAC9BO,SAAA,EAEHC,EAAAA,EAAAA,KAACmB,EAAAA,IAAY,CAACrB,UAAU,aACxBE,EAAAA,EAAAA,KAAA,QAAMF,UAAW,IAAGN,EAAY,SAAW,QAASO,SAAC,oCAGrD,E,gDC9HV,MAkBA,EAlBmBqB,KAEjB,MAAM,KAAEC,EAAI,MAAEC,EAAK,UAAEC,IAAcC,EAAAA,EAAAA,GAA6B,CAAE,GAElE,OAAID,GAAkBvB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACrBuB,GAAczB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,UAAQuB,EAAMG,YAGjC5B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAC,gCACxCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,wBAAqB,OAAJsB,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKK,aAAa,WAC5C7B,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,0DAA2B,OAAJsB,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKM,sBAEnC,ECoBV,EAnCiBC,KACf,MAAOC,EAAUC,IAAepC,EAAAA,EAAAA,WAAS,IAClCqC,EAAoBC,IAAyBtC,EAAAA,EAAAA,WAAS,GAE7D,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAC,0BAExCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EAExBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,oCACNC,EAAAA,EAAAA,KAAA,SACEiC,KAAK,WACLC,QAASL,EACTM,SAAUA,IAAML,GAAaD,GAC7B/B,UAAU,4CAKdD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,+BACNC,EAAAA,EAAAA,KAAA,SACEiC,KAAK,WACLC,QAASH,EACTI,SAAUA,IAAMH,GAAuBD,GACvCjC,UAAU,gDAIZ,E,eCrBV,MA4DA,EA5D4BsC,KAC1B,MAAOC,EAAehD,IAAoBK,EAAAA,EAAAA,UAAS,YAC5CF,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IAE3C4C,EAAAA,EAAAA,YAAU,KACRC,GAAQ,GACP,IAGH,MAAMA,EAASA,KACbC,EAAAA,GAAMC,QAAQ,wEAAmC,CAC/CC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,SAAU,aACV,EA+BJ,OACEpD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAACkD,EAAO,CAAC7D,iBAAkBA,EAAkBG,UAAWA,EAAWC,aAAcA,KACjFO,EAAAA,EAAAA,KAAA,OAAKF,UAAW,4CAA4CN,EAAY,QAAU,cAAcO,SA9B9EoD,MACpB,OAAQd,GACN,IAAK,UACH,OACErC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oDAAmDC,SAAC,sFAIvE,IAAK,YACH,OAAOC,EAAAA,EAAAA,KAACoD,EAAAA,QAAe,IACzB,IAAK,SACH,OAAOpD,EAAAA,EAAAA,KAACqD,EAAAA,QAAY,IACtB,IAAK,QACH,OAAOrD,EAAAA,EAAAA,KAACsD,EAAAA,QAAW,IACrB,IAAK,aACH,OAAOtD,EAAAA,EAAAA,KAACoB,EAAU,IACpB,IAAK,WACH,OAAOpB,EAAAA,EAAAA,KAACuD,EAAAA,QAAQ,IAClB,IAAK,WACH,OAAOvD,EAAAA,EAAAA,KAAC4B,EAAQ,IAClB,IAAK,UACH,OAAO5B,EAAAA,EAAAA,KAAA,OAAAD,SAAK,0BACd,QACE,OAAO,KACX,EAOKoD,MAEHnD,EAAAA,EAAAA,KAACwD,EAAAA,GAAc,MACX,C,6OC/DV,MAAM,MAAEC,GAAUC,EAAAA,EAqJlB,EAnJiBH,KAAO,IAADI,EACrB,MAAOC,EAAoBC,IAAyBnE,EAAAA,EAAAA,UAAS,OACtDoE,EAAaC,IAAkBrE,EAAAA,EAAAA,WAAS,IACxCsE,EAAWC,IAAgBvE,EAAAA,EAAAA,WAAS,IACpCwE,EAAaC,IAAkBzE,EAAAA,EAAAA,UAAS,CAAE0E,KAAM,GAAIC,QAAS,GAAIC,KAAM,GAAIC,YAAa,CAAC,EAAG,MAE3FlD,KAAMmD,EAAS,MAAElD,EAAK,UAAEC,IAAckD,EAAAA,EAAAA,OACvCC,IAAkBC,EAAAA,EAAAA,OAClBC,IAAkBC,EAAAA,EAAAA,OAClBC,IAAkBC,EAAAA,EAAAA,OAEjB1D,KAAM2D,IAAmBC,EAAAA,EAAAA,IAAwBrB,EAAoB,CAAEsB,MAAOtB,IAEhFuB,EAAkB,WAAsB,IAArBlE,EAAQmE,UAAAC,OAAA,QAAArC,IAAAoC,UAAA,GAAAA,UAAA,GAAG,KAClCnB,IAAehD,GACfkD,EAAelD,GAAY,CAAEmD,KAAM,GAAIC,QAAS,GAAIC,KAAM,GAAIC,YAAa,CAAC,EAAG,KAC/ER,GAAe,EACjB,EAEMuB,EAAmBA,IAAMvB,GAAe,GA0B9C,OACElE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BC,SAAA,EAC3CC,EAAAA,EAAAA,KAACyD,EAAK,CAAC8B,MAAO,EAAGzF,UAAU,2CAA0CC,SAAC,yBAGtEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAACyD,EAAK,CAAC8B,MAAO,EAAGzF,UAAU,gBAAeC,SAAC,mBAC3CC,EAAAA,EAAAA,KAACwF,EAAAA,GAAM,CAACvD,KAAK,UAAUwD,MAAMzF,EAAAA,EAAAA,KAAC0F,EAAAA,EAAY,IAAKzF,QAASA,IAAMkF,IAAmBrF,UAAU,cAAaC,SAAC,oBAG1GwB,IAAavB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAChBuB,IAAStB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,eAAcC,SAAC,6BAEtCC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAG,CAACC,OAAQ,GAAG7F,SACJ,OAATyE,QAAS,IAATA,GAAe,QAANb,EAATa,EAAWnD,YAAI,IAAAsC,OAAN,EAATA,EAAiBkC,KAAK5E,IACrBjB,EAAAA,EAAAA,KAAC8F,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEnG,UAChCC,EAAAA,EAAAA,KAACmG,EAAAA,EAAI,CACHC,WAAS,EACTtG,UAAU,yEACVuG,QAAS,EACPrG,EAAAA,EAAAA,KAACsG,EAAAA,EAAW,CAACrG,QAASA,IAAM4D,EAAsB5C,EAASsF,QAC3DvG,EAAAA,EAAAA,KAACwG,EAAAA,EAAY,CAACvG,QAASA,IAAMkF,EAAgBlE,MAC7CjB,EAAAA,EAAAA,KAACyG,EAAAA,EAAc,CAACxG,QAASA,IAhCpByG,WACnB,UACQ5B,EAAe6B,GAAIC,SACzBnF,EAAAA,GAAQgB,QAAQ,gCAClB,CAAE,MAAOnB,GACPG,EAAAA,GAAQH,MAAM,4BAChB,GA0B6CuF,CAAa5F,EAASsF,QACrDxG,UAEFC,EAAAA,EAAAA,KAACmG,EAAAA,EAAKW,KAAI,CACRzG,OAAOL,EAAAA,EAAAA,KAAA,QAAMF,UAAU,8BAA6BC,SAAEkB,EAASmD,OAC/D2C,YAAa,GAAG9F,EAASoD,YAAYpD,EAASqD,YAZZrD,EAASsF,YAqBtDvB,IACCnF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAACyD,EAAK,CAAC8B,MAAO,EAAGzF,UAAU,gBAAeC,SAAC,qBAC3CF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,UAAc,IAAEiF,EAAe3D,KAAK+C,SAC/CvE,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAAiB,IAAEiF,EAAe3D,KAAKgD,YAClDxE,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,UAAc,IAAEiF,EAAe3D,KAAKiD,SAC/CzE,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,iBAAqB,IAAEiF,EAAe3D,KAAKkD,YAAYA,YAAYyC,KAAK,aAKvFhH,EAAAA,EAAAA,KAACiH,EAAAA,EAAK,CACJ5G,MAAO2D,EAAY,gBAAkB,mBACrCzD,QAASuD,EACToD,KA3EuBR,UAC3B,IACM1C,SACIY,EAAe,CAAE+B,GAAIzC,EAAYqC,IAAKY,gBAAiBjD,IAAe0C,SAC5EnF,EAAAA,GAAQgB,QAAQ,yCAEViC,EAAeR,GAAa0C,SAClCnF,EAAAA,GAAQgB,QAAQ,kCAElB6C,GACF,CAAE,MAAOhE,GACPG,EAAAA,GAAQH,MAAM,0BAChB,GAgEI8F,SAAU9B,EACV+B,OAAQrD,EAAY,SAAW,SAC/BsD,cAAe,CAAExH,UAAW,eAAgBC,UAE5CF,EAAAA,EAAAA,MAAC0H,EAAAA,EAAI,CAACC,OAAO,WAAUzH,SAAA,EACrBC,EAAAA,EAAAA,KAACuH,EAAAA,EAAKE,KAAI,CAACC,MAAM,OAAOC,UAAQ,EAAA5H,UAC9BC,EAAAA,EAAAA,KAAC4H,EAAAA,EAAK,CACJC,MAAO3D,EAAYE,KACnBjC,SAAW2F,GAAM3D,EAAe,IAAKD,EAAaE,KAAM0D,EAAEC,OAAOF,QACjEG,YAAY,2BAGhBhI,EAAAA,EAAAA,KAACuH,EAAAA,EAAKE,KAAI,CAACC,MAAM,UAAUC,UAAQ,EAAA5H,UACjCC,EAAAA,EAAAA,KAAC4H,EAAAA,EAAK,CACJC,MAAO3D,EAAYG,QACnBlC,SAAW2F,GAAM3D,EAAe,IAAKD,EAAaG,QAASyD,EAAEC,OAAOF,QACpEG,YAAY,qBAGhBhI,EAAAA,EAAAA,KAACuH,EAAAA,EAAKE,KAAI,CAACC,MAAM,OAAOC,UAAQ,EAAA5H,UAC9BC,EAAAA,EAAAA,KAAC4H,EAAAA,EAAK,CACJC,MAAO3D,EAAYI,KACnBnC,SAAW2F,GAAM3D,EAAe,IAAKD,EAAaI,KAAMwD,EAAEC,OAAOF,QACjEG,YAAY,kBAGhBnI,EAAAA,EAAAA,MAACoI,EAAAA,EAAK,CAAAlI,SAAA,EACJC,EAAAA,EAAAA,KAACuH,EAAAA,EAAKE,KAAI,CAACC,MAAM,WAAWC,UAAQ,EAAA5H,UAClCC,EAAAA,EAAAA,KAAC4H,EAAAA,EAAK,CACJ3F,KAAK,SACL4F,MAAO3D,EAAYK,YAAY,GAC/BpC,SAAW2F,GAAM3D,EAAe,IAAKD,EAAaK,YAAa,CAAC2D,WAAWJ,EAAEC,OAAOF,OAAQ3D,EAAYK,YAAY,MACpHyD,YAAY,sBAGhBhI,EAAAA,EAAAA,KAACuH,EAAAA,EAAKE,KAAI,CAACC,MAAM,YAAYC,UAAQ,EAAA5H,UACnCC,EAAAA,EAAAA,KAAC4H,EAAAA,EAAK,CACJ3F,KAAK,SACL4F,MAAO3D,EAAYK,YAAY,GAC/BpC,SAAW2F,GAAM3D,EAAe,IAAKD,EAAaK,YAAa,CAACL,EAAYK,YAAY,GAAI2D,WAAWJ,EAAEC,OAAOF,UAChHG,YAAY,gCAMlB,C,wECpJV,MAMA,EANqB3E,KAEjBrD,EAAAA,EAAAA,KAAA,OAAAD,SAAK,gB,qFCFT,MAwHA,EAxHoBX,IAgBb,IAhBc,YACnB+I,EAAW,eACXC,EAAc,QACd/D,EAAO,WACPgE,EAAU,YACVC,EAAW,eACXC,EAAc,YACdC,EAAW,eACXC,EAAc,MACdC,EAAK,SACLC,EAAQ,SACRC,EAAQ,YACRC,EAAW,4BACXC,EAA2B,SAC3BC,EAAQ,kBACRC,GACD5J,EACC,OACEY,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6CAA4CC,UACzDF,EAAAA,EAAAA,MAAA,QACEoJ,SAAUH,EACVhJ,UAAU,qFAAoFC,SAAA,EAE9FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kDAAiDC,SAC5DiJ,EAAoB,gCAAqB,kCAI5CnJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SAAC,uBACrDC,EAAAA,EAAAA,KAAA,SACEiC,KAAK,OACL4F,MAAOM,EACPhG,SAAW2F,GAAMM,EAAeN,EAAEC,OAAOF,OACzCF,UAAQ,EACR7H,UAAU,4EACVkI,YAAY,oCAKhBnI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SAAC,4BACrDC,EAAAA,EAAAA,KAAA,SACEiC,KAAK,OACL4F,MAAOxD,EACPlC,SAAW2F,GAAMO,EAAWP,EAAEC,OAAOF,OACrCF,UAAQ,EACR7H,UAAU,4EACVkI,YAAY,yCAKhBnI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SAAC,kCACrDC,EAAAA,EAAAA,KAAA,SACEiC,KAAK,OACL4F,MAAOS,EACPnG,SAAW2F,GAAMS,EAAeT,EAAEC,OAAOF,OACzCF,UAAQ,EACR7H,UAAU,4EACVkI,YAAY,+CAKhBnI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SAAC,uCACrDC,EAAAA,EAAAA,KAAA,SACEiC,KAAK,OACL4F,MAAOW,EACPrG,SAAW2F,GAAMW,EAAeX,EAAEC,OAAOF,OACzCF,UAAQ,EACR7H,UAAU,4EACVkI,YAAY,oDAKhBnI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SAAC,WACrDC,EAAAA,EAAAA,KAAA,SACEiC,KAAK,QACL4F,MAAOa,EACPvG,SAAW2F,GAAMa,EAASb,EAAEC,OAAOF,OACnCF,UAAQ,EACR7H,UAAU,4EACVkI,YAAY,wBAKhBnI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SAAC,uBACrDC,EAAAA,EAAAA,KAAA,SACEiC,KAAK,WACLC,QAAS0G,EACTzG,SAAW2F,GAAMe,EAAYf,EAAEC,OAAO7F,SACtCpC,UAAU,qFAKdE,EAAAA,EAAAA,KAAA,UACEiC,KAAK,SACLnC,UAAW,wDACTiJ,EACI,iCACA,qHAENG,SAAUH,EAAShJ,SAElBgJ,EAAW,wBAAgBC,EAAoB,qBAAa,iBAG7D,E,eCnHV,MAWA,EAX6B5J,IAA2C,IAA1C,KAAE+J,EAAI,QAAEC,EAAO,SAAEC,EAAQ,QAAE5H,GAASrC,EAChE,OACEY,EAAAA,EAAAA,KAACsJ,EAAAA,EAAY,CACXH,KAAMA,EACNC,QAASA,EACTC,SAAUA,EACV5H,QAASA,GACT,ECoCN,EA5CoBrC,IAA2C,IAA1C,QAAEmK,EAAO,QAAEtJ,EAAO,eAAEuJ,GAAgBpK,EACvD,OACES,EAAAA,EAAAA,MAAA,OACEC,UAAU,+JACVG,QAASA,EAAQF,SAAA,EAEjBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAwBC,SAAEwJ,EAAQnF,QAChDpE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,eAAcC,SAAEwJ,EAAQlF,WACrCrE,EAAAA,EAAAA,KAAA,KACEF,UAAW,0BACTyJ,EAAQX,SAAW,iBAAmB,gBACrC7I,SAEFwJ,EAAQX,SAAW,oBAAc,4BAGpC5I,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,mDAAkDC,SAAA,EACjEC,EAAAA,EAAAA,KAAA,SACEiC,KAAK,WACLnC,UAAU,UACVoC,QAASqH,EAAQX,SACjBzG,SAAUA,IAAMqH,EAAeD,EAAQhD,QAEzCvG,EAAAA,EAAAA,KAAA,OACEF,UAAW,kEACTyJ,EAAQX,SAAW,eAAiB,cACnC7I,UAEHC,EAAAA,EAAAA,KAAA,OACEF,UAAW,0GACTyJ,EAAQX,SAAW,0BAA4B,SAIrD5I,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,SAC3BwJ,EAAQX,SAAW,yBAAgB,6BAItC,ECsOV,EApQwBxF,KACtB,MAAO+E,EAAaC,IAAkB1I,EAAAA,EAAAA,UAAS,KACxC2E,EAASgE,IAAc3I,EAAAA,EAAAA,UAAS,KAChC4I,EAAaC,IAAkB7I,EAAAA,EAAAA,UAAS,KACxC8I,EAAaC,IAAkB/I,EAAAA,EAAAA,UAAS,KACxCgJ,EAAOC,IAAYjJ,EAAAA,EAAAA,UAAS,KAC5BsJ,EAAmBS,IAAwB/J,EAAAA,EAAAA,UAAS,OACpDgK,EAAcC,IAAmBjK,EAAAA,EAAAA,WAAS,IAC1CkK,EAAiBC,IAAsBnK,EAAAA,EAAAA,UAAS,KAChDoK,EAAkBC,IAAuBrK,EAAAA,EAAAA,UAAS,YAClDsK,EAAcC,IAAmBvK,EAAAA,EAAAA,WAAS,IAC1CwK,EAAeC,IAAoBzK,EAAAA,EAAAA,UAAS,KAC5C0K,EAAeC,IAAoB3K,EAAAA,EAAAA,UAAS,KAC5C4K,EAAkBC,IAAuB7K,EAAAA,EAAAA,UAAS,KAClD8K,EAAYC,IAAiB/K,EAAAA,EAAAA,UAAS,KACtCgL,EAAcC,IAAmBjL,EAAAA,EAAAA,WAAS,IAEzC2B,KAAMuJ,EAAerJ,UAAWsJ,EAAoBvJ,MAAOwJ,IAAmBC,EAAAA,EAAAA,OAC/EC,GAAiBzJ,UAAW0J,KAAgBC,EAAAA,EAAAA,OAC5CC,IAAiBC,EAAAA,EAAAA,OACjBC,IAAuBC,EAAAA,EAAAA,OACvBC,GAAmBhK,UAAWiK,KAAmBC,EAAAA,EAAAA,OAEjDC,EAAWC,IAAgBjM,EAAAA,EAAAA,UAAS,KAE3C4C,EAAAA,EAAAA,YAAU,KACJsI,GACFe,EAAaf,EAAcc,UAC7B,GACC,CAACd,IAEJ,MAAMgB,GAAWC,EAAAA,EAAAA,QAAO,MAElBC,EAAYA,KAChB1D,EAAe,IACfC,EAAW,IACXE,EAAe,IACfE,EAAe,IACfE,EAAS,IACTc,EAAqB,MACrBU,EAAiB,IACjBE,EAAiB,IACjBI,EAAc,IACdF,EAAoB,IACpBI,GAAgB,EAAM,EAGlBoB,EAAeA,CAAC1C,EAAU5H,KAC9BsI,EAAoBV,GACpBQ,EAAmBpI,GACnBkI,GAAgB,EAAK,EAGjBqC,EAAqBtF,UACzB,IACI,MAAMuF,QAAuBZ,EAAoBa,GAAWtF,SAC5D+E,GAAcQ,GACVA,EAActG,KAAK0D,GACfA,EAAQhD,MAAQ0F,EAAe1C,QAAQhD,IAAM0F,EAAe1C,QAAUA,MAK9EwC,EACI,UACA,cAAWE,EAAe1C,QAAQX,SAAW,mDAAsB,gLAE3E,CAAE,MAAOtH,GACLyK,EAAa,QAAS,sEAC1B,GA8DIK,EAAsBC,IACtBT,EAASU,UAAYV,EAASU,QAAQC,SAASF,EAAMtE,UACvDkC,GAAgB,GAChBuC,SAASC,KAAKC,MAAMC,SAAW,SACjC,EAUF,OAPArK,EAAAA,EAAAA,YAAU,KACRkK,SAASI,iBAAiB,YAAaR,GAChC,KACLI,SAASK,oBAAoB,YAAaT,EAAmB,IAE9D,KAGDvM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8EAA6EC,SAAA,EAC1FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAEiJ,EAAoB,gCAAqB,yBAClFnJ,EAAAA,EAAAA,MAAA,UACEC,UAAU,6FACVG,QAASA,KACP6L,IACA7B,GAAgB,GAChBU,GAAgB,GAChB6B,SAASC,KAAKC,MAAMC,SAAW,QAAQ,EACvC5M,SAAA,EAEFC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAkB,yBAIhCkK,IACChK,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wEAAwEgN,IAAKlB,EAAS7L,UACnGF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,QACEF,UAAU,qFACVG,QAASA,KACPgK,GAAgB,GAChBuC,SAASC,KAAKC,MAAMC,SAAW,MAAM,EACrC5M,SACH,UAGDC,EAAAA,EAAAA,KAAC+M,EAAW,CACV5E,YAAaA,EACbC,eAAgBA,EAChB/D,QAASA,EACTgE,WAAYA,EACZC,YAAaA,EACbC,eAAgBA,EAChBC,YAAaA,EACbC,eAAgBA,EAChBC,MAAOA,EACPC,SAAUA,EACVG,4BAhHwBpC,UAClCoB,EAAEkF,iBACF,IACE,MAAMC,EAAc,CAAE7I,KAAM+D,EAAa9D,UAASiE,cAAaE,cAAaE,SAE5E,GAAIM,EAAmB,CACrB,MAAMiD,QAAuBd,EAAc,CAAEe,UAAWlD,EAAmBkE,YAAaD,IAAerG,SACvG+E,GAAcQ,GACZA,EAActG,KAAK0D,GACjBA,EAAQhD,MAAQ0F,EAAe1C,QAAQhD,IAAM0F,EAAe1C,QAAUA,MAG1EwC,EAAa,UAAW,kDAC1B,KAAO,CACL,MAAMoB,QAAmBnC,EAAciC,GAAarG,SACpD+E,GAAcQ,GAAkB,IAAIA,EAAegB,EAAW5D,WAC9DwC,EAAa,UAAW,wCAC1B,CAEAD,IACA7B,GAAgB,GAChBuC,SAASC,KAAKC,MAAMC,SAAW,MACjC,CAAE,MAAOrL,GACPyK,EAAa,QAAS,wHACxB,GAyFUhD,SAAUkC,EACVjC,kBAAmBA,IAEpB0B,IACC7K,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,6BAA4BC,SAAC,kCAC3CC,EAAAA,EAAAA,KAAA,SACEiC,KAAK,OACL4F,MAAOqC,EACP/H,SAAW2F,GAAMqC,EAAiBrC,EAAEC,OAAOF,OAC3CG,YAAY,iDACZlI,UAAU,uDAEZE,EAAAA,EAAAA,KAAA,SACEiC,KAAK,WACL4F,MAAOuC,EACPjI,SAAW2F,GAAMuC,EAAiBvC,EAAEC,OAAOF,OAC3CG,YAAY,oCACZlI,UAAU,uDAEXE,EAAAA,EAAAA,KAAA,SACCiC,KAAK,QACL4F,MAAO2C,EACPrI,SAAW2F,GAAM2C,EAAc3C,EAAEC,OAAOF,OACxCG,YAAY,uBACZlI,UAAU,uDAGVE,EAAAA,EAAAA,KAAA,SACAiC,KAAK,OACL4F,MAAOyC,EACPnI,SAAW2F,GAAMyC,EAAoBzC,EAAEC,OAAOF,OAC9CG,YAAY,mDACZlI,UAAU,uDAEZE,EAAAA,EAAAA,KAAA,UACEC,QA9GOyG,UACrB,GAAIwD,GAAiBE,EACnB,UACQmB,EAAgB,CACpBW,UAAWlD,EACXoE,SAAUlD,EACVmD,SAAUjD,EACV1B,MAAO8B,EACPhC,YAAa8B,IACZ1D,SACHmF,EAAa,UAAW,mCACxBD,GACF,CAAE,MAAOxK,GAAQ,IAADgM,EACdvB,EAAa,SAAc,OAALzK,QAAK,IAALA,GAAW,QAANgM,EAALhM,EAAOD,YAAI,IAAAiM,OAAN,EAALA,EAAa7L,UAAW,mGAChD,MAEAsK,EAAa,UAAW,kFAC1B,EA8Fc7C,SAAUsC,EACV1L,UAAU,4FAA2FC,SAEpGyL,EAAgB,uBAAiB,2BAQ9CxL,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kCAAiCC,SAAC,oCAChDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qEAAoEC,SAChF8K,GACC7K,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0BAEH2L,EAAU7F,KAAK0D,IACbvJ,EAAAA,EAAAA,KAACuN,EAAW,CAEVhE,QAASA,EACTtJ,QAASA,IA/IIsJ,KACvBE,EAAqBF,EAAQhD,KAC7B6B,EAAemB,EAAQnF,MACvBiE,EAAWkB,EAAQlF,SACnBkE,EAAegB,EAAQjB,aACvBG,EAAec,EAAQf,aACvBG,EAASY,EAAQb,OACjBuB,GAAgB,GAChBU,GAAgB,GAChB6B,SAASC,KAAKC,MAAMC,SAAW,QAAQ,EAsIda,CAAgBjE,GAC/BC,eAAgBwC,GAHXzC,EAAQhD,SASpBuE,IAAkB9K,EAAAA,EAAAA,KAAA,KAAGF,UAAU,oBAAmBC,SAAE+K,KACrD9K,EAAAA,EAAAA,KAACyN,EAAoB,CACnBtE,KAAMO,EACNN,QAASA,IAAMO,GAAgB,GAC/BN,SAAUS,EACVrI,QAASmI,MAEP,C,8JCvQV,MAsGA,EAtGoBtG,KAClB,MAAQjC,KAAMqM,EAAS,UAAEnM,EAAS,QAAEoM,IAAYC,EAAAA,EAAAA,MAG1CC,EAAU,CACd,CACExN,MAAO,iCACPyN,UAAW,WACXC,IAAK,WACLC,OAASC,IAASjO,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAEkO,KAErD,CACE5N,MAAO,QACPyN,UAAW,QACXC,IAAK,SAEP,CACE1N,MAAO,aACPyN,UAAW,SACXC,IAAK,SACLC,OAASE,IACP,IAAIC,EAAmB,eAAXD,EAA0B,UAAuB,iBAAXA,EAA4B,QAAU,OACxF,OAAOlO,EAAAA,EAAAA,KAACoO,EAAAA,EAAG,CAACD,MAAOA,EAAMpO,SAAEmO,EAAOG,eAAoB,GAG1D,CACEhO,MAAO,6CACPyN,UAAW,YACXC,IAAK,YACLC,OAASM,GAAeA,EAAYC,IAAOD,GAAWE,OAAO,oBAAsB,sCAErF,CACEnO,MAAO,qBACPyN,UAAW,WACXC,IAAK,WACLC,OAASpF,IACP5I,EAAAA,EAAAA,KAACoO,EAAAA,EAAG,CAACD,MAAOvF,EAAW,QAAU,MAAM7I,SACpC6I,EAAW,2BAAc,4BAIhC,CACEvI,MAAO,yBACP0N,IAAK,SACLC,OAASS,IACP5O,EAAAA,EAAAA,MAACoI,EAAAA,EAAK,CAACyG,KAAK,SAAQ3O,SAAA,EAClBC,EAAAA,EAAAA,KAACwF,EAAAA,GAAM,CAACvD,KAAK,UAAUhC,QAASA,IAAM0O,EAAeF,GAAQ1O,SAAC,cAG9DC,EAAAA,EAAAA,KAACwF,EAAAA,GAAM,CAACoJ,QAAM,EAAC3O,QAASA,IAAM+L,EAAmByC,GAAQ1O,SACtD0O,EAAO7F,SAAW,yBAAgB,2BAOvC+F,EAAkBE,IAEtBC,QAAQC,IAAI,+CAAyBF,EAAK,EAGtC7C,EAAqBtF,UACzB,IAEEoI,QAAQC,IAAI,iEAAmCF,EACjD,CAAE,MAAOvN,GACPwN,QAAQxN,MAAM,2DAAkCA,EAClD,GAQF,OALAgB,EAAAA,EAAAA,YAAU,KAERqL,GAAS,GACR,CAACA,KAGF9N,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6DAA4DC,SAAA,EACzEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qBAAoBC,SAAC,6CACnCC,EAAAA,EAAAA,KAACwF,EAAAA,GAAM,CAACvD,KAAK,UAAUhC,QAAS0N,EAAQ5N,SAAC,uCAK1CwB,GACCvB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wCAAuCC,UACpDC,EAAAA,EAAAA,KAACgP,EAAAA,EAAI,CAACN,KAAK,aAGb1O,EAAAA,EAAAA,KAACiP,EAAAA,EAAK,CACJpB,QAASA,EACTqB,WAAYC,MAAMC,QAAiB,OAAT1B,QAAS,IAATA,OAAS,EAATA,EAAW2B,OAAS3B,EAAU2B,MAAQ,GAChEC,OAASb,GAAWA,EAAOlI,IAC3BzG,UAAU,gDACVyP,WAAY,CAAEC,SAAU,QAGxB,C,6FCnGV,MAAMC,EAAQC,EAAAA,YAAiB,SAAeC,EAAO7C,GACnD,OAAO9M,EAAAA,EAAAA,KAAC4P,EAAAA,EAAQ,CAACC,UAAW,EAAG/C,IAAKA,EAAKgD,QAAQ,YAAaH,GAChE,IAiBA,EAfqBvQ,IAAiG,IAAhG,KAAE+J,EAAI,QAAEC,EAAO,SAAEC,EAAQ,QAAE5H,EAAO,iBAAEsO,EAAmB,IAAI,oBAAEC,EAAsBC,EAAAA,GAAO7Q,EAC9G,OACEY,EAAAA,EAAAA,KAACkQ,EAAAA,EAAQ,CACP/G,KAAMA,EACN4G,iBAAkBA,EAClB3G,QAASA,EACT4G,oBAAqBA,EACrBG,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAAUtQ,UAEvDC,EAAAA,EAAAA,KAACyP,EAAK,CAACrG,QAASA,EAASC,SAAUA,EAAUiH,GAAI,CAAEC,MAAO,QAASxQ,SAChE0B,KAEM,C","sources":["components/SuperAdmin/SideBar/Sidebar.js","components/SuperAdmin/navSideBar/Statistics.js","components/SuperAdmin/navSideBar/Settings.js","components/SuperAdmin/SuperAdminDashboard.js","components/SuperAdmin/navSideBar/Location.js","components/SuperAdmin/navSideBar/ManageAdmins.js","components/SuperAdmin/navSideBar/Company/CompanyForm.js","components/SuperAdmin/navSideBar/Company/SnackbarNotification.js","components/SuperAdmin/navSideBar/Company/CompanyCard.js","components/SuperAdmin/navSideBar/ManageCompanies.js","components/SuperAdmin/navSideBar/ManageUsers.js","components/shared/Notification/Notification.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FaHome, FaClipboardList, FaUser, FaChartBar, FaCogs, FaSignOutAlt, FaChevronLeft, FaChevronRight, FaSearchLocation } from 'react-icons/fa';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from '../../../Redux/User/userSlice';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst Sidebar = ({ setActiveContent }) => {\r\n  const dispatch = useDispatch();\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const handleNavigation = (content) => {\r\n    setActiveContent(content);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`h-screen fixed top-0 left-0 flex flex-col items-center bg-gray-900 text-white shadow-lg transition-all duration-300 ${\r\n        collapsed ? 'w-16' : 'w-64'\r\n      }`}\r\n    >\r\n      {/* Sidebar Header */}\r\n      <div className=\"w-full p-4 flex justify-between items-center bg-gray-800\">\r\n        {!collapsed && <span className=\"font-bold text-lg\">Quản lý Hệ thống</span>}\r\n        <button\r\n          className=\"text-xl text-gray-400 hover:text-white focus:outline-none ml-auto\"\r\n          onClick={() => setCollapsed(!collapsed)}\r\n        >\r\n          {collapsed ? <FaChevronRight /> : <FaChevronLeft />}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Navigation Menu */}\r\n      <ul className=\"flex-1 w-full mt-4 space-y-1\">\r\n        {/* Tổng Quan */}\r\n        <Tooltip title=\"Tổng Quan\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('default')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaHome className=\"text-xl\" />\r\n            {/* Ẩn chữ khi Sidebar thu gọn */}\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Tổng Quan</span>\r\n          </li>\r\n        </Tooltip>\r\n\r\n        {/* Quản lý Công ty */}\r\n        <Tooltip title=\"Quản lý Công ty\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('companies')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaClipboardList className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Quản lý Công ty</span>\r\n          </li>\r\n        </Tooltip>\r\n        {/* Quản lý Người dùng */}\r\n        <Tooltip title=\"Quản lý Người dùng\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('users')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaUser className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Quản lý Người dùng</span>\r\n          </li>\r\n        </Tooltip>\r\n\r\n        {/* Thống kê */}\r\n        <Tooltip title=\"Thống kê\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('statistics')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaChartBar className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Thống kê</span>\r\n          </li>\r\n        </Tooltip>\r\n\r\n        {/* Nhật ký hoạt động */}\r\n        <Tooltip title=\"Địa điểm\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('Location')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaSearchLocation className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Địa điểm cho hệ thống</span>\r\n          </li>\r\n        </Tooltip>\r\n\r\n        {/* Cài đặt */}\r\n        <Tooltip title=\"Cài đặt\" placement=\"right\" visible={collapsed}>\r\n          <li\r\n            onClick={() => handleNavigation('settings')}\r\n            className={`flex items-center p-3 hover:bg-gray-800 transition-all duration-300 cursor-pointer ${\r\n              collapsed ? 'justify-center' : 'justify-start'\r\n            }`}\r\n          >\r\n            <FaCogs className=\"text-xl\" />\r\n            <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Cài đặt</span>\r\n          </li>\r\n        </Tooltip>\r\n      </ul>\r\n\r\n      {/* Nút Đăng Xuất */}\r\n      <Tooltip title=\"Đăng Xuất\" placement=\"right\" visible={collapsed}>\r\n        <li\r\n          onClick={handleLogout}\r\n          className={`flex items-center p-4 hover:bg-red-600 transition-all duration-300 cursor-pointer ${\r\n            collapsed ? 'justify-center' : 'justify-start'\r\n          }`}\r\n        >\r\n          <FaSignOutAlt className=\"text-xl\" />\r\n          <span className={`${collapsed ? 'hidden' : 'ml-3'}`}>Đăng Xuất</span>\r\n        </li>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { useGetRevenueStatisticsQuery } from '../../../Redux/Revenue/revenueApiSlice'; // Import hook từ slice RTK Query\r\n\r\nconst Statistics = () => {\r\n  // Gọi API để lấy dữ liệu thống kê doanh thu\r\n  const { data, error, isLoading } = useGetRevenueStatisticsQuery({ });\r\n\r\n  if (isLoading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  return (\r\n    <div className=\"statistics-container\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Thống kê doanh thu</h1>\r\n      <div className=\"statistics-details\">\r\n        <p>Tổng doanh thu: {data?.data.totalRevenue} VND</p>\r\n        <p>Tổng số lương đặt vé: {data?.data.totalBookings}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { useState } from 'react';\r\n\r\nconst Settings = () => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [emailNotifications, setEmailNotifications] = useState(true);\r\n\r\n  return (\r\n    <div className=\"p-8\">\r\n      <h2 className=\"text-2xl font-bold mb-6\">Cài đặt</h2>\r\n\r\n      <div className=\"space-y-6\">\r\n        {/* Dark Mode Setting */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <span>Chế độ tối</span>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={darkMode}\r\n            onChange={() => setDarkMode(!darkMode)}\r\n            className=\"form-checkbox h-6 w-6 text-blue-600\"\r\n          />\r\n        </div>\r\n\r\n        {/* Email Notifications */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <span>Thông báo qua email</span>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={emailNotifications}\r\n            onChange={() => setEmailNotifications(!emailNotifications)}\r\n            className=\"form-checkbox h-6 w-6 text-blue-600\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Sidebar from './SideBar/Sidebar';\r\nimport ManageCompanies from './navSideBar/ManageCompanies';\r\nimport ManageAdmins from './navSideBar/ManageAdmins';\r\nimport ManageUsers from './navSideBar/ManageUsers';\r\nimport './SuperAdminDashboard.css';\r\nimport Statistics from './navSideBar/Statistics';\r\nimport Settings from './navSideBar/Settings';\r\nimport Location from './navSideBar/Location';\r\n\r\nconst SuperAdminDashboard = () => {\r\n  const [activeContent, setActiveContent] = useState('default');\r\n  const [collapsed, setCollapsed] = useState(false); // Trạng thái Sidebar thu nhỏ/mở rộng\r\n\r\n  useEffect(() => {\r\n    notify();\r\n  }, []);\r\n\r\n  // Thông báo chào mừng\r\n  const notify = () => {\r\n    toast.success(\"Chào mừng bạn đến với hệ thống!\", {\r\n      autoClose: 1500,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      position: 'top-right' // Đặt vị trí thông báo cho dễ nhìn\r\n    });\r\n  };\r\n\r\n  // Render nội dung chính theo từng lựa chọn\r\n  const renderContent = () => {\r\n    switch (activeContent) {\r\n      case 'default':\r\n        return (\r\n          <div className=\"text-3xl font-bold text-center text-red-500 mt-10\">\r\n            CHÀO MỪNG BẠN ĐẾN TRANG QUẢN LÍ HỆ THỐNG\r\n          </div>\r\n        );\r\n      case 'companies':\r\n        return <ManageCompanies />;\r\n      case 'admins':\r\n        return <ManageAdmins />;\r\n      case 'users':\r\n        return <ManageUsers />;\r\n      case 'statistics':\r\n        return <Statistics />;\r\n      case 'Location':\r\n        return <Location/>\r\n      case 'settings':\r\n        return <Settings />;\r\n      case 'reports':\r\n        return <div>Báo cáo Content</div>;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"super-admin-dashboard flex\">\r\n      <Sidebar setActiveContent={setActiveContent} collapsed={collapsed} setCollapsed={setCollapsed} />\r\n      <div className={`main-content transition-all duration-300 ${collapsed ? 'ml-16' : 'ml-64'} p-8`}>\r\n        {renderContent()}\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuperAdminDashboard;\r\n","import React, { useState } from 'react';\r\nimport { Button, Input, Modal, Card, Col, Row, Form, Space, Typography, message } from 'antd';\r\nimport { PlusOutlined, EditOutlined, EyeOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { useGetLocationsQuery, useCreateLocationMutation, useGetLocationByIdQuery, useUpdateLocationMutation, useDeleteLocationMutation } from '../../../Redux/Location/locationApiSlice';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Location = () => {\r\n  const [selectedLocationId, setSelectedLocationId] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [newLocation, setNewLocation] = useState({ name: '', address: '', city: '', coordinates: [0, 0] });\r\n\r\n  const { data: locations, error, isLoading } = useGetLocationsQuery();\r\n  const [createLocation] = useCreateLocationMutation();\r\n  const [updateLocation] = useUpdateLocationMutation();\r\n  const [deleteLocation] = useDeleteLocationMutation();\r\n\r\n  const { data: locationDetail } = useGetLocationByIdQuery(selectedLocationId, { skip: !selectedLocationId });\r\n\r\n  const handleOpenModal = (location = null) => {\r\n    setIsEditing(!!location);\r\n    setNewLocation(location || { name: '', address: '', city: '', coordinates: [0, 0] });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => setIsModalOpen(false);\r\n\r\n  const handleCreateOrUpdate = async () => {\r\n    try {\r\n      if (isEditing) {\r\n        await updateLocation({ id: newLocation._id, updatedLocation: newLocation }).unwrap();\r\n        message.success('Location updated successfully');\r\n      } else {\r\n        await createLocation(newLocation).unwrap();\r\n        message.success('Location created successfully');\r\n      }\r\n      handleCloseModal();\r\n    } catch (error) {\r\n      message.error('Failed to save location');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteLocation(id).unwrap();\r\n      message.success('Location deleted successfully');\r\n    } catch (error) {\r\n      message.error('Failed to delete location');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 bg-gray-100 min-h-screen\">\r\n      <Title level={2} className=\"text-center text-blue-700 mb-8 font-bold\">Location Management</Title>\r\n\r\n      {/* Danh sách địa điểm */}\r\n      <div className=\"bg-white p-4 rounded-lg shadow-lg mb-8\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <Title level={4} className=\"text-blue-600\">All Locations</Title>\r\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => handleOpenModal()} className=\"bg-blue-600\">Add Location</Button>\r\n        </div>\r\n\r\n        {isLoading && <p>Loading...</p>}\r\n        {error && <p className=\"text-red-500\">Error loading locations</p>}\r\n\r\n        <Row gutter={16}>\r\n          {locations?.data?.map((location) => (\r\n            <Col xs={24} sm={12} md={8} lg={6} key={location._id}>\r\n              <Card\r\n                hoverable\r\n                className=\"location-card shadow-md hover:shadow-lg transition-shadow duration-300\"\r\n                actions={[\r\n                  <EyeOutlined onClick={() => setSelectedLocationId(location._id)} />,\r\n                  <EditOutlined onClick={() => handleOpenModal(location)} />,\r\n                  <DeleteOutlined onClick={() => handleDelete(location._id)} />,\r\n                ]}\r\n              >\r\n                <Card.Meta\r\n                  title={<span className=\"text-blue-600 font-semibold\">{location.name}</span>}\r\n                  description={`${location.address}, ${location.city}`}\r\n                />\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n\r\n      {/* Chi tiết địa điểm */}\r\n      {locationDetail && (\r\n        <div className=\"bg-white p-4 rounded-lg shadow-lg mb-6\">\r\n          <Title level={4} className=\"text-blue-600\">Location Detail</Title>\r\n          <p><strong>Name:</strong> {locationDetail.data.name}</p>\r\n          <p><strong>Address:</strong> {locationDetail.data.address}</p>\r\n          <p><strong>City:</strong> {locationDetail.data.city}</p>\r\n          <p><strong>Coordinates:</strong> {locationDetail.data.coordinates.coordinates.join(', ')}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal Thêm / Cập nhật địa điểm */}\r\n      <Modal\r\n        title={isEditing ? 'Edit Location' : 'Add New Location'}\r\n        visible={isModalOpen}\r\n        onOk={handleCreateOrUpdate}\r\n        onCancel={handleCloseModal}\r\n        okText={isEditing ? 'Update' : 'Create'}\r\n        okButtonProps={{ className: 'bg-blue-600' }}\r\n      >\r\n        <Form layout=\"vertical\">\r\n          <Form.Item label=\"Name\" required>\r\n            <Input\r\n              value={newLocation.name}\r\n              onChange={(e) => setNewLocation({ ...newLocation, name: e.target.value })}\r\n              placeholder=\"Enter location name\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Address\" required>\r\n            <Input\r\n              value={newLocation.address}\r\n              onChange={(e) => setNewLocation({ ...newLocation, address: e.target.value })}\r\n              placeholder=\"Enter address\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"City\" required>\r\n            <Input\r\n              value={newLocation.city}\r\n              onChange={(e) => setNewLocation({ ...newLocation, city: e.target.value })}\r\n              placeholder=\"Enter city\"\r\n            />\r\n          </Form.Item>\r\n          <Space>\r\n            <Form.Item label=\"Latitude\" required>\r\n              <Input\r\n                type=\"number\"\r\n                value={newLocation.coordinates[0]}\r\n                onChange={(e) => setNewLocation({ ...newLocation, coordinates: [parseFloat(e.target.value), newLocation.coordinates[1]] })}\r\n                placeholder=\"Enter latitude\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item label=\"Longitude\" required>\r\n              <Input\r\n                type=\"number\"\r\n                value={newLocation.coordinates[1]}\r\n                onChange={(e) => setNewLocation({ ...newLocation, coordinates: [newLocation.coordinates[0], parseFloat(e.target.value)] })}\r\n                placeholder=\"Enter longitude\"\r\n              />\r\n            </Form.Item>\r\n          </Space>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import React from 'react'\r\n\r\nconst ManageAdmins = () => {\r\n  return (\r\n    <div>ManageAdmins</div>\r\n  )\r\n}\r\n\r\nexport default ManageAdmins","import React from 'react';\r\n\r\nconst CompanyForm = ({\r\n  companyName,\r\n  setCompanyName,\r\n  address,\r\n  setAddress,\r\n  contactInfo,\r\n  setContactInfo,\r\n  phoneNumber,\r\n  setPhoneNumber,\r\n  email,\r\n  setEmail,\r\n  isActive,\r\n  setIsActive,\r\n  handleCreateOrUpdateCompany,\r\n  creating,\r\n  selectedCompanyId,\r\n}) => {\r\n  return (\r\n    <div className=\"w-full flex justify-center items-start p-4\">\r\n      <form\r\n        onSubmit={handleCreateOrUpdateCompany}\r\n        className=\"bg-white shadow-md rounded-lg p-4 space-y-4 max-w-sm w-full border border-gray-200\"\r\n      >\r\n        <h2 className=\"text-xl font-semibold text-center text-blue-600\">\r\n          {selectedCompanyId ? 'Cập nhật công ty' : 'Tạo công ty mới'}\r\n        </h2>\r\n\r\n        {/* Company Name */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Tên công ty</label>\r\n          <input\r\n            type=\"text\"\r\n            value={companyName}\r\n            onChange={(e) => setCompanyName(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập tên công ty\"\r\n          />\r\n        </div>\r\n\r\n        {/* Address */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Địa chỉ</label>\r\n          <input\r\n            type=\"text\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập địa chỉ\"\r\n          />\r\n        </div>\r\n\r\n        {/* Contact Info */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Thông tin liên hệ</label>\r\n          <input\r\n            type=\"text\"\r\n            value={contactInfo}\r\n            onChange={(e) => setContactInfo(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập thông tin liên hệ\"\r\n          />\r\n        </div>\r\n\r\n        {/* Phone Number */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Số điện thoại</label>\r\n          <input\r\n            type=\"text\"\r\n            value={phoneNumber}\r\n            onChange={(e) => setPhoneNumber(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập số điện thoại\"\r\n          />\r\n        </div>\r\n\r\n        {/* Email */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập email\"\r\n          />\r\n        </div>\r\n\r\n        {/* Active Status Toggle */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Kích hoạt</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isActive}\r\n            onChange={(e) => setIsActive(e.target.checked)}\r\n            className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n          />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <button\r\n          type=\"submit\"\r\n          className={`w-full py-2 text-white font-medium rounded-lg shadow ${\r\n            creating\r\n              ? 'bg-blue-300 cursor-not-allowed'\r\n              : 'bg-gradient-to-r from-blue-500 to-blue-600 hover:bg-blue-700'\r\n          } focus:outline-none focus:ring-2 focus:ring-blue-500`}\r\n          disabled={creating}\r\n        >\r\n          {creating ? 'Đang lưu...' : selectedCompanyId ? 'Cập nhật' : 'Lưu'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyForm;\r\n","import React from 'react';\r\nimport Notification from '../../../shared/Notification/Notification';\r\n\r\nconst SnackbarNotification = ({ open, onClose, severity, message }) => {\r\n  return (\r\n    <Notification\r\n      open={open}\r\n      onClose={onClose}\r\n      severity={severity}\r\n      message={message}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SnackbarNotification;\r\n","import React from 'react';\r\n\r\nconst CompanyCard = ({ company, onClick, onToggleStatus }) => {\r\n  return (\r\n    <div\r\n      className=\"company-card bg-gradient-to-r from-blue-400 to-purple-300 rounded-lg shadow-lg p-6 hover:shadow-2xl transition-shadow duration-300 cursor-pointer text-white\"\r\n      onClick={onClick}\r\n    >\r\n      <h3 className=\"text-lg font-bold mb-2\">{company.name}</h3>\r\n      <p className=\"text-sm mb-4\">{company.address}</p>\r\n      <p\r\n        className={`text-sm font-semibold ${\r\n          company.isActive ? 'text-green-200' : 'text-red-200'\r\n        }`}\r\n      >\r\n        {company.isActive ? 'Kích hoạt' : 'Vô hiệu hóa'}\r\n      </p>\r\n\r\n      <div className=\"mt-4 flex items-center\">\r\n        <label className=\"relative inline-flex items-center cursor-pointer\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"sr-only\"\r\n            checked={company.isActive}\r\n            onChange={() => onToggleStatus(company._id)}\r\n          />\r\n          <div\r\n            className={`w-10 h-5 rounded-full transition-all duration-300 ease-in-out ${\r\n              company.isActive ? 'bg-green-400' : 'bg-red-400'\r\n            }`}\r\n          >\r\n            <div\r\n              className={`dot absolute left-1 top-1 bg-white w-3 h-3 rounded-full transition-transform duration-300 ease-in-out ${\r\n                company.isActive ? 'transform translate-x-5' : ''\r\n              }`}\r\n            ></div>\r\n          </div>\r\n          <span className=\"ml-3 text-sm\">\r\n            {company.isActive ? 'Vô hiệu hóa' : 'Kích hoạt'}\r\n          </span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyCard;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  useAddCompanyAdminMutation,\r\n  useCreateCompanyMutation,\r\n  useUpdateCompanyMutation,\r\n  useGetCompaniesQuery,\r\n  useToggleCompanyStatusMutation,\r\n} from '../../../Redux/Company/companyApiSlice';\r\nimport CompanyForm from './Company/CompanyForm';\r\nimport SnackbarNotification from './Company/SnackbarNotification';\r\nimport CompanyCard from './Company/CompanyCard';\r\n\r\nconst ManageCompanies = () => {\r\n  const [companyName, setCompanyName] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [contactInfo, setContactInfo] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [selectedCompanyId, setSelectedCompanyId] = useState(null);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [snackbarSeverity, setSnackbarSeverity] = useState('success');\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [adminUserName, setAdminUserName] = useState('');\r\n  const [adminPassword, setAdminPassword] = useState('');\r\n  const [adminPhoneNumber, setAdminPhoneNumber] = useState('');\r\n  const [adminEmail, setAdminEmail] = useState('');\r\n  const [showAddAdmin, setShowAddAdmin] = useState(false);\r\n\r\n  const { data: companiesData, isLoading: isCompaniesLoading, error: companiesError } = useGetCompaniesQuery();\r\n  const [createCompany, { isLoading: isCreating }] = useCreateCompanyMutation();\r\n  const [updateCompany] = useUpdateCompanyMutation();\r\n  const [toggleCompanyStatus] = useToggleCompanyStatusMutation();\r\n  const [addCompanyAdmin, { isLoading: isAddingAdmin }] = useAddCompanyAdminMutation();\r\n\r\n  const [companies, setCompanies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (companiesData) {\r\n      setCompanies(companiesData.companies);\r\n    }\r\n  }, [companiesData]);\r\n\r\n  const modalRef = useRef(null);\r\n\r\n  const resetForm = () => {\r\n    setCompanyName('');\r\n    setAddress('');\r\n    setContactInfo('');\r\n    setPhoneNumber('');\r\n    setEmail('');\r\n    setSelectedCompanyId(null);\r\n    setAdminUserName('');\r\n    setAdminPassword('');\r\n    setAdminEmail('');\r\n    setAdminPhoneNumber('');\r\n    setShowAddAdmin(false);\r\n  };\r\n\r\n  const showSnackbar = (severity, message) => {\r\n    setSnackbarSeverity(severity);\r\n    setSnackbarMessage(message);\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const handleToggleStatus = async (companyId) => {\r\n    try {\r\n        const updatedCompany = await toggleCompanyStatus(companyId).unwrap();\r\n        setCompanies((prevCompanies) =>\r\n            prevCompanies.map((company) =>\r\n                company._id === updatedCompany.company._id ? updatedCompany.company : company\r\n            )\r\n        );\r\n        \r\n        // Hiển thị thông báo khi thay đổi trạng thái công ty thành công\r\n        showSnackbar(\r\n            'success',\r\n            `Công ty ${updatedCompany.company.isActive ? 'đã được kích hoạt' : 'đã bị vô hiệu hóa'} và tất cả các tài khoản liên quan cũng được cập nhật trạng thái.`\r\n        );\r\n    } catch (error) {\r\n        showSnackbar('error', 'Không thể thay đổi trạng thái công ty.');\r\n    }\r\n};\r\n\r\n  const handleCreateOrUpdateCompany = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const companyData = { name: companyName, address, contactInfo, phoneNumber, email };\r\n\r\n      if (selectedCompanyId) {\r\n        const updatedCompany = await updateCompany({ companyId: selectedCompanyId, updatedData: companyData }).unwrap();\r\n        setCompanies((prevCompanies) =>\r\n          prevCompanies.map((company) =>\r\n            company._id === updatedCompany.company._id ? updatedCompany.company : company\r\n          )\r\n        );\r\n        showSnackbar('success', 'Cập nhật công ty thành công!');\r\n      } else {\r\n        const newCompany = await createCompany(companyData).unwrap();\r\n        setCompanies((prevCompanies) => [...prevCompanies, newCompany.company]);\r\n        showSnackbar('success', 'Tạo công ty thành công!');\r\n      }\r\n\r\n      resetForm();\r\n      setModalVisible(false);\r\n      document.body.style.overflow = 'auto'; // Re-enable scrolling when modal is closed\r\n    } catch (error) {\r\n      showSnackbar('error', 'Không thể thực hiện tác vụ. Vui lòng kiểm tra thông tin và thử lại.');\r\n    }\r\n  };\r\n\r\n  const handleCardClick = (company) => {\r\n    setSelectedCompanyId(company._id);\r\n    setCompanyName(company.name);\r\n    setAddress(company.address);\r\n    setContactInfo(company.contactInfo);\r\n    setPhoneNumber(company.phoneNumber);\r\n    setEmail(company.email);\r\n    setModalVisible(true);\r\n    setShowAddAdmin(true);\r\n    document.body.style.overflow = 'hidden';\r\n  };\r\n\r\n  const handleAddAdmin = async () => {\r\n    if (adminUserName && adminPassword) {\r\n      try {\r\n        await addCompanyAdmin({\r\n          companyId: selectedCompanyId,\r\n          userName: adminUserName,\r\n          password: adminPassword,\r\n          email: adminEmail,         \r\n          phoneNumber: adminPhoneNumber\r\n        }).unwrap();\r\n        showSnackbar('success', 'Thêm admin thành công!');\r\n        resetForm();\r\n      } catch (error) {\r\n        showSnackbar('error', error?.data?.message || 'Không thể thêm admin. Vui lòng kiểm tra thông tin và thử lại.');\r\n      }\r\n    } else {\r\n      showSnackbar('warning', 'Vui lòng nhập tên đăng nhập và mật khẩu.');\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n      setModalVisible(false);\r\n      document.body.style.overflow = 'hidden'; // Re-enable scrolling when modal is closed\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"manage-companies bg-gradient-to-r from-blue-50 to-blue-100 min-h-screen p-8\">\r\n      <h2 className=\"text-3xl font-bold mb-4\">{selectedCompanyId ? 'Cập nhật Công Ty' : 'Tạo Công Ty'}</h2>\r\n      <button\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition duration-300 mb-6\"\r\n        onClick={() => {\r\n          resetForm();\r\n          setModalVisible(true);\r\n          setShowAddAdmin(false);\r\n          document.body.style.overflow = 'hidden'; \r\n        }}\r\n      >\r\n        <i className=\"fas fa-plus\"></i> Thêm công ty\r\n      </button>\r\n\r\n      {/* Modal for creating/updating company */}\r\n      {modalVisible && (\r\n        <div className=\"fixed inset-y-0 right-0 bg-white shadow-lg z-50 w-1/4 overflow-y-auto\" ref={modalRef}>\r\n          <div className=\"p-6 relative\">\r\n            <span\r\n              className=\"absolute top-2 right-4 text-gray-500 cursor-pointer hover:text-gray-700 transition\"\r\n              onClick={() => {\r\n                setModalVisible(false);\r\n                document.body.style.overflow = 'auto'; // Re-enable scrolling when modal is closed\r\n              }}\r\n            >\r\n              &times;\r\n            </span>\r\n            <CompanyForm\r\n              companyName={companyName}\r\n              setCompanyName={setCompanyName}\r\n              address={address}\r\n              setAddress={setAddress}\r\n              contactInfo={contactInfo}\r\n              setContactInfo={setContactInfo}\r\n              phoneNumber={phoneNumber}\r\n              setPhoneNumber={setPhoneNumber}\r\n              email={email}\r\n              setEmail={setEmail}\r\n              handleCreateOrUpdateCompany={handleCreateOrUpdateCompany}\r\n              creating={isCreating}\r\n              selectedCompanyId={selectedCompanyId}\r\n            />\r\n            {showAddAdmin && (\r\n              <div className=\"mt-8\">\r\n                <h4 className=\"text-lg font-semibold mb-4\">Thêm Admin cho Công Ty</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={adminUserName}\r\n                  onChange={(e) => setAdminUserName(e.target.value)}\r\n                  placeholder=\"Tên Đăng Nhập của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  value={adminPassword}\r\n                  onChange={(e) => setAdminPassword(e.target.value)}\r\n                  placeholder=\"Mật khẩu của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n                 <input\r\n                  type=\"email\"\r\n                  value={adminEmail}\r\n                  onChange={(e) => setAdminEmail(e.target.value)}\r\n                  placeholder=\"Email của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n\r\n                  <input\r\n                  type=\"text\"\r\n                  value={adminPhoneNumber}\r\n                  onChange={(e) => setAdminPhoneNumber(e.target.value)}  \r\n                  placeholder=\"Số điện thoại của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n                <button\r\n                  onClick={handleAddAdmin}\r\n                  disabled={isAddingAdmin}\r\n                  className=\"bg-green-500 text-white w-full py-2 rounded-lg hover:bg-green-600 transition duration-300\"\r\n                >\r\n                  {isAddingAdmin ? 'Đang thêm...' : 'Thêm Admin'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <h3 className=\"text-xl font-semibold mt-8 mb-4\">Danh sách các công ty</h3>\r\n      <div className=\"company-cards grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {isCompaniesLoading ? (\r\n          <p>Đang tải...</p>\r\n        ) : (\r\n          companies.map((company) => (\r\n            <CompanyCard\r\n              key={company._id}\r\n              company={company}\r\n              onClick={() => handleCardClick(company)}\r\n              onToggleStatus={handleToggleStatus}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {companiesError && <p className=\"text-red-500 mt-4\">{companiesError}</p>}\r\n      <SnackbarNotification\r\n        open={snackbarOpen}\r\n        onClose={() => setSnackbarOpen(false)}\r\n        severity={snackbarSeverity}\r\n        message={snackbarMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageCompanies;\r\n","import React, { useEffect } from 'react';\r\nimport { Table, Button, Tag, Space, Spin } from 'antd';\r\nimport { useGetAllUsersByLastLoginQuery } from '../../../Redux/User/apiSlice'; // Chỉnh đường dẫn nếu cần\r\nimport moment from 'moment';\r\n\r\nconst ManageUsers = () => {\r\n  const { data: usersData, isLoading, refetch } = useGetAllUsersByLastLoginQuery();\r\n\r\n  // Định nghĩa các cột cho bảng người dùng\r\n  const columns = [\r\n    {\r\n      title: 'Tên người dùng',\r\n      dataIndex: 'userName',\r\n      key: 'userName',\r\n      render: (text) => <span className=\"font-semibold\">{text}</span>,\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Vai trò',\r\n      dataIndex: 'roleId',\r\n      key: 'roleId',\r\n      render: (roleId) => {\r\n        let color = roleId === 'superadmin' ? 'volcano' : roleId === 'companyadmin' ? 'green' : 'blue';\r\n        return <Tag color={color}>{roleId.toUpperCase()}</Tag>;\r\n      },\r\n    },\r\n    {\r\n      title: 'Ngày đăng nhập cuối',\r\n      dataIndex: 'lastLogin',\r\n      key: 'lastLogin',\r\n      render: (lastLogin) => (lastLogin ? moment(lastLogin).format('DD-MM-YYYY HH:mm') : 'Chưa đăng nhập'),\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'isActive',\r\n      key: 'isActive',\r\n      render: (isActive) => (\r\n        <Tag color={isActive ? 'green' : 'red'}>\r\n          {isActive ? 'Hoạt động' : 'Vô hiệu hóa'}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Hành động',\r\n      key: 'action',\r\n      render: (record) => (\r\n        <Space size=\"middle\">\r\n          <Button type=\"primary\" onClick={() => handleEditUser(record)}>\r\n            Sửa\r\n          </Button>\r\n          <Button danger onClick={() => handleToggleStatus(record)}>\r\n            {record.isActive ? 'Vô hiệu hóa' : 'Kích hoạt'}\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleEditUser = (user) => {\r\n    // Logic mở modal hoặc điều hướng đến trang chỉnh sửa người dùng\r\n    console.log('Chỉnh sửa người dùng:', user);\r\n  };\r\n\r\n  const handleToggleStatus = async (user) => {\r\n    try {\r\n      // Gọi API để cập nhật trạng thái của người dùng\r\n      console.log('Thay đổi trạng thái người dùng:', user);\r\n    } catch (error) {\r\n      console.error('Không thể thay đổi trạng thái:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Hàm refetch để cập nhật lại dữ liệu\r\n    refetch();\r\n  }, [refetch]);\r\n\r\n  return (\r\n    <div className=\"p-6 bg-gradient-to-r from-blue-50 to-blue-100 min-h-screen\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h2 className=\"text-3xl font-bold\">Quản lý người dùng</h2>\r\n        <Button type=\"primary\" onClick={refetch}>\r\n          Cập nhật danh sách\r\n        </Button>\r\n      </div>\r\n      \r\n      {isLoading ? (\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <Spin size=\"large\" />\r\n        </div>\r\n      ) : (\r\n        <Table \r\n          columns={columns} \r\n          dataSource={Array.isArray(usersData?.users) ? usersData.users : []} \r\n          rowKey={(record) => record._id} \r\n          className=\"bg-white shadow-lg rounded-lg overflow-hidden\"\r\n          pagination={{ pageSize: 10 }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageUsers;\r\n","import React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Slide from '@mui/material/Slide';\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Notification = ({ open, onClose, severity, message, autoHideDuration = 3000, TransitionComponent = Slide }) => {\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={autoHideDuration}\r\n      onClose={onClose}\r\n      TransitionComponent={TransitionComponent}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }} \r\n    >\r\n      <Alert onClose={onClose} severity={severity} sx={{ width: '100%' }}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\nexport default Notification;\r\n"],"names":["_ref","setActiveContent","dispatch","useDispatch","collapsed","setCollapsed","useState","handleNavigation","content","_jsxs","className","children","_jsx","onClick","FaChevronRight","FaChevronLeft","Tooltip","title","placement","visible","FaHome","FaClipboardList","FaUser","FaChartBar","FaSearchLocation","FaCogs","handleLogout","logout","window","location","href","FaSignOutAlt","Statistics","data","error","isLoading","useGetRevenueStatisticsQuery","message","totalRevenue","totalBookings","Settings","darkMode","setDarkMode","emailNotifications","setEmailNotifications","type","checked","onChange","SuperAdminDashboard","activeContent","useEffect","notify","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","Sidebar","renderContent","ManageCompanies","ManageAdmins","ManageUsers","Location","ToastContainer","Title","Typography","_locations$data","selectedLocationId","setSelectedLocationId","isModalOpen","setIsModalOpen","isEditing","setIsEditing","newLocation","setNewLocation","name","address","city","coordinates","locations","useGetLocationsQuery","createLocation","useCreateLocationMutation","updateLocation","useUpdateLocationMutation","deleteLocation","useDeleteLocationMutation","locationDetail","useGetLocationByIdQuery","skip","handleOpenModal","arguments","length","handleCloseModal","level","Button","icon","PlusOutlined","Row","gutter","map","Col","xs","sm","md","lg","Card","hoverable","actions","EyeOutlined","_id","EditOutlined","DeleteOutlined","async","id","unwrap","handleDelete","Meta","description","join","Modal","onOk","updatedLocation","onCancel","okText","okButtonProps","Form","layout","Item","label","required","Input","value","e","target","placeholder","Space","parseFloat","companyName","setCompanyName","setAddress","contactInfo","setContactInfo","phoneNumber","setPhoneNumber","email","setEmail","isActive","setIsActive","handleCreateOrUpdateCompany","creating","selectedCompanyId","onSubmit","disabled","open","onClose","severity","Notification","company","onToggleStatus","setSelectedCompanyId","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","modalVisible","setModalVisible","adminUserName","setAdminUserName","adminPassword","setAdminPassword","adminPhoneNumber","setAdminPhoneNumber","adminEmail","setAdminEmail","showAddAdmin","setShowAddAdmin","companiesData","isCompaniesLoading","companiesError","useGetCompaniesQuery","createCompany","isCreating","useCreateCompanyMutation","updateCompany","useUpdateCompanyMutation","toggleCompanyStatus","useToggleCompanyStatusMutation","addCompanyAdmin","isAddingAdmin","useAddCompanyAdminMutation","companies","setCompanies","modalRef","useRef","resetForm","showSnackbar","handleToggleStatus","updatedCompany","companyId","prevCompanies","handleClickOutside","event","current","contains","document","body","style","overflow","addEventListener","removeEventListener","ref","CompanyForm","preventDefault","companyData","updatedData","newCompany","userName","password","_error$data","CompanyCard","handleCardClick","SnackbarNotification","usersData","refetch","useGetAllUsersByLastLoginQuery","columns","dataIndex","key","render","text","roleId","color","Tag","toUpperCase","lastLogin","moment","format","record","size","handleEditUser","danger","user","console","log","Spin","Table","dataSource","Array","isArray","users","rowKey","pagination","pageSize","Alert","React","props","MuiAlert","elevation","variant","autoHideDuration","TransitionComponent","Slide","Snackbar","anchorOrigin","vertical","horizontal","sx","width"],"sourceRoot":""}