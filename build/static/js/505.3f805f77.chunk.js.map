{"version":3,"file":"static/js/505.3f805f77.chunk.js","mappings":"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","sources":["components/home/components/SearchResult/Trip/TripDetails.js","components/home/components/SearchResult/Trip/SeatSelection.js","components/home/components/SearchResult/Trip/TripCard.js","components/home/components/SearchResult/SearchResults.js","utils/formatUtils.js"],"sourcesContent":["import React from 'react';\r\nimport { formatCurrency } from 'utils/formatUtils';\r\n\r\nconst TripDetails = ({ trip, onToggle, isOpen, loading }) => {\r\n  return (\r\n    <div className=\"flex justify-between\">\r\n      <div className=\"flex items-start\">\r\n        <div className=\"relative\">\r\n          <img\r\n            src={trip.busType.image || \"https://static.vexere.com/production/images/1702527338553.jpeg\"}\r\n            alt=\"Bus\"\r\n            className=\"w-28 h-28 object-cover rounded-lg\"\r\n          />\r\n          <div className=\"absolute top-1 left-1 bg-green-500 text-white text-xs px-2 py-1 rounded\">\r\n            Xác nhận ngay\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"ml-4\">\r\n          <h3 className=\"font-semibold text-lg\">{trip.busType.name}</h3>\r\n          <p className=\"text-sm text-gray-600\">{trip.busType.seats} ghế</p>\r\n\r\n          <div className=\"mt-2 text-sm space-y-1\">\r\n            <div>Khởi hành: {new Date(trip.departureTime).toLocaleTimeString()}</div>\r\n            <div>Từ: {trip.departureLocation.name}</div>\r\n            <div>Đến: {trip.arrivalLocation.name}</div>\r\n          </div>\r\n\r\n          <p className=\"mt-2 text-green-600\">{trip.availableSeats} ghế còn trống</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"text-right\">\r\n        <p className=\"text-xl font-bold text-blue-600 mb-2\">\r\n          Từ {formatCurrency(trip.basePrice)} VND\r\n        </p>\r\n        <button\r\n          onClick={onToggle}\r\n          className=\"bg-yellow-500 text-white px-4 py-2 rounded-lg hover:bg-yellow-600 transition duration-300\"\r\n          disabled={loading}\r\n        >\r\n          {isOpen ? 'Ẩn chi tiết' : 'Chọn chuyến'}\r\n        </button>\r\n        <p className=\"text-xs text-gray-500 mt-2\">KHÔNG YÊU CẦU THANH TOÁN TRƯỚC</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TripDetails;\r\n","import React from 'react';\r\nimport { Transition } from '@headlessui/react';\r\nimport { Clock } from 'lucide-react';\r\nimport { formatCurrency } from 'utils/formatUtils';\r\n\r\nconst SeatSelection = ({\r\n  seatsData,\r\n  isLoadingSeats,\r\n  handleSeatSelect,\r\n  selectedSeats,\r\n  lockTimers,\r\n  loading,\r\n  totalPrice,\r\n  handleContinue,\r\n  error,\r\n  userId,\r\n}) => {\r\n  const getSeatStyle = (seat) => {\r\n    if (selectedSeats.includes(seat.seatNumber)) {\r\n      return 'bg-green-500 text-white'; // Ghế đã chọn\r\n    }\r\n    if (seat.lockedBy && seat.lockedBy !== userId) {\r\n      return 'bg-orange-500 text-white'; // Tạm thời giữ bởi người dùng khác\r\n    }\r\n    if (seat.seatNumber === 1) {\r\n      return 'bg-gray-500 text-white cursor-not-allowed'; // Ghế không khả dụng\r\n    }\r\n    if ([2, 3, 4, 5, 6].includes(seat.seatNumber)) {\r\n      return 'bg-yellow-500 text-white'; // Ghế VIP\r\n    }\r\n    if (!seat.isAvailable) {\r\n      return 'bg-red-500 text-white'; // Ghế đã được đặt\r\n    }\r\n    return 'bg-green-100 border-2 border-green-500'; // Ghế có sẵn\r\n  };\r\n\r\n  const renderSeats = (seats, floorLabel) => (\r\n    <div className=\"mb-4\">\r\n      <h4 className=\"font-semibold text-center mb-3 text-gray-700\">{floorLabel}</h4>\r\n      <div className=\"grid grid-cols-5 gap-3\">\r\n        {seats.map((seat) => (\r\n          <button\r\n            key={seat._id}\r\n            onClick={() => handleSeatSelect(seat.seatNumber)}\r\n            disabled={loading}\r\n            className={`w-12 h-12 rounded-lg text-center text-sm font-semibold \r\n              cursor-pointer ${getSeatStyle(seat)}`}\r\n          >\r\n            {seat.seatNumber}\r\n            {lockTimers[seat.seatNumber] && (\r\n              <Clock className=\"absolute -top-1 -right-1 h-4 w-4\" />\r\n            )}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Transition\r\n      show\r\n      enter=\"transition-opacity duration-300\"\r\n      enterFrom=\"opacity-0\"\r\n      enterTo=\"opacity-100\"\r\n      leave=\"transition-opacity duration-300\"\r\n      leaveFrom=\"opacity-100\"\r\n      leaveTo=\"opacity-0\"\r\n    >\r\n      <div className=\"border-t mt-4 pt-4 space-y-6\">\r\n        <div className=\"flex justify-between\">\r\n          {/* Chú thích */}\r\n          <div className=\"w-1/3 space-y-3\">\r\n            <h4 className=\"font-semibold mb-4 text-gray-700\">Chú thích:</h4>\r\n            <div className=\"space-y-2 text-sm\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-4 h-4 bg-gray-500 mr-2 rounded\"></div>\r\n                Ghế không khả dụng\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-4 h-4 bg-yellow-500 mr-2 rounded\"></div>\r\n                Ghế VIP\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-4 h-4 bg-green-500 mr-2 rounded\"></div>\r\n                Đã chọn\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-4 h-4 bg-orange-500 mr-2 rounded\"></div>\r\n                Tạm thời giữ\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-4 h-4 border border-green-500 bg-green-100 mr-2 rounded\"></div>\r\n                Có sẵn\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-4 h-4 bg-red-500 mr-2 rounded\"></div>\r\n                Đã đặt\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Bản đồ ghế cho từng tầng */}\r\n          <div className=\"w-2/3 flex\">\r\n            {/* Tầng Dưới Bên Trái */}\r\n            <div className=\"w-1/2 pr-4\">\r\n              {seatsData.lower && renderSeats(seatsData.lower, \"Tầng Dưới\")}\r\n            </div>\r\n            {/* Tầng Trên Bên Phải */}\r\n            <div className=\"w-1/2 pl-4\">\r\n              {seatsData.upper && renderSeats(seatsData.upper, \"Tầng Trên\")}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tổng giá và nút tiếp tục */}\r\n        <div className=\"mt-6 flex justify-between items-center border-t pt-4\">\r\n          <div className=\"text-sm text-gray-700\">\r\n            Ghế đã chọn: <span className=\"font-medium\">{selectedSeats.join(', ')}</span>\r\n          </div>\r\n          <div className=\"text-lg font-semibold text-gray-900\">\r\n            Tổng: {formatCurrency(totalPrice)} VND\r\n          </div>\r\n          <button \r\n            onClick={handleContinue}\r\n            disabled={selectedSeats.length === 0 || loading}\r\n            className={`px-6 py-2 rounded-lg text-white transition duration-300\r\n              ${selectedSeats.length === 0 || loading\r\n                ? 'bg-gray-400 cursor-not-allowed'\r\n                : 'bg-blue-600 hover:bg-blue-700'\r\n              }`}\r\n          >\r\n            Tiếp tục\r\n          </button>\r\n        </div>\r\n        {error && <p className=\"text-red-500 mt-2\">{error}</p>}\r\n      </div>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default SeatSelection;\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport TripDetails from './TripDetails';\r\nimport SeatSelection from './SeatSelection';\r\nimport { useGetSeatsByTripIdQuery } from '../../../../../Redux/Trip/TripApiSlice';\r\n\r\nconst TripCard = ({ trip, isOpen, onToggle }) => {\r\n  const navigate = useNavigate();\r\n  const socketRef = useRef(null);\r\n  const userInfo = useSelector((state) => state.user.userInfo);\r\n  const userId = userInfo?.id;\r\n\r\n  const [selectedSeats, setSelectedSeats] = useState([]);\r\n  const [seatsData, setSeatsData] = useState({ lower: [], upper: [] }); \r\n  const [lockTimers, setLockTimers] = useState({});\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { data: initialSeatsData, isLoading: isLoadingSeats } = useGetSeatsByTripIdQuery(trip._id, {\r\n    skip: !isOpen,\r\n  });\r\n\r\n  const setupSocket = useCallback(() => {\r\n    try {\r\n      socketRef.current = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\r\n        reconnection: true,\r\n        reconnectionAttempts: 5,\r\n        reconnectionDelay: 1000,\r\n      });\r\n\r\n      socketRef.current.on('connect', () => {\r\n        console.log('Connected to socket server');\r\n        if (isOpen && trip._id) {\r\n          socketRef.current.emit('joinTrip', trip._id);\r\n          console.log(`Joining trip room: ${trip._id}`);\r\n        }\r\n      });\r\n\r\n      socketRef.current.on('connect_error', (error) => {\r\n        console.error('Socket connection error:', error);\r\n        setError('Unable to connect to booking service. Please try again later.');\r\n      });\r\n\r\n      return () => {\r\n        if (socketRef.current) {\r\n          socketRef.current.disconnect();\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Socket setup error:', error);\r\n      setError('Unable to initialize booking service. Please try again later.');\r\n    }\r\n  }, [trip._id, isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (initialSeatsData) {\r\n      setSeatsData(initialSeatsData.data);\r\n      setError(null);\r\n    }\r\n  }, [initialSeatsData]);\r\n\r\n  useEffect(() => {\r\n    if (!socketRef.current) {\r\n      setupSocket();\r\n    }\r\n\r\n    const socket = socketRef.current;\r\n\r\n    const handleSeatLocked = ({ seatNumber, lockedBy, lockExpiration }) => {\r\n      setSeatsData((prevSeats) => ({\r\n        lower: prevSeats.lower.map((seat) =>\r\n          seat.seatNumber === seatNumber\r\n            ? { ...seat, isAvailable: false, lockedBy, lockExpiration }\r\n            : seat\r\n        ),\r\n        upper: prevSeats.upper.map((seat) =>\r\n          seat.seatNumber === seatNumber\r\n            ? { ...seat, isAvailable: false, lockedBy, lockExpiration }\r\n            : seat\r\n        ),\r\n      }));\r\n    };\r\n\r\n    const handleSeatReleased = ({ seatNumber }) => {\r\n      setSeatsData((prevSeats) => ({\r\n        lower: prevSeats.lower.map((seat) =>\r\n          seat.seatNumber === seatNumber\r\n            ? { ...seat, isAvailable: true, lockedBy: null }\r\n            : seat\r\n        ),\r\n        upper: prevSeats.upper.map((seat) =>\r\n          seat.seatNumber === seatNumber\r\n            ? { ...seat, isAvailable: true, lockedBy: null }\r\n            : seat\r\n        ),\r\n      }));\r\n    \r\n      if (lockTimers[seatNumber]) {\r\n        clearTimeout(lockTimers[seatNumber]);\r\n        setLockTimers((prev) => {\r\n          const newTimers = { ...prev };\r\n          delete newTimers[seatNumber];\r\n          return newTimers;\r\n        });\r\n      }\r\n    };\r\n\r\n    const handleError = ({ type, message }) => {\r\n      setError(message);\r\n      setLoading(false);\r\n\r\n      if (type === 'RESERVE_ERROR') {\r\n        setSelectedSeats((prev) => prev.filter((seat) => !seat.includes(message.seatNumber)));\r\n      }\r\n    };\r\n\r\n    socket.on('seatLocked', handleSeatLocked);\r\n    socket.on('seatReleased', handleSeatReleased);\r\n    socket.on('error', handleError);\r\n    socket.on('seatUnavailable', ({ seatNumber }) => {\r\n      setError(`Ghế số ${seatNumber} không khả dụng`);\r\n      setSelectedSeats((prev) => prev.filter((s) => s !== seatNumber));\r\n    });\r\n\r\n    return () => {\r\n      socket.off('seatLocked', handleSeatLocked);\r\n      socket.off('seatReleased', handleSeatReleased);\r\n      socket.off('error', handleError);\r\n      socket.off('seatUnavailable');\r\n      Object.values(lockTimers).forEach(clearTimeout);\r\n    };\r\n  }, [userId, trip._id, setupSocket, lockTimers]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      if (trip._id) {\r\n        socketRef.current.emit('joinTrip', trip._id);\r\n      }\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleSeatSelect = useCallback(\r\n    async (seatNumber) => {\r\n        if (!userId) {\r\n            setError('Please log in to select seats');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            console.log(\"Selected seat number:\", seatNumber);\r\n            \r\n            // Nếu ghế đã được chọn, người dùng muốn bỏ chọn\r\n            if (selectedSeats.includes(seatNumber)) {\r\n                const seat = [...seatsData.lower, ...seatsData.upper].find((seat) => seat.seatNumber === seatNumber);\r\n                if (!seat.isAvailable && seat.lockedBy && seat.lockedBy !== userId) {\r\n                    setError(`Seat ${seatNumber} is temporarily reserved by another user`);\r\n                    return;\r\n                }\r\n                console.log(\"Releasing seat:\", seatNumber);\r\n                socketRef.current.emit('releaseSeat', { tripId: trip._id, seatNumber, userId });\r\n                setSelectedSeats((prev) => prev.filter((s) => s !== seatNumber));\r\n            } else {\r\n                // Chọn ghế nếu chưa chọn\r\n                console.log(\"Reserving seat:\", seatNumber);\r\n                socketRef.current.emit('reserveSeat', { tripId: trip._id, seatNumber, userId });\r\n                setSelectedSeats((prev) => [...prev, seatNumber]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error in seat selection:\", error);\r\n            setError('Failed to process seat selection. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    },\r\n    [trip._id, userId, seatsData, selectedSeats]\r\n);\r\n\r\n\r\n  const handleContinue = useCallback(() => {\r\n    if (selectedSeats.length === 0) {\r\n      setError('Please select at least one seat to continue');\r\n      return;\r\n    }\r\n\r\n    navigate('/bookingconfirmation', {\r\n      state: {\r\n        selectedSeats,\r\n        totalPrice: selectedSeats.length * trip.basePrice,\r\n        trip,\r\n      },\r\n    });\r\n  }, [navigate, selectedSeats, trip]);\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-lg mb-6 p-4 hover:shadow-xl transition-shadow duration-300\">\r\n      <TripDetails trip={trip} onToggle={onToggle} isOpen={isOpen} loading={loading} />\r\n      {isOpen && (\r\n        <SeatSelection\r\n          seatsData={seatsData}\r\n          isLoadingSeats={isLoadingSeats}\r\n          handleSeatSelect={handleSeatSelect}\r\n          selectedSeats={selectedSeats}\r\n          lockTimers={lockTimers}\r\n          loading={loading}\r\n          totalPrice={selectedSeats.length * trip.basePrice}\r\n          handleContinue={handleContinue}\r\n          error={error}\r\n          userId={userId}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TripCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useSearchTripQuery } from '../../../../Redux/Trip/TripApiSlice';\r\nimport TripCard from '../SearchResult/Trip/TripCard';\r\nimport SkeletonLoader from '../../../shared/Loader/Loader';\r\n\r\nconst SearchResults = ({ filters = {} }) => {\r\n  const location = useLocation();\r\n\r\n  // Lấy các giá trị params từ URL thay vì sử dụng state\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const departureLocation = searchParams.get('departureLocation');\r\n  const arrivalLocation = searchParams.get('arrivalLocation');\r\n  const departureDate = searchParams.get('departureDate');\r\n  const returnDate = searchParams.get('returnDate');\r\n  const ticketCount = searchParams.get('ticketCount');\r\n\r\n  const [filteredTrips, setFilteredTrips] = useState([]);\r\n  const [allTrips, setAllTrips] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedSeats, setSelectedSeats] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [tripDetails, setTripDetails] = useState(null);\r\n\r\n  // Gọi API để tìm kiếm chuyến xe, mặc định gọi API không điều kiện\r\n  const { data: trips, error, isLoading } = useSearchTripQuery({\r\n    departureLocation,\r\n    arrivalLocation,\r\n    departureDate,\r\n    returnDate,\r\n    ticketCount,\r\n  });\r\n\r\n  // Cập nhật dữ liệu khi nhận được từ API\r\n  useEffect(() => {\r\n    if (trips?.data?.departureTrips) {\r\n      setAllTrips(trips.data.departureTrips);\r\n      setFilteredTrips(trips.data.departureTrips);\r\n    }\r\n  }, [trips]);\r\n\r\n  // Áp dụng bộ lọc và cập nhật danh sách chuyến xe\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    const delayDebounceFn = setTimeout(() => {\r\n      const applyFilters = () => {\r\n        let filtered = [...allTrips];\r\n\r\n        if (filters.priceRange === 'low') {\r\n          filtered = filtered.filter(trip => trip.basePrice < 200000);\r\n        } else if (filters.priceRange === 'medium') {\r\n          filtered = filtered.filter(trip => trip.basePrice >= 200000 && trip.basePrice <= 500000);\r\n        } else if (filters.priceRange === 'high') {\r\n          filtered = filtered.filter(trip => trip.basePrice > 500000);\r\n        }\r\n\r\n        if (filters.busOperator) {\r\n          filtered = filtered.filter(trip => trip.busType?.name === filters.busOperator);\r\n        }\r\n\r\n        if (filters.departureTimeRange === 'morning') {\r\n          filtered = filtered.filter(trip => {\r\n            const hour = new Date(trip.departureTime).getHours();\r\n            return hour >= 6 && hour < 12;\r\n          });\r\n        } else if (filters.departureTimeRange === 'afternoon') {\r\n          filtered = filtered.filter(trip => {\r\n            const hour = new Date(trip.departureTime).getHours();\r\n            return hour >= 12 && hour < 18;\r\n          });\r\n        }\r\n\r\n        // Sort trips\r\n        if (filters.sort === 'priceAsc') {\r\n          filtered.sort((a, b) => a.basePrice - b.basePrice);\r\n        } else if (filters.sort === 'priceDesc') {\r\n          filtered.sort((a, b) => b.basePrice - a.basePrice);\r\n        } else if (filters.sort === 'earliest') {\r\n          filtered.sort((a, b) => new Date(a.departureTime) - new Date(b.departureTime));\r\n        } else if (filters.sort === 'latest') {\r\n          filtered.sort((a, b) => new Date(b.departureTime) - new Date(a.departureTime));\r\n        }\r\n\r\n        setFilteredTrips(filtered);\r\n        setLoading(false);\r\n      };\r\n\r\n      applyFilters();\r\n    }, 500);\r\n\r\n    return () => clearTimeout(delayDebounceFn);\r\n  }, [filters, allTrips]);\r\n\r\n  // Đặt tất cả hooks trước khi kiểm tra điều kiện\r\n\r\n  // Nếu thiếu params, hiển thị thông báo sau khi hooks đã được gọi\r\n  if (!departureLocation || !arrivalLocation || !departureDate) {\r\n    return <div>Thiếu thông tin tìm kiếm. Vui lòng thử lại.</div>;\r\n  }\r\n\r\n  // Hiển thị loader nếu đang tải dữ liệu\r\n  if (loading || isLoading) {\r\n    return (\r\n      <div className=\"container mx-auto py-8\">\r\n        <SkeletonLoader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Xử lý lỗi từ API\r\n  if (error) {\r\n    return <div>Không tìm thấy chuyến xe. Lỗi: {error.message}</div>;\r\n  }\r\n\r\n  // Xử lý trường hợp không có kết quả phù hợp với bộ lọc\r\n  if (filteredTrips.length === 0) {\r\n    return <div>Không tìm thấy chuyến xe nào phù hợp với yêu cầu tìm kiếm của bạn.</div>;\r\n  }\r\n\r\n  // Hàm để xử lý khi người dùng chọn ghế và tiếp tục\r\n  const handleContinue = (seats, price, trip) => {\r\n    setSelectedSeats(seats);\r\n    setTotalPrice(price);\r\n    setTripDetails(trip);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-8\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Kết quả tìm kiếm chuyến xe</h2>\r\n      <div className=\"space-y-4\">\r\n        {filteredTrips.map((trip) => (\r\n          <TripCard \r\n            key={trip._id} \r\n            trip={trip} \r\n            isOpen={trip._id === tripDetails?._id} \r\n            onToggle={() => {\r\n              setTripDetails(tripDetails?._id === trip._id ? null : trip); \r\n            }} \r\n            onContinue={handleContinue}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import moment from 'moment-timezone';\r\n\r\nconst VN_TIMEZONE = 'Asia/Ho_Chi_Minh';\r\n\r\nexport const timeUtils = {\r\n  parseUTCTimeForForm: (utcTimeString) => {\r\n    if (!utcTimeString) return new Date();\r\n    return new Date(utcTimeString);\r\n  },\r\n\r\n  formatTimeForServer: (localDate) => {\r\n    if (!localDate) return null;\r\n    return moment(localDate).utc().format();\r\n  },\r\n\r\n  formatDisplayTime: (utcTimeString) => {\r\n    if (!utcTimeString) return '';\r\n    return moment(utcTimeString).tz(VN_TIMEZONE).format('DD/MM/YYYY HH:mm');\r\n  }\r\n};\r\nexport const formatCurrency = (value) => {\r\n  if (!value) return '0 VND';\r\n  return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(value);\r\n};\r\n"],"names":["_ref","trip","onToggle","isOpen","loading","_jsxs","className","children","_jsx","src","busType","image","alt","name","seats","Date","departureTime","toLocaleTimeString","departureLocation","arrivalLocation","availableSeats","formatCurrency","basePrice","onClick","disabled","seatsData","isLoadingSeats","handleSeatSelect","selectedSeats","lockTimers","totalPrice","handleContinue","error","userId","getSeatStyle","seat","includes","seatNumber","lockedBy","isAvailable","renderSeats","floorLabel","map","Clock","_id","Transition","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","lower","upper","join","length","navigate","useNavigate","socketRef","useRef","userInfo","useSelector","state","user","id","setSelectedSeats","useState","setSeatsData","setLockTimers","setError","setLoading","data","initialSeatsData","isLoading","useGetSeatsByTripIdQuery","skip","setupSocket","useCallback","current","io","process","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","emit","disconnect","useEffect","socket","handleSeatLocked","_ref2","lockExpiration","prevSeats","handleSeatReleased","_ref3","clearTimeout","prev","newTimers","handleError","_ref4","type","message","filter","_ref5","s","off","Object","values","forEach","async","find","tripId","TripDetails","SeatSelection","filters","location","useLocation","searchParams","URLSearchParams","search","get","departureDate","returnDate","ticketCount","filteredTrips","setFilteredTrips","allTrips","setAllTrips","setTotalPrice","tripDetails","setTripDetails","trips","useSearchTripQuery","_trips$data","departureTrips","delayDebounceFn","setTimeout","applyFilters","filtered","priceRange","busOperator","_trip$busType","departureTimeRange","hour","getHours","sort","a","b","SkeletonLoader","price","TripCard","onContinue","timeUtils","parseUTCTimeForForm","utcTimeString","formatTimeForServer","localDate","moment","utc","format","formatDisplayTime","tz","value","Intl","NumberFormat","style","currency"],"sourceRoot":""}