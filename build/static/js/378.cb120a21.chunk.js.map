{"version":3,"file":"static/js/378.cb120a21.chunk.js","mappings":"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","sources":["components/UI/CustomStyledDatePicker.js","components/home/MainSection/LocationInput.js","components/home/MainSection/MainSection.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { ChevronRightIcon } from 'lucide-react';\r\nimport moment from 'moment-timezone';\r\n\r\nconst CustomDatePicker = ({ label, selectedDate, onDateChange }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  \r\n  const [currentDate, setCurrentDate] = useState(selectedDate || today);\r\n  const currentMonth = currentDate.getMonth();\r\n  const currentYear = currentDate.getFullYear();\r\n  \r\n  const days = ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'];\r\n\r\n  const getDaysInMonth = (year, month) => new Date(year, month + 1, 0).getDate();\r\n\r\n  const isPastDate = (date) => date < today;\r\n\r\n  const isCurrentMonth = (year, month) => year === today.getFullYear() && month === today.getMonth();\r\n\r\n  const getCurrentMonthDays = () => {\r\n    const daysInMonth = getDaysInMonth(currentYear, currentMonth);\r\n    const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay();\r\n\r\n    const dayArray = Array.from({ length: daysInMonth }, (_, i) => ({\r\n      day: i + 1,\r\n      date: new Date(currentYear, currentMonth, i + 1),\r\n    }));\r\n\r\n    const emptyDays = Array(firstDayOfMonth === 0 ? 0 : firstDayOfMonth).fill(null);\r\n    return [...emptyDays, ...dayArray];\r\n  };\r\n\r\n  const isSelectedDate = (date) => {\r\n    return selectedDate &&\r\n      date.getDate() === selectedDate.getDate() &&\r\n      date.getMonth() === selectedDate.getMonth() &&\r\n      date.getFullYear() === selectedDate.getFullYear();\r\n  };\r\n\r\n  const isToday = (date) => {\r\n    return date.getDate() === today.getDate() &&\r\n      date.getMonth() === today.getMonth() &&\r\n      date.getFullYear() === today.getFullYear();\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative w-full md:flex-1\">\r\n      <div className=\"mb-1\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\r\n      </div>\r\n      <div\r\n        className=\"border border-blue-300 rounded-lg p-2 cursor-pointer h-[42px] hover:border-blue-500 transition duration-200 ease-in-out\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className=\"outline-none w-full text-gray-700\"\r\n          value={selectedDate ? moment(selectedDate).format('DD/MM/YYYY') : ''}\r\n          readOnly\r\n          placeholder=\"Chọn ngày\"\r\n        />\r\n      </div>\r\n\r\n      {isOpen && (\r\n        <div className=\"absolute left-0 z-50 mt-1 bg-white border border-gray-200 rounded-lg shadow-xl p-4\" style={{ minWidth: '320px' }}>\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <button\r\n              className={`text-gray-600 p-1 rounded-full hover:bg-gray-200 transition duration-200 ease-in-out ${isCurrentMonth(currentYear, currentMonth) ? 'invisible' : ''}`}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                if (!isCurrentMonth(currentYear, currentMonth)) {\r\n                  setCurrentDate(new Date(currentYear, currentMonth - 1));\r\n                }\r\n              }}\r\n            >\r\n              &lt;\r\n            </button>\r\n            <div className=\"font-medium text-gray-700\">THÁNG {currentMonth + 1}/{currentYear}</div>\r\n            <button\r\n              className=\"text-gray-600 p-1 rounded-full hover:bg-gray-200 transition duration-200 ease-in-out\"\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setCurrentDate(new Date(currentYear, currentMonth + 1));\r\n              }}\r\n            >\r\n              <ChevronRightIcon size={20} />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-7 mb-2\">\r\n            {days.map(day => (\r\n              <div key={day} className=\"text-center text-sm text-gray-500 h-10 flex items-center justify-center\">\r\n                {day}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-7 gap-[1px] bg-gray-100\">\r\n            {getCurrentMonthDays().map((dayObj, index) => {\r\n              const isPast = dayObj === null || isPastDate(dayObj.date);\r\n              const todayClass = dayObj && isToday(dayObj.date) ? 'bg-yellow-100 border border-yellow-500' : '';\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={`h-10 w-10 flex items-center justify-center rounded-sm \r\n                    ${dayObj ? (isSelectedDate(dayObj.date) ? 'bg-blue-100 border border-blue-500' : 'bg-white') : ''}\r\n                    ${isPast ? 'text-gray-300 cursor-not-allowed' : `hover:bg-blue-50 cursor-pointer transition duration-150 ease-in-out ${todayClass}`}\r\n                  `}\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    if (!isPast && dayObj) {\r\n                      onDateChange(dayObj.date);\r\n                      setIsOpen(false);\r\n                    }\r\n                  }}\r\n                >\r\n                  {dayObj ? dayObj.day : ''}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomDatePicker;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst LocationInput = ({ label, value, onChange, options, placeholder, icon, isOpen, onToggle, iconColor }) => {\r\n  const [recentLocations, setRecentLocations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const storedLocations = JSON.parse(localStorage.getItem('recentLocations')) || [];\r\n    setRecentLocations(storedLocations.slice(0, 2));\r\n  }, []);\r\n\r\n  const handleSelect = (locationName) => {\r\n    onChange({ target: { value: locationName } });\r\n    onToggle();\r\n\r\n    const updatedRecentLocations = [locationName, ...recentLocations.filter(name => name !== locationName)].slice(0, 2);\r\n    setRecentLocations(updatedRecentLocations);\r\n    localStorage.setItem('recentLocations', JSON.stringify(updatedRecentLocations));\r\n  };\r\n\r\n  const removeRecentLocation = (locationName) => {\r\n    const updatedRecentLocations = recentLocations.filter(name => name !== locationName);\r\n    setRecentLocations(updatedRecentLocations);\r\n    localStorage.setItem('recentLocations', JSON.stringify(updatedRecentLocations));\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative w-full md:flex-1\">\r\n      <label className=\"block text-sm font-medium text-gray-700 mb-1\">{label}</label>\r\n      <div className=\"relative flex items-center border-2 rounded-lg shadow-md py-2 px-2 bg-white\" onClick={onToggle}>\r\n        {/* Áp dụng màu sắc từ iconColor */}\r\n        <FontAwesomeIcon icon={icon} className={`mr-2 ${iconColor}`} />\r\n        <button className=\"flex-grow text-left bg-transparent focus:outline-none\">\r\n          {value || placeholder}\r\n        </button>\r\n        <span className=\"ml-2 fas fa-chevron-down text-gray-500\"></span>\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"absolute mt-1 w-full bg-white border rounded-lg shadow-lg z-50 p-2\">\r\n          <div className=\"p-2 font-semibold text-gray-700\">TỈNH/THÀNH PHỐ</div>\r\n          <div className=\"max-h-48 overflow-y-auto\">\r\n            {options?.map((location) => (\r\n              <div\r\n                key={location._id}\r\n                onClick={() => handleSelect(location.name)}\r\n                className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer border-b last:border-none\"\r\n              >\r\n                {location.name}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {recentLocations.length > 0 && (\r\n            <>\r\n              <hr className=\"my-2\" />\r\n              <div className=\"p-2 font-semibold text-gray-700\">TÌM KIẾM GẦN ĐÂY</div>\r\n              <div className=\"flex flex-wrap gap-2 px-4 py-2\">\r\n                {recentLocations.map((location, index) => (\r\n                  <div key={index} className=\"flex items-center bg-gray-200 px-3 py-1 rounded-full text-sm hover:bg-gray-300 transition\">\r\n                    <span onClick={() => handleSelect(location)} className=\"cursor-pointer\">{location}</span>\r\n                    <button\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        removeRecentLocation(location);\r\n                      }}\r\n                      className=\"ml-2 text-red-500 hover:text-red-700 focus:outline-none\"\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationInput;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ArrowPathIcon } from '@heroicons/react/24/solid';\r\nimport { useNavigate, useLocation } from 'react-router-dom'; \r\nimport CustomDatePicker from '../../UI/CustomStyledDatePicker';\r\nimport { useGetLocationsQuery } from '../../../Redux/Location/locationApiSlice';\r\nimport moment from 'moment-timezone';\r\nimport Loader from '../../shared/Loader/Loader'; \r\nimport LocationInput from './LocationInput';\r\n\r\nimport { faBus, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\r\nconst MainSection = ({ onSearch }) => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [openInput, setOpenInput] = useState(null); // State to control which input is open\r\n\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  const [fromLocation, setFromLocation] = useState(() => queryParams.get('departureLocation') || localStorage.getItem('fromLocation') || '');\r\n  const [toLocation, setToLocation] = useState(() => queryParams.get('arrivalLocation') || localStorage.getItem('toLocation') || '');\r\n  const [ticketType, setTicketType] = useState(() => localStorage.getItem('ticketType') || 'oneWay');\r\n  const [ticketQuantity, setTicketQuantity] = useState(() => parseInt(queryParams.get('ticketCount')) || parseInt(localStorage.getItem('ticketQuantity')) || 1);\r\n  const [departureDate, setDepartureDate] = useState(() => {\r\n    const storedDate = queryParams.get('departureDate') || localStorage.getItem('departureDate');\r\n    return storedDate ? new Date(storedDate) : null;\r\n  });\r\n  const [returnDate, setReturnDate] = useState(() => {\r\n    const storedDate = localStorage.getItem('returnDate');\r\n    return storedDate ? new Date(storedDate) : null;\r\n  }); \r\n\r\n  const { data: locations, isLoading: isLocationsLoading, error } = useGetLocationsQuery();\r\n\r\n  const handleSwapLocations = () => {\r\n    const temp = fromLocation;\r\n    setFromLocation(toLocation);\r\n    setToLocation(temp);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (!fromLocation || !toLocation || !departureDate) {\r\n      alert('Vui lòng chọn đầy đủ thông tin trước khi tìm kiếm!');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const formattedDepartureDate = moment(departureDate).format('YYYY-MM-DD');\r\n    const searchParams = {\r\n      departureLocation: fromLocation,\r\n      arrivalLocation: toLocation,\r\n      departureDate: formattedDepartureDate,\r\n      ticketCount: ticketQuantity,\r\n    };\r\n\r\n    localStorage.setItem('searchParams', JSON.stringify(searchParams));\r\n\r\n    if (onSearch) {\r\n      onSearch(); \r\n    }\r\n    navigate(`/search-page?departureLocation=${encodeURIComponent(fromLocation)}&arrivalLocation=${encodeURIComponent(toLocation)}&departureDate=${formattedDepartureDate}&ticketCount=${ticketQuantity}`);\r\n\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  if (isLoading || isLocationsLoading) return <Loader />;\r\n\r\n  if (error) return <div>Lỗi khi tải địa điểm</div>;\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"bg-white shadow-lg rounded-lg p-4 sm:p-6 space-y-4\">\r\n        <div className=\"flex justify-between items-center flex-wrap\">\r\n          <div className=\"flex space-x-4 mb-2\">\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"ticketType\"\r\n                value=\"oneWay\"\r\n                checked={ticketType === 'oneWay'}\r\n                onChange={(e) => setTicketType(e.target.value)}\r\n                className=\"form-radio text-blue-600\"\r\n              />\r\n              <span className=\"ml-2\">Một chiều</span>\r\n            </label>\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"ticketType\"\r\n                value=\"roundTrip\"\r\n                checked={ticketType === 'roundTrip'}\r\n                onChange={(e) => setTicketType(e.target.value)}\r\n                className=\"form-radio text-blue-600\"\r\n              />\r\n              <span className=\"ml-2\">Khứ hồi</span>\r\n            </label>\r\n          </div>\r\n          <a href=\"#\" className=\"text-orange-500 text-sm hover:underline\">\r\n            Hướng dẫn mua vé\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col sm:flex-row flex-wrap gap-2\">\r\n          <LocationInput\r\n            label=\"Nơi xuất phát\"\r\n            value={fromLocation}\r\n            onChange={(e) => setFromLocation(e.target.value)}\r\n            placeholder=\"Chọn nơi xuất phát\"\r\n            icon={faBus}\r\n            iconColor=\"text-blue-500\"\r\n            options={locations?.data}\r\n            isOpen={openInput === 'fromLocation'}\r\n            onToggle={() => setOpenInput(openInput === 'fromLocation' ? null : 'fromLocation')}\r\n          />\r\n\r\n          <div className=\"flex justify-center items-center\">\r\n            <button\r\n              className=\"bg-gray-100 text-gray-600 p-3 rounded-full hover:bg-gray-300 focus:outline-none shadow-md transition duration-300 ease-in-out\"\r\n              onClick={handleSwapLocations}\r\n              aria-label=\"Hoán đổi vị trí\"\r\n            >\r\n              <ArrowPathIcon className=\"h-6 w-6\" />\r\n            </button>\r\n          </div>\r\n\r\n          <LocationInput\r\n            label=\"Nơi đến\"\r\n            value={toLocation}\r\n            onChange={(e) => setToLocation(e.target.value)}\r\n            placeholder=\"Chọn nơi đến\"\r\n            icon={faMapMarkerAlt}\r\n            iconColor=\"text-red-500\"\r\n            options={locations?.data}\r\n            isOpen={openInput === 'toLocation'}\r\n            onToggle={() => setOpenInput(openInput === 'toLocation' ? null : 'toLocation')}\r\n          />\r\n\r\n          <CustomDatePicker\r\n            label=\"Ngày đi\"\r\n            selectedDate={departureDate}\r\n            onDateChange={(date) => setDepartureDate(date)}\r\n          />\r\n\r\n          {ticketType === 'roundTrip' && (\r\n            <CustomDatePicker\r\n              label=\"Ngày về\"\r\n              selectedDate={returnDate}\r\n              onDateChange={(date) => setReturnDate(date)}\r\n            />\r\n          )}\r\n\r\n          <div className=\"relative w-full md:flex-1\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Số lượng vé</label>\r\n            <div className=\"border rounded-lg py-2 px-4\">\r\n              <select\r\n                value={ticketQuantity}\r\n                onChange={(e) => setTicketQuantity(parseInt(e.target.value))}\r\n                className=\"w-full focus:outline-none\"\r\n                aria-label=\"Số vé\"\r\n              >\r\n                <option value={1}>1 vé</option>\r\n                <option value={2}>2 vé</option>\r\n                <option value={3}>3 vé</option>\r\n                <option value={4}>4 vé</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-center mt-4\">\r\n          <button\r\n            className=\"bg-orange-500 text-white py-3 px-8 rounded-full hover:bg-orange-600 transition duration-300 ease-in-out w-full sm:w-auto\"\r\n            onClick={handleSearch}\r\n          >\r\n            Tìm chuyến xe\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default React.memo(MainSection);\r\n"],"names":["_ref","label","selectedDate","onDateChange","isOpen","setIsOpen","useState","today","Date","setHours","currentDate","setCurrentDate","currentMonth","getMonth","currentYear","getFullYear","isCurrentMonth","year","month","isSelectedDate","date","getDate","_jsxs","className","children","_jsx","onClick","type","value","moment","format","readOnly","placeholder","style","minWidth","e","stopPropagation","ChevronRightIcon","size","map","day","getCurrentMonthDays","daysInMonth","firstDayOfMonth","getDay","dayArray","Array","from","length","_","i","fill","dayObj","index","isPast","todayClass","isToday","onChange","options","icon","onToggle","iconColor","recentLocations","setRecentLocations","useEffect","storedLocations","JSON","parse","localStorage","getItem","slice","handleSelect","locationName","target","updatedRecentLocations","filter","name","setItem","stringify","FontAwesomeIcon","location","_id","_Fragment","removeRecentLocation","MainSection","onSearch","navigate","useNavigate","useLocation","isLoading","setIsLoading","openInput","setOpenInput","queryParams","URLSearchParams","search","fromLocation","setFromLocation","get","toLocation","setToLocation","ticketType","setTicketType","ticketQuantity","setTicketQuantity","parseInt","departureDate","setDepartureDate","storedDate","returnDate","setReturnDate","data","locations","isLocationsLoading","error","useGetLocationsQuery","Loader","checked","href","LocationInput","faBus","handleSwapLocations","temp","ArrowPathIcon","faMapMarkerAlt","CustomDatePicker","handleSearch","alert","formattedDepartureDate","searchParams","departureLocation","arrivalLocation","ticketCount","encodeURIComponent","setTimeout","React"],"sourceRoot":""}