{"version":3,"file":"static/js/345.dd3cccae.chunk.js","mappings":"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","sources":["components/CompanyAdmin/components/ManageBus/BusTypeForm.js","components/CompanyAdmin/components/ManageBus/BusTypeList.js","components/CompanyAdmin/pages/ManageBuses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useCreateBusTypeMutation, useUpdateBusTypeMutation } from '../../../../Redux/Bustype/BusTypeApiSlice';\r\n\r\nconst BusTypeForm = ({ busType, closeDrawer }) => {\r\n  const [createBusType] = useCreateBusTypeMutation();\r\n  const [updateBusType] = useUpdateBusTypeMutation();\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    seats: 40,\r\n    floorCount: 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (busType) {\r\n      setFormData({\r\n        name: busType.name,\r\n        description: busType.description || '',\r\n        seats: busType.seats,\r\n        floorCount: busType.floorCount || 1,\r\n      });\r\n    }\r\n  }, [busType]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (busType) {\r\n        await updateBusType({ id: busType._id, updatedBusType: formData }).unwrap();\r\n        closeDrawer(`Cập nhật loại xe \"${formData.name}\" thành công!`);\r\n      } else {\r\n        await createBusType(formData).unwrap();\r\n        closeDrawer(`Thêm loại xe \"${formData.name}\" thành công!`);\r\n      }\r\n    } catch (err) {\r\n      closeDrawer(`Lỗi khi lưu loại xe: ${err.message}`, 'error');\r\n      console.error('Lỗi khi lưu loại xe:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Tên Loại Xe:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          className=\"mt-2 p-2 border rounded w-full\"\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Mô Tả:</label>\r\n        <textarea\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleChange}\r\n          className=\"mt-2 p-2 border rounded w-full\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Số Ghế:</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"seats\"\r\n          value={formData.seats}\r\n          onChange={handleChange}\r\n          className=\"mt-2 p-2 border rounded w-full\"\r\n          min=\"1\"\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Số Tầng:</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"floorCount\"\r\n          value={formData.floorCount}\r\n          onChange={handleChange}\r\n          className=\"mt-2 p-2 border rounded w-full\"\r\n          min=\"1\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2 rounded w-full\">\r\n        {busType ? 'Cập Nhật Loại Xe' : 'Thêm Loại Xe'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BusTypeForm;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetBusTypesQuery, useDeleteBusTypeMutation } from '../../../../Redux/Bustype/BusTypeApiSlice';\r\nimport { Drawer, Button, Table, Popconfirm, Spin, Typography, Empty } from 'antd';\r\nimport BusTypeForm from './BusTypeForm';\r\nimport Notification from '../../../../components/shared/Notification/Notification';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst BusTypeList = () => {\r\n  const companyId = useSelector((state) => state.user?.userInfo?.companyId);\r\n  const { data: response, isLoading, error, refetch } = useGetBusTypesQuery({ companyId });\r\n\r\n  const busTypes = response?.data || [];\r\n  const [deleteBusType] = useDeleteBusTypeMutation();\r\n  const [drawerVisible, setDrawerVisible] = useState(false);\r\n  const [selectedBusType, setSelectedBusType] = useState(null);\r\n  const [notification, setNotification] = useState({ open: false, severity: 'info', message: '' });\r\n\r\n  // Mở drawer với trạng thái thêm mới\r\n  const showDrawer = () => {\r\n    setSelectedBusType(null);\r\n    setDrawerVisible(true);\r\n  };\r\n\r\n  // Đóng drawer và hiện thông báo\r\n  const closeDrawer = (successMessage) => {\r\n    setDrawerVisible(false);\r\n    if (successMessage) {\r\n      setNotification({ open: true, severity: 'success', message: successMessage });\r\n      refetch(); // Cập nhật lại danh sách nếu có thay đổi\r\n    }\r\n  };\r\n\r\n  // Chỉnh sửa loại xe\r\n  const handleEdit = (busType) => {\r\n    setSelectedBusType(busType);\r\n    setDrawerVisible(true);\r\n  };\r\n\r\n  // Xóa loại xe\r\n  const handleDelete = async (busTypeId) => {\r\n    try {\r\n      await deleteBusType(busTypeId).unwrap();\r\n      setNotification({ open: true, severity: 'success', message: 'Xóa loại xe thành công!' });\r\n      refetch(); // Lấy lại danh sách sau khi xóa\r\n    } catch (error) {\r\n      setNotification({ open: true, severity: 'error', message: `Lỗi khi xóa loại xe: ${error.message}` });\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Tên Loại Xe',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Mô Tả',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n    },\r\n    {\r\n      title: 'Số Ghế',\r\n      dataIndex: 'seats',\r\n      key: 'seats',\r\n    },\r\n    {\r\n      title: 'Số Tầng',\r\n      dataIndex: 'floorCount',\r\n      key: 'floorCount',\r\n    },\r\n    {\r\n      title: 'Thao Tác',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <span>\r\n          <Button type=\"link\" onClick={() => handleEdit(record)}>\r\n            Sửa\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"Bạn có chắc chắn muốn xóa loại xe này không?\"\r\n            onConfirm={() => handleDelete(record._id)}\r\n            okText=\"Có\"\r\n            cancelText=\"Không\"\r\n          >\r\n            <Button type=\"link\" danger>\r\n              Xóa\r\n            </Button>\r\n          </Popconfirm>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"p-6 bg-white shadow-md rounded-lg\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <Title level={3} className=\"text-gray-700\">Danh Sách Các Loại Xe</Title>\r\n        <Button type=\"primary\" onClick={showDrawer}>\r\n          Thêm Loại Xe Mới\r\n        </Button>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center items-center py-10\">\r\n          <Spin tip=\"Đang tải danh sách loại xe...\" size=\"large\" />\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"flex justify-center items-center py-10\">\r\n          <p>Lỗi khi tải dữ liệu: {error.message}</p>\r\n        </div>\r\n      ) : busTypes.length === 0 ? (\r\n        <div className=\"flex justify-center items-center py-10\">\r\n          <Empty description=\"Không có loại xe nào\" />\r\n        </div>\r\n      ) : (\r\n        <Table dataSource={busTypes} columns={columns} rowKey=\"_id\" pagination={{ pageSize: 5 }} />\r\n      )}\r\n\r\n      <Drawer\r\n        title={selectedBusType ? 'Chỉnh Sửa Loại Xe' : 'Thêm Loại Xe Mới'}\r\n        width={500}\r\n        onClose={() => closeDrawer()}\r\n        visible={drawerVisible}\r\n        destroyOnClose\r\n      >\r\n        <BusTypeForm\r\n          busType={selectedBusType}\r\n          closeDrawer={(successMessage) => closeDrawer(successMessage)}\r\n        />\r\n      </Drawer>\r\n\r\n      <Notification\r\n        open={notification.open}\r\n        severity={notification.severity}\r\n        message={notification.message}\r\n        onClose={() => setNotification({ ...notification, open: false })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BusTypeList;\r\n","import React from 'react';\r\nimport BusTypeList from '../components/ManageBus/BusTypeList';\r\n\r\nconst ManageBuses = () => {\r\n  return (\r\n    <div className=\"p-8\">\r\n      <BusTypeList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageBuses;\r\n"],"names":["_ref","busType","closeDrawer","createBusType","useCreateBusTypeMutation","updateBusType","useUpdateBusTypeMutation","formData","setFormData","useState","name","description","seats","floorCount","useEffect","handleChange","e","value","target","_jsxs","onSubmit","async","preventDefault","id","_id","updatedBusType","unwrap","err","message","console","error","children","className","_jsx","type","onChange","required","min","Title","Typography","BusTypeList","companyId","useSelector","state","_state$user","_state$user$userInfo","user","userInfo","data","response","isLoading","refetch","useGetBusTypesQuery","busTypes","deleteBusType","useDeleteBusTypeMutation","drawerVisible","setDrawerVisible","selectedBusType","setSelectedBusType","notification","setNotification","open","severity","successMessage","columns","title","dataIndex","key","render","text","record","Button","onClick","Popconfirm","onConfirm","busTypeId","handleDelete","okText","cancelText","danger","level","showDrawer","Spin","tip","size","length","Empty","Table","dataSource","rowKey","pagination","pageSize","Drawer","width","onClose","visible","destroyOnClose","BusTypeForm","Notification","ManageBuses"],"sourceRoot":""}