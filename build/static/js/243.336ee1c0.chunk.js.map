{"version":3,"file":"static/js/243.336ee1c0.chunk.js","mappings":"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","sources":["components/auth/Register.js","components/shared/Notification/Notification.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useRegisterMutation, useVerifyOtpMutation } from '../../Redux/User/apiSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCredentials } from '../../Redux/User/userSlice';\r\nimport Notification from '../shared/Notification/Notification';\r\n\r\nconst Register = () => {\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [otp, setOtp] = useState('');  // OTP từ người dùng\r\n  const [step, setStep] = useState(1);  // Quản lý bước đăng ký (1: Đăng ký, 2: Nhập OTP)\r\n  const [formattedPhoneNumber, setFormattedPhoneNumber] = useState('');\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [register, { isLoading }] = useRegisterMutation();\r\n  const [verify] = useVerifyOtpMutation();  // Sử dụng hook verify OTP từ apiSlice\r\n\r\n  const [notificationOpen, setNotificationOpen] = useState(false);\r\n  const [notificationMessage, setNotificationMessage] = useState('');\r\n  const [notificationSeverity, setNotificationSeverity] = useState('success');\r\n\r\n  // Xử lý đăng ký\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage('');\r\n    try {\r\n      let formattedPhoneNumber = phoneNumber;\r\n      if (phoneNumber.startsWith('0')) {\r\n        formattedPhoneNumber = '+84' + phoneNumber.substring(1);\r\n      }\r\n\r\n      const userData = await register({ userName, password, fullName, email, phoneNumber: formattedPhoneNumber }).unwrap();\r\n      if (userData?.success) {\r\n        setFormattedPhoneNumber(formattedPhoneNumber);  // Lưu số điện thoại để xác minh OTP\r\n        setStep(2);  // Chuyển sang bước nhập OTP\r\n        showNotification('success', 'Mã OTP đã được gửi!');\r\n      } else {\r\n        throw new Error('Đăng ký thất bại');\r\n      }\r\n    } catch (err) {\r\n      const errorMsg = err?.data?.message || 'Đăng ký thất bại. Vui lòng thử lại.';\r\n      setErrorMessage(errorMsg);\r\n      showNotification('error', errorMsg);\r\n    }\r\n  };\r\n  const handleVerifyOTP = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Phone number: \", formattedPhoneNumber);\r\n    console.log(\"OTP entered: \", otp);\r\n  \r\n    try {\r\n      const verifyData = await verify({\r\n        phoneNumber: formattedPhoneNumber,\r\n        verificationCode: otp,\r\n      }).unwrap();\r\n      if (verifyData?.success) {\r\n        console.log(\"Xác minh OTP thành công: \", verifyData);\r\n        const userInfo = { ...verifyData.newUser }; \r\n        dispatch(setCredentials(userInfo));\r\n        localStorage.setItem('user', JSON.stringify(userInfo));\r\n  \r\n        showNotification('success', 'Xác minh OTP thành công! Vui lòng đăng nhập.');\r\n        navigate('/login'); \r\n      } else {\r\n        throw new Error('Xác minh OTP thất bại');\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Lỗi xác minh OTP: \", err);\r\n      showNotification('error', 'Xác minh OTP thất bại. Vui lòng thử lại.');\r\n    }\r\n  };\r\n  const showNotification = (severity, message) => {\r\n    setNotificationSeverity(severity);\r\n    setNotificationMessage(message);\r\n    setNotificationOpen(true);\r\n  };\r\n\r\n  const handleNotificationClose = () => {\r\n    setNotificationOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center bg-cover bg-center bg-fixed\" style={{ backgroundImage: 'url(\"https://source.unsplash.com/1600x900/?nature,water\")' }}>\r\n      <div className=\"bg-white shadow-md rounded-lg p-8 w-full max-w-md bg-opacity-80\">\r\n        <h2 className=\"text-2xl font-bold text-center mb-6\">\r\n          {step === 1 ? 'Create Your Account' : 'Enter OTP'}\r\n        </h2>\r\n\r\n        {/* Hiển thị form đăng ký hoặc nhập OTP dựa vào step */}\r\n        {step === 1 ? (\r\n          <form className=\"space-y-4\" onSubmit={handleRegister}>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                value={userName}\r\n                onChange={(e) => setUserName(e.target.value)}\r\n                required\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Full Name\"\r\n                value={fullName}\r\n                onChange={(e) => setFullName(e.target.value)}\r\n                required\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Phone Number\"\r\n                value={phoneNumber}\r\n                onChange={(e) => setPhoneNumber(e.target.value)}\r\n                required\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            {errorMessage && <p className=\"text-red-500 text-xs italic\">{errorMessage}</p>}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-black text-white font-bold py-2 px-4 rounded hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-500\"\r\n            >\r\n              {isLoading ? 'Registering...' : 'Register'}\r\n            </button>\r\n          </form>\r\n        ) : (\r\n          <form className=\"space-y-4\" onSubmit={handleVerifyOTP}>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter OTP\"\r\n                value={otp}\r\n                onChange={(e) => setOtp(e.target.value)}\r\n                required\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            {errorMessage && <p className=\"text-red-500 text-xs italic\">{errorMessage}</p>}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-black text-white font-bold py-2 px-4 rounded hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-500\"\r\n            >\r\n              {isLoading ? 'Verifying...' : 'Verify OTP'}\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n\r\n      {/* Snackbar notification component */}\r\n      <Notification\r\n        open={notificationOpen}\r\n        onClose={handleNotificationClose}\r\n        severity={notificationSeverity}\r\n        message={notificationMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Slide from '@mui/material/Slide';\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Notification = ({ open, onClose, severity, message, autoHideDuration = 3000, TransitionComponent = Slide }) => {\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={autoHideDuration}\r\n      onClose={onClose}\r\n      TransitionComponent={TransitionComponent}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }} \r\n    >\r\n      <Alert onClose={onClose} severity={severity} sx={{ width: '100%' }}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\nexport default Notification;\r\n"],"names":["Register","userName","setUserName","useState","password","setPassword","fullName","setFullName","email","setEmail","phoneNumber","setPhoneNumber","otp","setOtp","step","setStep","formattedPhoneNumber","setFormattedPhoneNumber","errorMessage","setErrorMessage","dispatch","useDispatch","navigate","useNavigate","register","isLoading","useRegisterMutation","verify","useVerifyOtpMutation","notificationOpen","setNotificationOpen","notificationMessage","setNotificationMessage","notificationSeverity","setNotificationSeverity","showNotification","severity","message","_jsxs","className","style","backgroundImage","children","_jsx","onSubmit","async","e","preventDefault","startsWith","substring","userData","unwrap","success","Error","err","_err$data","errorMsg","data","type","placeholder","value","onChange","target","required","console","log","verifyData","verificationCode","userInfo","newUser","setCredentials","localStorage","setItem","JSON","stringify","error","Notification","open","onClose","handleNotificationClose","Alert","React","props","ref","MuiAlert","elevation","variant","_ref","autoHideDuration","TransitionComponent","Slide","Snackbar","anchorOrigin","vertical","horizontal","sx","width"],"sourceRoot":""}