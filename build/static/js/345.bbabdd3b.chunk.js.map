{"version":3,"file":"static/js/345.bbabdd3b.chunk.js","mappings":"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","sources":["components/CompanyAdmin/components/ManageBus/BusTypeForm.js","components/CompanyAdmin/components/ManageBus/BusTypeList.js","components/CompanyAdmin/pages/ManageBuses.js","components/shared/Notification/Notification.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useCreateBusTypeMutation, useUpdateBusTypeMutation } from '../../../../Redux/Bustype/BusTypeApiSlice';\r\n\r\nconst BusTypeForm = ({ busType, closeDrawer }) => {\r\n  const [createBusType] = useCreateBusTypeMutation();\r\n  const [updateBusType] = useUpdateBusTypeMutation();\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    seats: 40,\r\n    floorCount: 1,\r\n    images: [],\r\n  });\r\n  const [imagePreviews, setImagePreviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (busType) {\r\n      setFormData({\r\n        name: busType.name,\r\n        description: busType.description || '',\r\n        seats: busType.seats,\r\n        floorCount: busType.floorCount || 1,\r\n        images: busType.images || [],\r\n      });\r\n      setImagePreviews(busType.images || []);\r\n    }\r\n  }, [busType]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length + formData.images.length > 5) {\r\n      alert('Bạn chỉ có thể tải lên tối đa 5 hình ảnh');\r\n      return;\r\n    }\r\n\r\n    const updatedImages = [...formData.images, ...files];\r\n    setFormData({ ...formData, images: updatedImages });\r\n\r\n    const imageUrls = files.map((file) => URL.createObjectURL(file));\r\n    setImagePreviews((prev) => [...prev, ...imageUrls]);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    // Tạo đối tượng FormData để xử lý cả dữ liệu text và file\r\n    const formDataToSend = new FormData();\r\n    formDataToSend.append('name', formData.name);\r\n    formDataToSend.append('description', formData.description);\r\n    formDataToSend.append('seats', formData.seats);\r\n    formDataToSend.append('floorCount', formData.floorCount);\r\n  \r\n    // Thêm từng file ảnh vào FormData, nếu có\r\n    formData.images.forEach((image) => {\r\n      formDataToSend.append('images', image);\r\n    });\r\n  \r\n    try {\r\n      if (busType) {\r\n        // Khi cập nhật, truyền ID và gửi FormData\r\n        await updateBusType({ id: busType._id, updatedBusType: formDataToSend }).unwrap();\r\n        closeDrawer(`Cập nhật loại xe \"${formData.name}\" thành công!`);\r\n      } else {\r\n        // Khi thêm loại xe mới\r\n        await createBusType(formDataToSend).unwrap();\r\n        closeDrawer(`Thêm loại xe \"${formData.name}\" thành công!`);\r\n      }\r\n    } catch (err) {\r\n      closeDrawer(`Lỗi khi lưu loại xe: ${err.message}`, 'error');\r\n      console.error('Lỗi khi lưu loại xe:', err);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Tên Loại Xe:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          className=\"mt-2 p-2 border rounded w-full\"\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Mô Tả:</label>\r\n        <textarea\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleChange}\r\n          className=\"mt-2 p-2 border rounded w-full\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Số Ghế:</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"seats\"\r\n          value={formData.seats}\r\n          onChange={handleChange}\r\n          className=\"mt-2 p-2 border rounded w-full\"\r\n          min=\"1\"\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Số Tầng:</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"floorCount\"\r\n          value={formData.floorCount}\r\n          onChange={handleChange}\r\n          className=\"mt-2 p-2 border rounded w-full\"\r\n          min=\"1\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Hình Ảnh:</label>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          multiple\r\n          onChange={handleImageChange}\r\n          className=\"mt-2 p-2 border rounded w-full\"\r\n        />\r\n        <div className=\"flex mt-4 gap-2\">\r\n          {imagePreviews.map((src, index) => (\r\n            <img\r\n              key={index}\r\n              src={src}\r\n              alt={`Preview ${index + 1}`}\r\n              className=\"w-20 h-20 object-cover rounded border\"\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2 rounded w-full\">\r\n        {busType ? 'Cập Nhật Loại Xe' : 'Thêm Loại Xe'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BusTypeForm;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetBusTypesQuery, useDeleteBusTypeMutation } from '../../../../Redux/Bustype/BusTypeApiSlice';\r\nimport { Drawer, Button, Table, Popconfirm, Spin, Typography, Empty, Modal } from 'antd';\r\nimport BusTypeForm from './BusTypeForm';\r\nimport Notification from '../../../../components/shared/Notification/Notification';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst BusTypeList = () => {\r\n  const companyId = useSelector((state) => state.user?.userInfo?.companyId);\r\n  const { data: response, isLoading, error, refetch } = useGetBusTypesQuery({ companyId });\r\n\r\n  const busTypes = response?.data || [];\r\n  const [deleteBusType] = useDeleteBusTypeMutation();\r\n  const [drawerVisible, setDrawerVisible] = useState(false);\r\n  const [selectedBusType, setSelectedBusType] = useState(null);\r\n  const [notification, setNotification] = useState({ open: false, severity: 'info', message: '' });\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [currentImages, setCurrentImages] = useState([]);\r\n\r\n  // Open drawer for adding a new bus type\r\n  const showDrawer = () => {\r\n    setSelectedBusType(null);\r\n    setDrawerVisible(true);\r\n  };\r\n\r\n  // Close drawer and show notification if successful\r\n  const closeDrawer = (successMessage) => {\r\n    setDrawerVisible(false);\r\n    if (successMessage) {\r\n      setNotification({ open: true, severity: 'success', message: successMessage });\r\n      refetch();\r\n    }\r\n  };\r\n\r\n  // Open drawer for editing a bus type\r\n  const handleEdit = (busType) => {\r\n    setSelectedBusType(busType);\r\n    setDrawerVisible(true);\r\n  };\r\n\r\n  // Delete a bus type\r\n  const handleDelete = async (busTypeId) => {\r\n    try {\r\n      await deleteBusType(busTypeId).unwrap();\r\n      setNotification({ open: true, severity: 'success', message: 'Xóa loại xe thành công!' });\r\n      refetch();\r\n    } catch (error) {\r\n      setNotification({ open: true, severity: 'error', message: `Lỗi khi xóa loại xe: ${error.message}` });\r\n    }\r\n  };\r\n\r\n  // Show modal with all images of a bus type\r\n  const showModal = (images) => {\r\n    setCurrentImages(images);\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  // Close modal\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    setCurrentImages([]);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Tên Loại Xe',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Mô Tả',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n    },\r\n    {\r\n      title: 'Số Ghế',\r\n      dataIndex: 'seats',\r\n      key: 'seats',\r\n    },\r\n    {\r\n      title: 'Số Tầng',\r\n      dataIndex: 'floorCount',\r\n      key: 'floorCount',\r\n    },\r\n    {\r\n      title: 'Hình Ảnh',\r\n      dataIndex: 'images',\r\n      key: 'images',\r\n      render: (images) => (\r\n        <div style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>\r\n          {images.slice(0, 2).map((image, index) => (\r\n            <img\r\n              key={index}\r\n              src={image}\r\n              alt={`Bus type preview ${index + 1}`}\r\n              style={{ width: 50, height: 50, objectFit: 'cover', borderRadius: '4px' }}\r\n            />\r\n          ))}\r\n          {images.length > 2 && (\r\n            <Button type=\"link\" onClick={() => showModal(images)}>\r\n              Xem Thêm\r\n            </Button>\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Thao Tác',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <span>\r\n          <Button type=\"link\" onClick={() => handleEdit(record)}>\r\n            Sửa\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"Bạn có chắc chắn muốn xóa loại xe này không?\"\r\n            onConfirm={() => handleDelete(record._id)}\r\n            okText=\"Có\"\r\n            cancelText=\"Không\"\r\n          >\r\n            <Button type=\"link\" danger>\r\n              Xóa\r\n            </Button>\r\n          </Popconfirm>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"p-6 bg-white shadow-md rounded-lg\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <Title level={3} className=\"text-gray-700\">Danh Sách Các Loại Xe</Title>\r\n        <Button type=\"primary\" onClick={showDrawer}>\r\n          Thêm Loại Xe Mới\r\n        </Button>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center items-center py-10\">\r\n          <Spin tip=\"Đang tải danh sách loại xe...\" size=\"large\" />\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"flex justify-center items-center py-10\">\r\n          <p>Lỗi khi tải dữ liệu: {error.message}</p>\r\n        </div>\r\n      ) : busTypes.length === 0 ? (\r\n        <div className=\"flex justify-center items-center py-10\">\r\n          <Empty description=\"Không có loại xe nào\" />\r\n        </div>\r\n      ) : (\r\n        <Table dataSource={busTypes} columns={columns} rowKey=\"_id\" pagination={{ pageSize: 5 }} />\r\n      )}\r\n\r\n      <Drawer\r\n        title={selectedBusType ? 'Chỉnh Sửa Loại Xe' : 'Thêm Loại Xe Mới'}\r\n        width={500}\r\n        onClose={() => closeDrawer()}\r\n        visible={drawerVisible}\r\n        destroyOnClose\r\n      >\r\n        <BusTypeForm\r\n          busType={selectedBusType}\r\n          closeDrawer={(successMessage) => closeDrawer(successMessage)}\r\n        />\r\n      </Drawer>\r\n\r\n      <Modal\r\n        title=\"Tất Cả Hình Ảnh\"\r\n        visible={isModalVisible}\r\n        footer={null}\r\n        onCancel={handleCancel}\r\n      >\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\r\n          {currentImages.map((image, index) => (\r\n            <img\r\n              key={index}\r\n              src={image}\r\n              alt={`Bus type full view ${index + 1}`}\r\n              style={{ width: 100, height: 100, objectFit: 'cover', borderRadius: '4px' }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </Modal>\r\n\r\n      <Notification\r\n        open={notification.open}\r\n        severity={notification.severity}\r\n        message={notification.message}\r\n        onClose={() => setNotification({ ...notification, open: false })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BusTypeList;\r\n","import React from 'react';\r\nimport BusTypeList from '../components/ManageBus/BusTypeList';\r\n\r\nconst ManageBuses = () => {\r\n  return (\r\n    <div className=\"p-8\">\r\n      <BusTypeList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageBuses;\r\n","import React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Slide from '@mui/material/Slide';\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Notification = ({ open, onClose, severity, message, autoHideDuration = 3000, TransitionComponent = Slide }) => {\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={autoHideDuration}\r\n      onClose={onClose}\r\n      TransitionComponent={TransitionComponent}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }} \r\n    >\r\n      <Alert onClose={onClose} severity={severity} sx={{ width: '100%' }}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\nexport default Notification;\r\n"],"names":["_ref","busType","closeDrawer","createBusType","useCreateBusTypeMutation","updateBusType","useUpdateBusTypeMutation","formData","setFormData","useState","name","description","seats","floorCount","images","imagePreviews","setImagePreviews","useEffect","handleChange","e","value","target","_jsxs","onSubmit","async","preventDefault","formDataToSend","FormData","append","forEach","image","id","_id","updatedBusType","unwrap","err","message","console","error","children","className","_jsx","type","onChange","required","min","accept","multiple","files","Array","from","length","alert","updatedImages","imageUrls","map","file","URL","createObjectURL","prev","src","index","alt","Title","Typography","BusTypeList","companyId","useSelector","state","_state$user","_state$user$userInfo","user","userInfo","data","response","isLoading","refetch","useGetBusTypesQuery","busTypes","deleteBusType","useDeleteBusTypeMutation","drawerVisible","setDrawerVisible","selectedBusType","setSelectedBusType","notification","setNotification","open","severity","isModalVisible","setIsModalVisible","currentImages","setCurrentImages","successMessage","columns","title","dataIndex","key","render","style","display","gap","alignItems","slice","width","height","objectFit","borderRadius","Button","onClick","showModal","text","record","Popconfirm","onConfirm","busTypeId","handleDelete","okText","cancelText","danger","level","showDrawer","Spin","tip","size","Empty","Table","dataSource","rowKey","pagination","pageSize","Drawer","onClose","visible","destroyOnClose","BusTypeForm","Modal","footer","onCancel","handleCancel","flexWrap","Notification","ManageBuses","Alert","React","props","ref","MuiAlert","elevation","variant","autoHideDuration","TransitionComponent","Slide","Snackbar","anchorOrigin","vertical","horizontal","sx"],"sourceRoot":""}