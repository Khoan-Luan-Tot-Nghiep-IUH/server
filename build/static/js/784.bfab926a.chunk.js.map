{"version":3,"file":"static/js/784.bfab926a.chunk.js","mappings":"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","sources":["../node_modules/jwt-decode/build/esm/index.js","components/auth/Login.js"],"sourcesContent":["export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLoginMutation } from '../../Redux/User/apiSlice';\r\nimport { setCredentials } from '../../Redux/User/userSlice';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {jwtDecode} from 'jwt-decode'; // Correct import\r\n\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [login, { isLoading }] = useLoginMutation();\r\n\r\n  // Store the full path and search (query params)\r\n  const from = location.state?.from || { pathname: '/search-results', search: location.search };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const userData = await login({ userName, password }).unwrap();\r\n      const decodedUser = jwtDecode(userData.accessToken);\r\n      const userInfo = { ...decodedUser, token: userData.accessToken };\r\n\r\n      localStorage.setItem('user', JSON.stringify(userInfo));\r\n      dispatch(setCredentials(userInfo));\r\n\r\n      // Navigate back to the original page, including the search query\r\n      navigate(from.pathname + from.search, { replace: true });\r\n    } catch (err) {\r\n      setErrorMessage(err.data?.message || 'Login failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleSocialLoginSuccess = (token) => {\r\n    try {\r\n      const decodedUser = jwtDecode(token);\r\n      const userInfo = { ...decodedUser, token };\r\n      localStorage.setItem('user', JSON.stringify(userInfo));\r\n      dispatch(setCredentials(userInfo));\r\n      navigate(from.pathname + from.search, { replace: true });\r\n    } catch (error) {\r\n      setErrorMessage('Social login failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const token = params.get('token');\r\n    if (token) {\r\n      handleSocialLoginSuccess(token);\r\n    }\r\n  }, [location]);\r\n\r\n  const handleFacebookLogin = () => {\r\n    window.location.href = 'http://localhost:5000/api/user/facebook';\r\n  };\r\n\r\n  const handleGoogleLogin = () => {\r\n    window.location.href = 'http://localhost:5000/api/user/google';\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2 className=\"login-title\">Welcome Back!</h2>\r\n        <form className=\"login-form\" onSubmit={handleLogin}>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              value={userName}\r\n              onChange={(e) => setUserName(e.target.value)}\r\n              required\r\n              className=\"login-input\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              className=\"login-input\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"login-button\" disabled={isLoading}>\r\n            {isLoading ? 'Logging in...' : 'Login'}\r\n          </button>\r\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        </form>\r\n        <div className=\"divider\">or</div>\r\n        <button onClick={handleFacebookLogin} className=\"social-login-btn facebook\">\r\n          Login with Facebook\r\n        </button>\r\n        <button onClick={handleGoogleLogin} className=\"social-login-btn google\">\r\n          Login with Google\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["InvalidTokenError","Error","base64UrlDecode","str","output","replace","length","decodeURIComponent","atob","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","jwtDecode","token","options","pos","header","part","split","decoded","e","message","JSON","parse","prototype","name","Login","_location$state","userName","setUserName","useState","password","setPassword","errorMessage","setErrorMessage","dispatch","useDispatch","navigate","useNavigate","location","useLocation","login","isLoading","useLoginMutation","from","state","pathname","search","useEffect","URLSearchParams","get","userInfo","localStorage","setItem","stringify","setCredentials","error","handleSocialLoginSuccess","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","userData","unwrap","accessToken","_err$data","data","type","placeholder","value","onChange","target","required","disabled","onClick","handleFacebookLogin","window","href","handleGoogleLogin"],"sourceRoot":""}