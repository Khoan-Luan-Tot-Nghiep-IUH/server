{"version":3,"file":"static/js/243.59125779.chunk.js","mappings":"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","sources":["components/auth/Register.js","components/shared/Notification/Notification.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useRegisterMutation, useVerifyOtpMutation } from '../../Redux/User/apiSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport Notification from '../shared/Notification/Notification';\r\n\r\nconst Register = () => {\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [verificationMethod, setVerificationMethod] = useState('email');\r\n  const [otp, setOtp] = useState('');\r\n  const [step, setStep] = useState(1);\r\n  const [formattedPhoneNumber, setFormattedPhoneNumber] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [register, { isLoading: isRegistering }] = useRegisterMutation();\r\n  const [verify, { isLoading: isVerifying }] = useVerifyOtpMutation();\r\n\r\n  const [notificationOpen, setNotificationOpen] = useState(false);\r\n  const [notificationMessage, setNotificationMessage] = useState('');\r\n  const [notificationSeverity, setNotificationSeverity] = useState('success');\r\n\r\n  const showNotification = (severity, message) => {\r\n    setNotificationSeverity(severity);\r\n    setNotificationMessage(message);\r\n    setNotificationOpen(true);\r\n  };\r\n\r\n  const handleNotificationClose = () => {\r\n    setNotificationOpen(false);\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage('');\r\n    const phoneRegex = /^[0-9]{10}$/;\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\\.com$/;\r\n\r\n    if (!phoneRegex.test(phoneNumber)) {\r\n      setErrorMessage('Số điện thoại phải có 10 chữ số.');\r\n      return;\r\n    }\r\n    if (!emailRegex.test(email)) {\r\n      setErrorMessage('Email phải thuộc miền @gmail.com.');\r\n      return;\r\n    }\r\n\r\n    let formattedPhone = phoneNumber.startsWith('0') ? `+84${phoneNumber.slice(1)}` : phoneNumber;\r\n\r\n    try {\r\n      const userData = await register({\r\n        userName,\r\n        password,\r\n        fullName,\r\n        email,\r\n        phoneNumber: formattedPhone,\r\n        verificationMethod,\r\n      }).unwrap();\r\n\r\n      if (userData?.success) {\r\n        setFormattedPhoneNumber(formattedPhone);\r\n        setStep(2);\r\n        showNotification('success', 'Mã OTP đã được gửi!');\r\n      } else {\r\n        throw new Error(userData?.message || 'Đăng ký thất bại');\r\n      }\r\n    } catch (err) {\r\n      const errorMsg = err?.data?.message || 'Đăng ký thất bại. Vui lòng thử lại.';\r\n      setErrorMessage(errorMsg);\r\n      showNotification('error', errorMsg);\r\n    }\r\n  };\r\n\r\n  const handleVerifyOTP = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const verifyData = await verify({\r\n        verificationMethod,\r\n        phoneNumber: verificationMethod === 'phone' ? formattedPhoneNumber : undefined,\r\n        email: verificationMethod === 'email' ? email : undefined,\r\n        verificationCode: otp,\r\n      }).unwrap();\r\n\r\n      if (verifyData?.success) {\r\n        showNotification('success', 'Xác minh OTP thành công! Vui lòng đăng nhập.');\r\n        navigate('/login');\r\n      } else {\r\n        throw new Error('Xác minh OTP thất bại');\r\n      }\r\n    } catch (err) {\r\n      const errorMsg = err?.response?.data?.message || 'Xác minh OTP thất bại. Vui lòng thử lại.';\r\n      showNotification('error', errorMsg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-400\">\r\n      <div className=\"bg-white shadow-2xl rounded-2xl w-full max-w-4xl overflow-hidden\">\r\n        <div className=\"md:flex w-full\">\r\n          {/* Left Section */}\r\n          <div className=\"hidden md:flex w-1/2 bg-gradient-to-tr from-purple-600 to-blue-500 items-center justify-center p-10\">\r\n            <div>\r\n              <h2 className=\"text-white text-4xl font-bold mb-4\">Chào Mừng!</h2>\r\n              <p className=\"text-white mb-8\">\r\n                Hãy nhập thông tin cá nhân của bạn để tạo tài khoản và bắt đầu hành trình với chúng tôi.\r\n              </p>\r\n              <button\r\n                className=\"bg-white text-blue-600 font-semibold py-2 px-6 rounded-full hover:bg-gray-100\"\r\n                onClick={() => navigate('/login')}\r\n              >\r\n                Đăng Nhập\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Right Section */}\r\n          <div className=\"w-full md:w-1/2 py-10 px-5 md:px-10\">\r\n            <div className=\"text-center mb-10\">\r\n              <h2 className=\"text-3xl font-bold text-gray-800\">{step === 1 ? 'Đăng Ký' : 'Xác Minh OTP'}</h2>\r\n              <p className=\"text-gray-600\">{step === 1 ? 'Vui lòng điền thông tin để tạo tài khoản.' : 'Nhập mã OTP đã được gửi cho bạn.'}</p>\r\n            </div>\r\n\r\n            {step === 1 ? (\r\n              <form onSubmit={handleRegister}>\r\n                <div className=\"flex -mx-3\">\r\n                  <div className=\"w-full px-3 mb-5\">\r\n                    <label className=\"text-gray-700 font-semibold\">Tên đăng nhập</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Nhập tên đăng nhập\"\r\n                      value={userName}\r\n                      onChange={(e) => setUserName(e.target.value)}\r\n                      required\r\n                      className=\"w-full mt-2 p-3 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex -mx-3\">\r\n                  <div className=\"w-full px-3 mb-5\">\r\n                    <label className=\"text-gray-700 font-semibold\">Mật khẩu</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      placeholder=\"Nhập mật khẩu\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      required\r\n                      className=\"w-full mt-2 p-3 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex -mx-3\">\r\n                  <div className=\"w-full px-3 mb-5\">\r\n                    <label className=\"text-gray-700 font-semibold\">Họ và tên</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Nhập họ và tên\"\r\n                      value={fullName}\r\n                      onChange={(e) => setFullName(e.target.value)}\r\n                      required\r\n                      className=\"w-full mt-2 p-3 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex -mx-3\">\r\n                  <div className=\"w-full px-3 mb-5\">\r\n                    <label className=\"text-gray-700 font-semibold\">Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      placeholder=\"Nhập email\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      required\r\n                      className=\"w-full mt-2 p-3 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex -mx-3\">\r\n                  <div className=\"w-full px-3 mb-5\">\r\n                    <label className=\"text-gray-700 font-semibold\">Số điện thoại</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Nhập số điện thoại\"\r\n                      value={phoneNumber}\r\n                      onChange={(e) => setPhoneNumber(e.target.value)}\r\n                      required\r\n                      className=\"w-full mt-2 p-3 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex -mx-3 mb-5\">\r\n                  <div className=\"w-full px-3\">\r\n                    <label className=\"text-gray-700 font-semibold mb-2\">Phương thức xác minh</label>\r\n                    <div className=\"flex items-center space-x-4 mt-2\">\r\n                      <label className=\"flex items-center\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"email\"\r\n                          checked={verificationMethod === 'email'}\r\n                          onChange={() => setVerificationMethod('email')}\r\n                          className=\"form-radio h-5 w-5 text-blue-600\"\r\n                        />\r\n                        <span className=\"ml-2 text-gray-700\">Email</span>\r\n                      </label>\r\n                      <label className=\"flex items-center\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"phone\"\r\n                          checked={verificationMethod === 'phone'}\r\n                          onChange={() => setVerificationMethod('phone')}\r\n                          className=\"form-radio h-5 w-5 text-blue-600\"\r\n                        />\r\n                        <span className=\"ml-2 text-gray-700\">Số điện thoại</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {errorMessage && (\r\n                  <p className=\"text-red-500 text-sm text-center mb-5\">{errorMessage}</p>\r\n                )}\r\n\r\n                <div className=\"flex -mx-3\">\r\n                  <div className=\"w-full px-3\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"w-full bg-blue-600 text-white py-3 rounded-md hover:bg-blue-700 transition duration-300\"\r\n                    >\r\n                      {isRegistering ? 'Đang Đăng Ký...' : 'Đăng Ký'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            ) : (\r\n              <form onSubmit={handleVerifyOTP}>\r\n                <div className=\"flex -mx-3 mb-5\">\r\n                  <div className=\"w-full px-3\">\r\n                    <label className=\"text-gray-700 font-semibold\">Mã OTP</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Nhập mã OTP\"\r\n                      value={otp}\r\n                      onChange={(e) => setOtp(e.target.value)}\r\n                      required\r\n                      className=\"w-full mt-2 p-3 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {errorMessage && (\r\n                  <p className=\"text-red-500 text-sm text-center mb-5\">{errorMessage}</p>\r\n                )}\r\n\r\n                <div className=\"flex -mx-3\">\r\n                  <div className=\"w-full px-3\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"w-full bg-blue-600 text-white py-3 rounded-md hover:bg-blue-700 transition duration-300\"\r\n                    >\r\n                      {isVerifying ? 'Đang Xác Minh...' : 'Xác Minh OTP'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Notification\r\n        open={notificationOpen}\r\n        onClose={handleNotificationClose}\r\n        severity={notificationSeverity}\r\n        message={notificationMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Slide from '@mui/material/Slide';\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Notification = ({ open, onClose, severity, message, autoHideDuration = 3000, TransitionComponent = Slide }) => {\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={autoHideDuration}\r\n      onClose={onClose}\r\n      TransitionComponent={TransitionComponent}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }} \r\n    >\r\n      <Alert onClose={onClose} severity={severity} sx={{ width: '100%' }}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\nexport default Notification;\r\n"],"names":["Register","userName","setUserName","useState","password","setPassword","fullName","setFullName","email","setEmail","phoneNumber","setPhoneNumber","verificationMethod","setVerificationMethod","otp","setOtp","step","setStep","formattedPhoneNumber","setFormattedPhoneNumber","errorMessage","setErrorMessage","navigate","useDispatch","useNavigate","register","isLoading","isRegistering","useRegisterMutation","verify","isVerifying","useVerifyOtpMutation","notificationOpen","setNotificationOpen","notificationMessage","setNotificationMessage","notificationSeverity","setNotificationSeverity","showNotification","severity","message","_jsxs","className","children","_jsx","onClick","onSubmit","async","e","preventDefault","test","formattedPhone","startsWith","slice","userData","unwrap","success","Error","err","_err$data","errorMsg","data","type","placeholder","value","onChange","target","required","checked","verifyData","undefined","verificationCode","_err$response","_err$response$data","response","Notification","open","onClose","handleNotificationClose","Alert","React","props","ref","MuiAlert","elevation","variant","_ref","autoHideDuration","TransitionComponent","Slide","Snackbar","anchorOrigin","vertical","horizontal","sx","width"],"sourceRoot":""}