{"version":3,"file":"static/js/3243.d70c4b81.chunk.js","mappings":"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","sources":["components/auth/Register.js","components/shared/Notification/Notification.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useRegisterMutation, useVerifyOtpMutation } from '../../Redux/User/apiSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport Notification from '../shared/Notification/Notification';\r\n\r\nconst Register = () => {\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [verificationMethod, setVerificationMethod] = useState('email');\r\n  const [otp, setOtp] = useState('');\r\n  const [step, setStep] = useState(1);\r\n  const [formattedPhoneNumber, setFormattedPhoneNumber] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [register, { isLoading: isRegistering }] = useRegisterMutation();\r\n  const [verify, { isLoading: isVerifying }] = useVerifyOtpMutation();\r\n\r\n  const [notificationOpen, setNotificationOpen] = useState(false);\r\n  const [notificationMessage, setNotificationMessage] = useState('');\r\n  const [notificationSeverity, setNotificationSeverity] = useState('success');\r\n\r\n  const showNotification = (severity, message) => {\r\n    setNotificationSeverity(severity);\r\n    setNotificationMessage(message);\r\n    setNotificationOpen(true);\r\n  };\r\n\r\n  const handleNotificationClose = () => {\r\n    setNotificationOpen(false);\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage('');\r\n    const phoneRegex = /^[0-9]{10}$/;\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\\.com$/;\r\n\r\n    if (!phoneRegex.test(phoneNumber)) {\r\n      setErrorMessage('Số điện thoại phải có 10 chữ số.');\r\n      return;\r\n    }\r\n    if (!emailRegex.test(email)) {\r\n      setErrorMessage('Email phải thuộc miền @gmail.com.');\r\n      return;\r\n    }\r\n\r\n    let formattedPhone = phoneNumber.startsWith('0') ? `+84${phoneNumber.slice(1)}` : phoneNumber;\r\n\r\n    try {\r\n      const userData = await register({\r\n        userName,\r\n        password,\r\n        fullName,\r\n        email,\r\n        phoneNumber: formattedPhone,\r\n        verificationMethod,\r\n      }).unwrap();\r\n\r\n      if (userData?.success) {\r\n        setFormattedPhoneNumber(formattedPhone);\r\n        setStep(2);\r\n        showNotification('success', 'Mã OTP đã được gửi!');\r\n      } else {\r\n        throw new Error(userData?.message || 'Đăng ký thất bại');\r\n      }\r\n    } catch (err) {\r\n      const errorMsg = err?.data?.message || 'Đăng ký thất bại. Vui lòng thử lại.';\r\n      setErrorMessage(errorMsg);\r\n      showNotification('error', errorMsg);\r\n    }\r\n  };\r\n\r\n  const handleVerifyOTP = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const verifyData = await verify({\r\n        verificationMethod,\r\n        phoneNumber: verificationMethod === 'phone' ? formattedPhoneNumber : undefined,\r\n        email: verificationMethod === 'email' ? email : undefined,\r\n        verificationCode: otp,\r\n      }).unwrap();\r\n\r\n      if (verifyData?.success) {\r\n        showNotification('success', 'Xác minh OTP thành công! Vui lòng đăng nhập.');\r\n        navigate('/login');\r\n      } else {\r\n        throw new Error('Xác minh OTP thất bại');\r\n      }\r\n    } catch (err) {\r\n      const errorMsg = err?.response?.data?.message || 'Xác minh OTP thất bại. Vui lòng thử lại.';\r\n      showNotification('error', errorMsg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-200 via-gray-300 to-gray-300\">\r\n      <div className=\"bg-white shadow-lg rounded-lg p-8 w-full max-w-md bg-opacity-90\">\r\n        <h2 className=\"text-3xl font-semibold text-center text-gray-800 mb-8\">\r\n          {step === 1 ? 'Tạo tài khoản' : 'Nhập mã OTP'}\r\n        </h2>\r\n\r\n        {step === 1 ? (\r\n          <form className=\"space-y-5\" onSubmit={handleRegister}>\r\n            <div>\r\n              <label className=\"block text-gray-700 mb-1\">Tên đăng nhập</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Nhập tên đăng nhập\"\r\n                value={userName}\r\n                onChange={(e) => setUserName(e.target.value)}\r\n                required\r\n                className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 placeholder-gray-400 text-gray-700\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-gray-700 mb-1\">Mật khẩu</label>\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Nhập mật khẩu\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n                className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 placeholder-gray-400 text-gray-700\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-gray-700 mb-1\">Họ và tên</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Nhập họ và tên\"\r\n                value={fullName}\r\n                onChange={(e) => setFullName(e.target.value)}\r\n                required\r\n                className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 placeholder-gray-400 text-gray-700\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Nhập email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n                className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 placeholder-gray-400 text-gray-700\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-gray-700 mb-1\">Số điện thoại</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Nhập số điện thoại\"\r\n                value={phoneNumber}\r\n                onChange={(e) => setPhoneNumber(e.target.value)}\r\n                required\r\n                className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 placeholder-gray-400 text-gray-700\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex justify-between items-center mt-4\">\r\n              <label className=\"flex items-center space-x-2 text-gray-700\">\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"email\"\r\n                  checked={verificationMethod === 'email'}\r\n                  onChange={() => setVerificationMethod('email')}\r\n                  className=\"focus:ring-purple-500\"\r\n                />\r\n                <span>Xác minh qua Email</span>\r\n              </label>\r\n              <label className=\"flex items-center space-x-2 text-gray-700\">\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"phone\"\r\n                  checked={verificationMethod === 'phone'}\r\n                  onChange={() => setVerificationMethod('phone')}\r\n                  className=\"focus:ring-purple-500\"\r\n                />\r\n                <span>Xác minh qua Số điện thoại</span>\r\n              </label>\r\n            </div>\r\n\r\n            {errorMessage && (\r\n              <p className=\"text-red-500 text-xs italic text-center\">{errorMessage}</p>\r\n            )}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full py-3 bg-purple-600 text-white font-bold rounded-lg hover:bg-purple-700 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2\"\r\n            >\r\n              {isRegistering ? 'Đang đăng ký...' : 'Đăng ký'}\r\n            </button>\r\n          </form>\r\n        ) : (\r\n          <form className=\"space-y-5\" onSubmit={handleVerifyOTP}>\r\n            <div>\r\n              <label className=\"block text-gray-700 mb-1\">Mã OTP</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Nhập mã OTP\"\r\n                value={otp}\r\n                onChange={(e) => setOtp(e.target.value)}\r\n                required\r\n                className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 placeholder-gray-400 text-gray-700\"\r\n              />\r\n            </div>\r\n\r\n            {errorMessage && (\r\n              <p className=\"text-red-500 text-xs italic text-center\">{errorMessage}</p>\r\n            )}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full py-3 bg-purple-600 text-white font-bold rounded-lg hover:bg-purple-700 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2\"\r\n            >\r\n              {isVerifying ? 'Đang xác minh...' : 'Xác minh OTP'}\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n\r\n      <Notification\r\n        open={notificationOpen}\r\n        onClose={handleNotificationClose}\r\n        severity={notificationSeverity}\r\n        message={notificationMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Slide from '@mui/material/Slide';\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Notification = ({ open, onClose, severity, message, autoHideDuration = 3000, TransitionComponent = Slide }) => {\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={autoHideDuration}\r\n      onClose={onClose}\r\n      TransitionComponent={TransitionComponent}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }} \r\n    >\r\n      <Alert onClose={onClose} severity={severity} sx={{ width: '100%' }}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\nexport default Notification;\r\n"],"names":["Register","userName","setUserName","useState","password","setPassword","fullName","setFullName","email","setEmail","phoneNumber","setPhoneNumber","verificationMethod","setVerificationMethod","otp","setOtp","step","setStep","formattedPhoneNumber","setFormattedPhoneNumber","errorMessage","setErrorMessage","navigate","useDispatch","useNavigate","register","isLoading","isRegistering","useRegisterMutation","verify","isVerifying","useVerifyOtpMutation","notificationOpen","setNotificationOpen","notificationMessage","setNotificationMessage","notificationSeverity","setNotificationSeverity","showNotification","severity","message","_jsxs","className","children","_jsx","onSubmit","async","e","preventDefault","test","formattedPhone","startsWith","slice","userData","unwrap","success","Error","err","_err$data","errorMsg","data","type","placeholder","value","onChange","target","required","checked","verifyData","undefined","verificationCode","_err$response","_err$response$data","response","Notification","open","onClose","handleNotificationClose","Alert","React","props","ref","MuiAlert","elevation","variant","_ref","autoHideDuration","TransitionComponent","Slide","Snackbar","anchorOrigin","vertical","horizontal","sx","width"],"sourceRoot":""}