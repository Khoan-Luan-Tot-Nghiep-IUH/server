{"version":3,"file":"static/js/996.fdf26e22.chunk.js","mappings":"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","sources":["components/SuperAdmin/navSideBar/Company/CompanyForm.js","components/SuperAdmin/navSideBar/Company/SnackbarNotification.js","components/SuperAdmin/navSideBar/Company/CompanyCard.js","components/SuperAdmin/navSideBar/ManageCompanies.js","components/shared/Notification/Notification.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst CompanyForm = ({\r\n  companyName,\r\n  setCompanyName,\r\n  address,\r\n  setAddress,\r\n  contactInfo,\r\n  setContactInfo,\r\n  phoneNumber,\r\n  setPhoneNumber,\r\n  email,\r\n  setEmail,\r\n  isActive,\r\n  setIsActive,\r\n  handleCreateOrUpdateCompany,\r\n  creating,\r\n  selectedCompanyId,\r\n}) => {\r\n  return (\r\n    <div className=\"w-full flex justify-center items-start p-4\">\r\n      <form\r\n        onSubmit={handleCreateOrUpdateCompany}\r\n        className=\"bg-white shadow-md rounded-lg p-4 space-y-4 max-w-sm w-full border border-gray-200\"\r\n      >\r\n        <h2 className=\"text-xl font-semibold text-center text-blue-600\">\r\n          {selectedCompanyId ? 'Cập nhật công ty' : 'Tạo công ty mới'}\r\n        </h2>\r\n\r\n        {/* Company Name */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Tên công ty</label>\r\n          <input\r\n            type=\"text\"\r\n            value={companyName}\r\n            onChange={(e) => setCompanyName(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập tên công ty\"\r\n          />\r\n        </div>\r\n\r\n        {/* Address */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Địa chỉ</label>\r\n          <input\r\n            type=\"text\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập địa chỉ\"\r\n          />\r\n        </div>\r\n\r\n        {/* Contact Info */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Thông tin liên hệ</label>\r\n          <input\r\n            type=\"text\"\r\n            value={contactInfo}\r\n            onChange={(e) => setContactInfo(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập thông tin liên hệ\"\r\n          />\r\n        </div>\r\n\r\n        {/* Phone Number */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Số điện thoại</label>\r\n          <input\r\n            type=\"text\"\r\n            value={phoneNumber}\r\n            onChange={(e) => setPhoneNumber(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập số điện thoại\"\r\n          />\r\n        </div>\r\n\r\n        {/* Email */}\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            className=\"p-2 text-sm border border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n            placeholder=\"Nhập email\"\r\n          />\r\n        </div>\r\n\r\n        {/* Active Status Toggle */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Kích hoạt</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isActive}\r\n            onChange={(e) => setIsActive(e.target.checked)}\r\n            className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring focus:ring-blue-500\"\r\n          />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <button\r\n          type=\"submit\"\r\n          className={`w-full py-2 text-white font-medium rounded-lg shadow ${\r\n            creating\r\n              ? 'bg-blue-300 cursor-not-allowed'\r\n              : 'bg-gradient-to-r from-blue-500 to-blue-600 hover:bg-blue-700'\r\n          } focus:outline-none focus:ring-2 focus:ring-blue-500`}\r\n          disabled={creating}\r\n        >\r\n          {creating ? 'Đang lưu...' : selectedCompanyId ? 'Cập nhật' : 'Lưu'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyForm;\r\n","import React from 'react';\r\nimport Notification from '../../../shared/Notification/Notification';\r\n\r\nconst SnackbarNotification = ({ open, onClose, severity, message }) => {\r\n  return (\r\n    <Notification\r\n      open={open}\r\n      onClose={onClose}\r\n      severity={severity}\r\n      message={message}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SnackbarNotification;\r\n","import React from 'react';\r\n\r\nconst CompanyCard = ({ company, onClick, onToggleStatus }) => {\r\n  return (\r\n    <div\r\n      className=\"company-card bg-gradient-to-r from-blue-400 to-purple-300 rounded-lg shadow-lg p-6 hover:shadow-2xl transition-shadow duration-300 cursor-pointer text-white\"\r\n      onClick={onClick}\r\n    >\r\n      <h3 className=\"text-lg font-bold mb-2\">{company.name}</h3>\r\n      <p className=\"text-sm mb-4\">{company.address}</p>\r\n      <p\r\n        className={`text-sm font-semibold ${\r\n          company.isActive ? 'text-green-200' : 'text-red-200'\r\n        }`}\r\n      >\r\n        {company.isActive ? 'Kích hoạt' : 'Vô hiệu hóa'}\r\n      </p>\r\n\r\n      <div className=\"mt-4 flex items-center\">\r\n        <label className=\"relative inline-flex items-center cursor-pointer\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"sr-only\"\r\n            checked={company.isActive}\r\n            onChange={() => onToggleStatus(company._id)}\r\n          />\r\n          <div\r\n            className={`w-10 h-5 rounded-full transition-all duration-300 ease-in-out ${\r\n              company.isActive ? 'bg-green-400' : 'bg-red-400'\r\n            }`}\r\n          >\r\n            <div\r\n              className={`dot absolute left-1 top-1 bg-white w-3 h-3 rounded-full transition-transform duration-300 ease-in-out ${\r\n                company.isActive ? 'transform translate-x-5' : ''\r\n              }`}\r\n            ></div>\r\n          </div>\r\n          <span className=\"ml-3 text-sm\">\r\n            {company.isActive ? 'Vô hiệu hóa' : 'Kích hoạt'}\r\n          </span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyCard;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  useAddCompanyAdminMutation,\r\n  useCreateCompanyMutation,\r\n  useUpdateCompanyMutation,\r\n  useGetCompaniesQuery,\r\n  useToggleCompanyStatusMutation,\r\n} from '../../../Redux/Company/companyApiSlice';\r\nimport CompanyForm from './Company/CompanyForm';\r\nimport SnackbarNotification from './Company/SnackbarNotification';\r\nimport CompanyCard from './Company/CompanyCard';\r\n\r\nconst ManageCompanies = () => {\r\n  const [companyName, setCompanyName] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [contactInfo, setContactInfo] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [selectedCompanyId, setSelectedCompanyId] = useState(null);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [snackbarSeverity, setSnackbarSeverity] = useState('success');\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [adminUserName, setAdminUserName] = useState('');\r\n  const [adminPassword, setAdminPassword] = useState('');\r\n  const [adminPhoneNumber, setAdminPhoneNumber] = useState('');\r\n  const [adminEmail, setAdminEmail] = useState('');\r\n  const [showAddAdmin, setShowAddAdmin] = useState(false);\r\n\r\n  const { data: companiesData, isLoading: isCompaniesLoading, error: companiesError } = useGetCompaniesQuery();\r\n  const [createCompany, { isLoading: isCreating }] = useCreateCompanyMutation();\r\n  const [updateCompany] = useUpdateCompanyMutation();\r\n  const [toggleCompanyStatus] = useToggleCompanyStatusMutation();\r\n  const [addCompanyAdmin, { isLoading: isAddingAdmin }] = useAddCompanyAdminMutation();\r\n\r\n  const [companies, setCompanies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (companiesData) {\r\n      setCompanies(companiesData.companies);\r\n    }\r\n  }, [companiesData]);\r\n\r\n  const modalRef = useRef(null);\r\n\r\n  const resetForm = () => {\r\n    setCompanyName('');\r\n    setAddress('');\r\n    setContactInfo('');\r\n    setPhoneNumber('');\r\n    setEmail('');\r\n    setSelectedCompanyId(null);\r\n    setAdminUserName('');\r\n    setAdminPassword('');\r\n    setAdminEmail('');\r\n    setAdminPhoneNumber('');\r\n    setShowAddAdmin(false);\r\n  };\r\n\r\n  const showSnackbar = (severity, message) => {\r\n    setSnackbarSeverity(severity);\r\n    setSnackbarMessage(message);\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const handleToggleStatus = async (companyId) => {\r\n    try {\r\n      const updatedCompany = await toggleCompanyStatus(companyId).unwrap();\r\n      setCompanies((prevCompanies) =>\r\n        prevCompanies.map((company) =>\r\n          company._id === updatedCompany.company._id ? updatedCompany.company : company\r\n        )\r\n      );\r\n      showSnackbar(\r\n        'success',\r\n        `Công ty ${updatedCompany.company.isActive ? 'đã được kích hoạt' : 'đã bị vô hiệu hóa'}.`\r\n      );\r\n    } catch (error) {\r\n      showSnackbar('error', 'Không thể thay đổi trạng thái công ty.');\r\n    }\r\n  };\r\n\r\n  const handleCreateOrUpdateCompany = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const companyData = { name: companyName, address, contactInfo, phoneNumber, email };\r\n\r\n      if (selectedCompanyId) {\r\n        const updatedCompany = await updateCompany({ companyId: selectedCompanyId, updatedData: companyData }).unwrap();\r\n        setCompanies((prevCompanies) =>\r\n          prevCompanies.map((company) =>\r\n            company._id === updatedCompany.company._id ? updatedCompany.company : company\r\n          )\r\n        );\r\n        showSnackbar('success', 'Cập nhật công ty thành công!');\r\n      } else {\r\n        const newCompany = await createCompany(companyData).unwrap();\r\n        setCompanies((prevCompanies) => [...prevCompanies, newCompany.company]);\r\n        showSnackbar('success', 'Tạo công ty thành công!');\r\n      }\r\n\r\n      resetForm();\r\n      setModalVisible(false);\r\n      document.body.style.overflow = 'auto'; // Re-enable scrolling when modal is closed\r\n    } catch (error) {\r\n      showSnackbar('error', 'Không thể thực hiện tác vụ. Vui lòng kiểm tra thông tin và thử lại.');\r\n    }\r\n  };\r\n\r\n  const handleCardClick = (company) => {\r\n    setSelectedCompanyId(company._id);\r\n    setCompanyName(company.name);\r\n    setAddress(company.address);\r\n    setContactInfo(company.contactInfo);\r\n    setPhoneNumber(company.phoneNumber);\r\n    setEmail(company.email);\r\n    setModalVisible(true);\r\n    setShowAddAdmin(true);\r\n    document.body.style.overflow = 'hidden';\r\n  };\r\n\r\n  const handleAddAdmin = async () => {\r\n    if (adminUserName && adminPassword) {\r\n      try {\r\n        await addCompanyAdmin({\r\n          companyId: selectedCompanyId,\r\n          userName: adminUserName,\r\n          password: adminPassword,\r\n          email: adminEmail,         \r\n          phoneNumber: adminPhoneNumber\r\n        }).unwrap();\r\n        showSnackbar('success', 'Thêm admin thành công!');\r\n        resetForm();\r\n      } catch (error) {\r\n        showSnackbar('error', error?.data?.message || 'Không thể thêm admin. Vui lòng kiểm tra thông tin và thử lại.');\r\n      }\r\n    } else {\r\n      showSnackbar('warning', 'Vui lòng nhập tên đăng nhập và mật khẩu.');\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n      setModalVisible(false);\r\n      document.body.style.overflow = 'hidden'; // Re-enable scrolling when modal is closed\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"manage-companies bg-gradient-to-r from-blue-50 to-blue-100 min-h-screen p-8\">\r\n      <h2 className=\"text-3xl font-bold mb-4\">{selectedCompanyId ? 'Cập nhật Công Ty' : 'Tạo Công Ty'}</h2>\r\n      <button\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition duration-300 mb-6\"\r\n        onClick={() => {\r\n          resetForm();\r\n          setModalVisible(true);\r\n          setShowAddAdmin(false);\r\n          document.body.style.overflow = 'hidden'; \r\n        }}\r\n      >\r\n        <i className=\"fas fa-plus\"></i> Thêm công ty\r\n      </button>\r\n\r\n      {/* Modal for creating/updating company */}\r\n      {modalVisible && (\r\n        <div className=\"fixed inset-y-0 right-0 bg-white shadow-lg z-50 w-1/4 overflow-y-auto\" ref={modalRef}>\r\n          <div className=\"p-6 relative\">\r\n            <span\r\n              className=\"absolute top-2 right-4 text-gray-500 cursor-pointer hover:text-gray-700 transition\"\r\n              onClick={() => {\r\n                setModalVisible(false);\r\n                document.body.style.overflow = 'auto'; // Re-enable scrolling when modal is closed\r\n              }}\r\n            >\r\n              &times;\r\n            </span>\r\n            <CompanyForm\r\n              companyName={companyName}\r\n              setCompanyName={setCompanyName}\r\n              address={address}\r\n              setAddress={setAddress}\r\n              contactInfo={contactInfo}\r\n              setContactInfo={setContactInfo}\r\n              phoneNumber={phoneNumber}\r\n              setPhoneNumber={setPhoneNumber}\r\n              email={email}\r\n              setEmail={setEmail}\r\n              handleCreateOrUpdateCompany={handleCreateOrUpdateCompany}\r\n              creating={isCreating}\r\n              selectedCompanyId={selectedCompanyId}\r\n            />\r\n            {showAddAdmin && (\r\n              <div className=\"mt-8\">\r\n                <h4 className=\"text-lg font-semibold mb-4\">Thêm Admin cho Công Ty</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={adminUserName}\r\n                  onChange={(e) => setAdminUserName(e.target.value)}\r\n                  placeholder=\"Tên Đăng Nhập của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  value={adminPassword}\r\n                  onChange={(e) => setAdminPassword(e.target.value)}\r\n                  placeholder=\"Mật khẩu của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n                 <input\r\n                  type=\"email\"\r\n                  value={adminEmail}\r\n                  onChange={(e) => setAdminEmail(e.target.value)}\r\n                  placeholder=\"Email của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n\r\n                  <input\r\n                  type=\"text\"\r\n                  value={adminPhoneNumber}\r\n                  onChange={(e) => setAdminPhoneNumber(e.target.value)}  \r\n                  placeholder=\"Số điện thoại của admin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md mb-4\"\r\n                />\r\n                <button\r\n                  onClick={handleAddAdmin}\r\n                  disabled={isAddingAdmin}\r\n                  className=\"bg-green-500 text-white w-full py-2 rounded-lg hover:bg-green-600 transition duration-300\"\r\n                >\r\n                  {isAddingAdmin ? 'Đang thêm...' : 'Thêm Admin'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <h3 className=\"text-xl font-semibold mt-8 mb-4\">Danh sách các công ty</h3>\r\n      <div className=\"company-cards grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {isCompaniesLoading ? (\r\n          <p>Đang tải...</p>\r\n        ) : (\r\n          companies.map((company) => (\r\n            <CompanyCard\r\n              key={company._id}\r\n              company={company}\r\n              onClick={() => handleCardClick(company)}\r\n              onToggleStatus={handleToggleStatus}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {companiesError && <p className=\"text-red-500 mt-4\">{companiesError}</p>}\r\n      <SnackbarNotification\r\n        open={snackbarOpen}\r\n        onClose={() => setSnackbarOpen(false)}\r\n        severity={snackbarSeverity}\r\n        message={snackbarMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageCompanies;\r\n","import React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Slide from '@mui/material/Slide';\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Notification = ({ open, onClose, severity, message, autoHideDuration = 3000, TransitionComponent = Slide }) => {\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={autoHideDuration}\r\n      onClose={onClose}\r\n      TransitionComponent={TransitionComponent}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }} \r\n    >\r\n      <Alert onClose={onClose} severity={severity} sx={{ width: '100%' }}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\nexport default Notification;\r\n"],"names":["_ref","companyName","setCompanyName","address","setAddress","contactInfo","setContactInfo","phoneNumber","setPhoneNumber","email","setEmail","isActive","setIsActive","handleCreateOrUpdateCompany","creating","selectedCompanyId","_jsx","className","children","_jsxs","onSubmit","type","value","onChange","e","target","required","placeholder","checked","disabled","open","onClose","severity","message","Notification","company","onClick","onToggleStatus","name","_id","ManageCompanies","useState","setSelectedCompanyId","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","modalVisible","setModalVisible","adminUserName","setAdminUserName","adminPassword","setAdminPassword","adminPhoneNumber","setAdminPhoneNumber","adminEmail","setAdminEmail","showAddAdmin","setShowAddAdmin","data","companiesData","isLoading","isCompaniesLoading","error","companiesError","useGetCompaniesQuery","createCompany","isCreating","useCreateCompanyMutation","updateCompany","useUpdateCompanyMutation","toggleCompanyStatus","useToggleCompanyStatusMutation","addCompanyAdmin","isAddingAdmin","useAddCompanyAdminMutation","companies","setCompanies","useEffect","modalRef","useRef","resetForm","showSnackbar","handleToggleStatus","async","updatedCompany","companyId","unwrap","prevCompanies","map","handleClickOutside","event","current","contains","document","body","style","overflow","addEventListener","removeEventListener","ref","CompanyForm","preventDefault","companyData","updatedData","newCompany","userName","password","_error$data","CompanyCard","handleCardClick","SnackbarNotification","Alert","React","props","MuiAlert","elevation","variant","autoHideDuration","TransitionComponent","Slide","Snackbar","anchorOrigin","vertical","horizontal","sx","width"],"sourceRoot":""}