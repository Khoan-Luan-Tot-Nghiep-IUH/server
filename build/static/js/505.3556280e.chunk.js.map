{"version":3,"file":"static/js/505.3556280e.chunk.js","mappings":"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","sources":["components/home/components/SearchResult/Trip/TripDetails.js","components/home/components/SearchResult/Trip/SeatSelection.js","components/home/components/SearchResult/Trip/TripCard.js","components/home/components/SearchResult/SearchResults.js","utils/formatUtils.js"],"sourcesContent":["import React from 'react';\r\nimport { formatCurrency } from 'utils/formatUtils';\r\n\r\nconst TripDetails = ({ trip, onToggle, isOpen, loading }) => {\r\n  return (\r\n    <div className=\"bg-white shadow-lg rounded-lg p-4 mb-4\">\r\n      {/* Thời gian và địa điểm khởi hành - đến */}\r\n      <div className=\"flex justify-between items-center border-b pb-3\">\r\n        <div className=\"flex flex-col items-start text-left\">\r\n          <p className=\"text-lg font-semibold text-gray-800\">\r\n            {new Date(trip.departureTime).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n          </p>\r\n          <p className=\"text-xl text-gray-600\">{trip.departureLocation.name}</p>\r\n        </div>\r\n\r\n        <div className=\"text-center text-gray-500 text-sm\">\r\n          <p>{Math.round((new Date(trip.arrivalTime) - new Date(trip.departureTime)) / 3600000)} giờ</p>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col items-end text-right\">\r\n          <p className=\"text-lg font-semibold text-gray-800\">\r\n            {new Date(trip.arrivalTime).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n          </p>\r\n          <p className=\"text-xl text-gray-600\">{trip.arrivalLocation.name}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Thông tin hình ảnh, loại xe và số ghế trống */}\r\n      <div className=\"flex justify-between items-center mt-3\">\r\n        {/* Hình ảnh xe, ẩn trên màn hình nhỏ */}\r\n        <div className=\"relative flex-shrink-0 hidden sm:block w-24 h-24 rounded-lg overflow-hidden\">\r\n          <img\r\n            src={trip.busType.image || \"https://static.vexere.com/production/images/1702527338553.jpeg\"}\r\n            alt=\"Bus\"\r\n            className=\"w-full h-full object-cover\"\r\n          />\r\n          <div className=\"absolute top-1 left-1 bg-green-500 text-white text-xs px-2 py-1 rounded\">\r\n            Xác nhận ngay\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col items-start sm:ml-4 flex-1\">\r\n          <h3 className=\"font-semibold text-lg sm:text-base\">{trip.busType.name}</h3>\r\n          <p className=\"mt-2 text-green-600\">{trip.availableSeats} ghế còn trống</p>\r\n        </div>\r\n\r\n        {/* Giá vé */}\r\n        <div className=\"text-right\">\r\n          <p className=\"text-xl font-bold text-blue-600\">\r\n            {formatCurrency(trip.basePrice)} VND\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Nút chọn chuyến */}\r\n      <div className=\"flex justify-between items-center mt-4\">\r\n        <button\r\n          onClick={onToggle}\r\n          className=\"w-full sm:w-auto bg-yellow-500 text-white px-4 py-2 rounded-lg hover:bg-yellow-600 transition duration-300\"\r\n          disabled={loading}\r\n        >\r\n          {isOpen ? 'Ẩn chi tiết' : 'Chọn chuyến'}\r\n        </button>\r\n        <p className=\"text-xs text-gray-500 mt-2 sm:mt-0 pl-3\">KHÔNG YÊU CẦU THANH TOÁN TRƯỚC</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TripDetails;\r\n","import React from 'react';\r\nimport { Transition } from '@headlessui/react';\r\nimport { Clock } from 'lucide-react';\r\nimport { formatCurrency } from 'utils/formatUtils';\r\n\r\nconst SeatSelection = ({\r\n  seatsData,\r\n  isLoadingSeats,\r\n  handleSeatSelect,\r\n  selectedSeats,\r\n  lockTimers,\r\n  loading,\r\n  totalPrice,\r\n  handleContinue,\r\n  error,\r\n  userId,\r\n}) => {\r\n  const getSeatStyle = (seat) => {\r\n    if (selectedSeats.includes(seat.seatNumber)) {\r\n      return 'bg-green-500 text-white'; // Ghế đã chọn\r\n    }\r\n    if (seat.lockedBy && seat.lockedBy !== userId) {\r\n      return 'bg-orange-500 text-white'; // Tạm thời giữ bởi người dùng khác\r\n    }\r\n    if (seat.seatNumber === 1) {\r\n      return 'bg-gray-500 text-white cursor-not-allowed'; // Ghế không khả dụng\r\n    }\r\n    if ([2, 3, 4, 5, 6].includes(seat.seatNumber)) {\r\n      return 'bg-yellow-500 text-white'; // Ghế VIP\r\n    }\r\n    if (!seat.isAvailable) {\r\n      return 'bg-red-500 text-white'; // Ghế đã được đặt\r\n    }\r\n    return 'bg-green-100 border-2 border-green-500'; // Ghế có sẵn\r\n  };\r\n\r\n  const renderSeats = (seats, floorLabel) => (\r\n    <div className=\"mb-4\">\r\n      <h4 className=\"font-semibold text-center mb-3 text-gray-700\">{floorLabel}</h4>\r\n      <div className=\"grid grid-cols-5 gap-3\">\r\n        {seats.map((seat) => (\r\n          <button\r\n            key={seat._id}\r\n            onClick={() => handleSeatSelect(seat.seatNumber)}\r\n            disabled={loading}\r\n            className={`w-12 h-12 rounded-lg text-center text-sm font-semibold \r\n              cursor-pointer ${getSeatStyle(seat)}`}\r\n          >\r\n            {seat.seatNumber}\r\n            {lockTimers[seat.seatNumber] && (\r\n              <Clock className=\"absolute -top-1 -right-1 h-4 w-4\" />\r\n            )}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Transition\r\n      show\r\n      enter=\"transition-opacity duration-300\"\r\n      enterFrom=\"opacity-0\"\r\n      enterTo=\"opacity-100\"\r\n      leave=\"transition-opacity duration-300\"\r\n      leaveFrom=\"opacity-100\"\r\n      leaveTo=\"opacity-0\"\r\n    >\r\n      <div className=\"border-t mt-4 pt-4 space-y-6\">\r\n        {/* Chú thích: dàn hàng ngang với flex-wrap */}\r\n        <div className=\"flex flex-row flex-wrap justify-around space-x-4 mb-4 text-sm text-gray-700\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <div className=\"w-4 h-4 bg-gray-500 mr-2 rounded\"></div>\r\n            Ghế không khả dụng\r\n          </div>\r\n          <div className=\"flex items-center mb-2\">\r\n            <div className=\"w-4 h-4 bg-yellow-500 mr-2 rounded\"></div>\r\n            Ghế VIP\r\n          </div>\r\n          <div className=\"flex items-center mb-2\">\r\n            <div className=\"w-4 h-4 bg-green-500 mr-2 rounded\"></div>\r\n            Đã chọn\r\n          </div>\r\n          <div className=\"flex items-center mb-2\">\r\n            <div className=\"w-4 h-4 bg-orange-500 mr-2 rounded\"></div>\r\n            Tạm thời giữ\r\n          </div>\r\n          <div className=\"flex items-center mb-2\">\r\n            <div className=\"w-4 h-4 border border-green-500 bg-green-100 mr-2 rounded\"></div>\r\n            Có sẵn\r\n          </div>\r\n          <div className=\"flex items-center mb-2\">\r\n            <div className=\"w-4 h-4 bg-red-500 mr-2 rounded\"></div>\r\n            Đã đặt\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bản đồ ghế cho từng tầng */}\r\n        <div className=\"flex w-full\">\r\n          {/* Tầng Dưới */}\r\n          <div className={`w-full ${seatsData.upper ? 'md:w-1/2' : ''} pr-4`}>\r\n            {renderSeats(seatsData.lower, \"Tầng Dưới\")}\r\n          </div>\r\n          {/* Tầng Trên chỉ hiển thị khi có dữ liệu */}\r\n          {seatsData.upper && (\r\n            <div className=\"w-full md:w-1/2 pl-4\">\r\n              {renderSeats(seatsData.upper, \"Tầng Trên\")}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Tổng giá và nút tiếp tục */}\r\n        <div className=\"mt-6 flex justify-between items-center border-t pt-4\">\r\n          <div className=\"text-sm text-gray-700\">\r\n            Ghế đã chọn: <span className=\"font-medium\">{selectedSeats.join(', ')}</span>\r\n          </div>\r\n          <div className=\"text-lg font-semibold text-gray-900\">\r\n            Tổng: {formatCurrency(totalPrice)} VND\r\n          </div>\r\n          <button \r\n            onClick={handleContinue}\r\n            disabled={selectedSeats.length === 0 || loading}\r\n            className={`px-6 py-2 rounded-lg text-white transition duration-300\r\n              ${selectedSeats.length === 0 || loading\r\n                ? 'bg-gray-400 cursor-not-allowed'\r\n                : 'bg-blue-600 hover:bg-blue-700'\r\n              }`}\r\n          >\r\n            Tiếp tục\r\n          </button>\r\n        </div>\r\n        {error && <p className=\"text-red-500 mt-2\">{error}</p>}\r\n      </div>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default SeatSelection;\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport TripDetails from './TripDetails';\r\nimport SeatSelection from './SeatSelection';\r\nimport { useGetSeatsByTripIdQuery } from '../../../../../Redux/Trip/TripApiSlice';\r\n\r\nconst TripCard = ({ trip, isOpen, onToggle }) => {\r\n  const navigate = useNavigate();\r\n  const socketRef = useRef(null);\r\n  const userInfo = useSelector((state) => state.user.userInfo);\r\n  const userId = userInfo?.id;\r\n\r\n  const [selectedSeats, setSelectedSeats] = useState([]);\r\n  const [seatsData, setSeatsData] = useState({ lower: [], upper: [] }); \r\n  const [lockTimers, setLockTimers] = useState({});\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { data: initialSeatsData, isLoading: isLoadingSeats } = useGetSeatsByTripIdQuery(trip._id, {\r\n    skip: !isOpen,\r\n  });\r\n\r\n  const setupSocket = useCallback(() => {\r\n    try {\r\n      socketRef.current = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\r\n        reconnection: true,\r\n        reconnectionAttempts: 5,\r\n        reconnectionDelay: 1000,\r\n      });\r\n\r\n      socketRef.current.on('connect', () => {\r\n        console.log('Connected to socket server');\r\n        if (isOpen && trip._id) {\r\n          socketRef.current.emit('joinTrip', trip._id);\r\n          console.log(`Joining trip room: ${trip._id}`);\r\n        }\r\n      });\r\n\r\n      socketRef.current.on('connect_error', (error) => {\r\n        console.error('Socket connection error:', error);\r\n        setError('Unable to connect to booking service. Please try again later.');\r\n      });\r\n\r\n      return () => {\r\n        if (socketRef.current) {\r\n          socketRef.current.disconnect();\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Socket setup error:', error);\r\n      setError('Unable to initialize booking service. Please try again later.');\r\n    }\r\n  }, [trip._id, isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (initialSeatsData) {\r\n      setSeatsData(initialSeatsData.data);\r\n      setError(null);\r\n    }\r\n  }, [initialSeatsData]);\r\n\r\n  useEffect(() => {\r\n    if (!socketRef.current) {\r\n      setupSocket();\r\n    }\r\n\r\n    const socket = socketRef.current;\r\n\r\n    const handleSeatLocked = ({ seatNumber, lockedBy, lockExpiration }) => {\r\n      setSeatsData((prevSeats) => ({\r\n        lower: prevSeats.lower.map((seat) =>\r\n          seat.seatNumber === seatNumber\r\n            ? { ...seat, isAvailable: false, lockedBy, lockExpiration }\r\n            : seat\r\n        ),\r\n        upper: prevSeats.upper.map((seat) =>\r\n          seat.seatNumber === seatNumber\r\n            ? { ...seat, isAvailable: false, lockedBy, lockExpiration }\r\n            : seat\r\n        ),\r\n      }));\r\n    };\r\n\r\n    const handleSeatReleased = ({ seatNumber }) => {\r\n      setSeatsData((prevSeats) => ({\r\n        lower: prevSeats.lower.map((seat) =>\r\n          seat.seatNumber === seatNumber\r\n            ? { ...seat, isAvailable: true, lockedBy: null }\r\n            : seat\r\n        ),\r\n        upper: prevSeats.upper.map((seat) =>\r\n          seat.seatNumber === seatNumber\r\n            ? { ...seat, isAvailable: true, lockedBy: null }\r\n            : seat\r\n        ),\r\n      }));\r\n    \r\n      if (lockTimers[seatNumber]) {\r\n        clearTimeout(lockTimers[seatNumber]);\r\n        setLockTimers((prev) => {\r\n          const newTimers = { ...prev };\r\n          delete newTimers[seatNumber];\r\n          return newTimers;\r\n        });\r\n      }\r\n    };\r\n\r\n    const handleError = ({ type, message }) => {\r\n      setError(message);\r\n      setLoading(false);\r\n\r\n      if (type === 'RESERVE_ERROR') {\r\n        setSelectedSeats((prev) => prev.filter((seat) => !seat.includes(message.seatNumber)));\r\n      }\r\n    };\r\n\r\n    socket.on('seatLocked', handleSeatLocked);\r\n    socket.on('seatReleased', handleSeatReleased);\r\n    socket.on('error', handleError);\r\n    socket.on('seatUnavailable', ({ seatNumber }) => {\r\n      setError(`Ghế số ${seatNumber} không khả dụng`);\r\n      setSelectedSeats((prev) => prev.filter((s) => s !== seatNumber));\r\n    });\r\n\r\n    return () => {\r\n      socket.off('seatLocked', handleSeatLocked);\r\n      socket.off('seatReleased', handleSeatReleased);\r\n      socket.off('error', handleError);\r\n      socket.off('seatUnavailable');\r\n      Object.values(lockTimers).forEach(clearTimeout);\r\n    };\r\n  }, [userId, trip._id, setupSocket, lockTimers]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      if (trip._id) {\r\n        socketRef.current.emit('joinTrip', trip._id);\r\n      }\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleSeatSelect = useCallback(\r\n    async (seatNumber) => {\r\n        if (!userId) {\r\n            setError('Please log in to select seats');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            console.log(\"Selected seat number:\", seatNumber);\r\n            \r\n            // Nếu ghế đã được chọn, người dùng muốn bỏ chọn\r\n            if (selectedSeats.includes(seatNumber)) {\r\n                const seat = [...seatsData.lower, ...seatsData.upper].find((seat) => seat.seatNumber === seatNumber);\r\n                if (!seat.isAvailable && seat.lockedBy && seat.lockedBy !== userId) {\r\n                    setError(`Seat ${seatNumber} is temporarily reserved by another user`);\r\n                    return;\r\n                }\r\n                console.log(\"Releasing seat:\", seatNumber);\r\n                socketRef.current.emit('releaseSeat', { tripId: trip._id, seatNumber, userId });\r\n                setSelectedSeats((prev) => prev.filter((s) => s !== seatNumber));\r\n            } else {\r\n                // Chọn ghế nếu chưa chọn\r\n                console.log(\"Reserving seat:\", seatNumber);\r\n                socketRef.current.emit('reserveSeat', { tripId: trip._id, seatNumber, userId });\r\n                setSelectedSeats((prev) => [...prev, seatNumber]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error in seat selection:\", error);\r\n            setError('Failed to process seat selection. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    },\r\n    [trip._id, userId, seatsData, selectedSeats]\r\n);\r\n\r\n\r\n  const handleContinue = useCallback(() => {\r\n    if (selectedSeats.length === 0) {\r\n      setError('Please select at least one seat to continue');\r\n      return;\r\n    }\r\n\r\n    navigate('/bookingconfirmation', {\r\n      state: {\r\n        selectedSeats,\r\n        totalPrice: selectedSeats.length * trip.basePrice,\r\n        trip,\r\n      },\r\n    });\r\n  }, [navigate, selectedSeats, trip]);\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-lg mb-6 p-4 hover:shadow-xl transition-shadow duration-300\">\r\n      <TripDetails trip={trip} onToggle={onToggle} isOpen={isOpen} loading={loading} />\r\n      {isOpen && (\r\n        <SeatSelection\r\n          seatsData={seatsData}\r\n          isLoadingSeats={isLoadingSeats}\r\n          handleSeatSelect={handleSeatSelect}\r\n          selectedSeats={selectedSeats}\r\n          lockTimers={lockTimers}\r\n          loading={loading}\r\n          totalPrice={selectedSeats.length * trip.basePrice}\r\n          handleContinue={handleContinue}\r\n          error={error}\r\n          userId={userId}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TripCard;\r\n","  import React, { useEffect, useState } from 'react';\r\n  import { useLocation } from 'react-router-dom';\r\n  import { useSearchTripQuery } from '../../../../Redux/Trip/TripApiSlice';\r\n  import TripCard from '../SearchResult/Trip/TripCard';\r\n  import SkeletonLoader from '../../../shared/Loader/Loader';\r\n\r\n  const SearchResults = ({ filters = {} }) => {\r\n    const location = useLocation();\r\n\r\n    // Lấy các giá trị params từ URL thay vì sử dụng state\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const departureLocation = searchParams.get('departureLocation');\r\n    const arrivalLocation = searchParams.get('arrivalLocation');\r\n    const departureDate = searchParams.get('departureDate');\r\n    const returnDate = searchParams.get('returnDate');\r\n    const ticketCount = searchParams.get('ticketCount');\r\n\r\n    const [filteredTrips, setFilteredTrips] = useState([]);\r\n    const [allTrips, setAllTrips] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedSeats, setSelectedSeats] = useState([]);\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n    const [tripDetails, setTripDetails] = useState(null);\r\n\r\n    // Gọi API để tìm kiếm chuyến xe, mặc định gọi API không điều kiện\r\n    const { data: trips, error, isLoading } = useSearchTripQuery({\r\n      departureLocation,\r\n      arrivalLocation,\r\n      departureDate,\r\n      returnDate,\r\n      ticketCount,\r\n    });\r\n\r\n    // Cập nhật dữ liệu khi nhận được từ API\r\n    useEffect(() => {\r\n      if (trips?.data?.departureTrips) {\r\n        setAllTrips(trips.data.departureTrips);\r\n        setFilteredTrips(trips.data.departureTrips);\r\n      }\r\n    }, [trips]);\r\n\r\n    // Áp dụng bộ lọc và cập nhật danh sách chuyến xe\r\n    useEffect(() => {\r\n      setLoading(true);\r\n\r\n      const delayDebounceFn = setTimeout(() => {\r\n        const applyFilters = () => {\r\n          let filtered = [...allTrips];\r\n\r\n          if (filters.priceRange === 'low') {\r\n            filtered = filtered.filter(trip => trip.basePrice < 200000);\r\n          } else if (filters.priceRange === 'medium') {\r\n            filtered = filtered.filter(trip => trip.basePrice >= 200000 && trip.basePrice <= 500000);\r\n          } else if (filters.priceRange === 'high') {\r\n            filtered = filtered.filter(trip => trip.basePrice > 500000);\r\n          }\r\n\r\n          if (filters.busOperator) {\r\n            filtered = filtered.filter(trip => trip.busType?.name === filters.busOperator);\r\n          }\r\n\r\n          if (filters.departureTimeRange === 'morning') {\r\n            filtered = filtered.filter(trip => {\r\n              const hour = new Date(trip.departureTime).getHours();\r\n              return hour >= 6 && hour < 12;\r\n            });\r\n          } else if (filters.departureTimeRange === 'afternoon') {\r\n            filtered = filtered.filter(trip => {\r\n              const hour = new Date(trip.departureTime).getHours();\r\n              return hour >= 12 && hour < 18;\r\n            });\r\n          }\r\n\r\n          // Sort trips\r\n          if (filters.sort === 'priceAsc') {\r\n            filtered.sort((a, b) => a.basePrice - b.basePrice);\r\n          } else if (filters.sort === 'priceDesc') {\r\n            filtered.sort((a, b) => b.basePrice - a.basePrice);\r\n          } else if (filters.sort === 'earliest') {\r\n            filtered.sort((a, b) => new Date(a.departureTime) - new Date(b.departureTime));\r\n          } else if (filters.sort === 'latest') {\r\n            filtered.sort((a, b) => new Date(b.departureTime) - new Date(a.departureTime));\r\n          }\r\n\r\n          setFilteredTrips(filtered);\r\n          setLoading(false);\r\n        };\r\n\r\n        applyFilters();\r\n      }, 500);\r\n\r\n      return () => clearTimeout(delayDebounceFn);\r\n    }, [filters, allTrips]);\r\n\r\n    // Đặt tất cả hooks trước khi kiểm tra điều kiện\r\n\r\n    // Nếu thiếu params, hiển thị thông báo sau khi hooks đã được gọi\r\n    if (!departureLocation || !arrivalLocation || !departureDate) {\r\n      return <div>Thiếu thông tin tìm kiếm. Vui lòng thử lại.</div>;\r\n    }\r\n\r\n    // Hiển thị loader nếu đang tải dữ liệu\r\n    if (loading || isLoading) {\r\n      return (\r\n        <div className=\"container mx-auto py-8\">\r\n          <SkeletonLoader />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Xử lý lỗi từ API\r\n    if (error) {\r\n      return <div>Không tìm thấy chuyến xe. Lỗi: {error.message}</div>;\r\n    }\r\n\r\n    // Xử lý trường hợp không có kết quả phù hợp với bộ lọc\r\n    if (filteredTrips.length === 0) {\r\n      return <div>Không tìm thấy chuyến xe nào phù hợp với yêu cầu tìm kiếm của bạn.</div>;\r\n    }\r\n\r\n    // Hàm để xử lý khi người dùng chọn ghế và tiếp tục\r\n    const handleContinue = (seats, price, trip) => {\r\n      setSelectedSeats(seats);\r\n      setTotalPrice(price);\r\n      setTripDetails(trip);\r\n    };\r\n\r\n    return (\r\n      <div className=\"container mx-auto py-8\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Kết quả tìm kiếm chuyến xe</h2>\r\n        <div className=\"space-y-4\">\r\n          {filteredTrips.map((trip) => (\r\n            <TripCard \r\n              key={trip._id} \r\n              trip={trip} \r\n              isOpen={trip._id === tripDetails?._id} \r\n              onToggle={() => {\r\n                setTripDetails(tripDetails?._id === trip._id ? null : trip); \r\n              }} \r\n              onContinue={handleContinue}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default SearchResults;\r\n","import moment from 'moment-timezone';\r\n\r\nconst VN_TIMEZONE = 'Asia/Ho_Chi_Minh';\r\n\r\nexport const timeUtils = {\r\n  parseUTCTimeForForm: (utcTimeString) => {\r\n    if (!utcTimeString) return new Date();\r\n    return new Date(utcTimeString);\r\n  },\r\n\r\n  formatTimeForServer: (localDate) => {\r\n    if (!localDate) return null;\r\n    return moment(localDate).utc().format();\r\n  },\r\n\r\n  formatDisplayTime: (utcTimeString) => {\r\n    if (!utcTimeString) return '';\r\n    return moment(utcTimeString).tz(VN_TIMEZONE).format('DD/MM/YYYY HH:mm');\r\n  }\r\n};\r\nexport const formatCurrency = (value) => {\r\n  if (!value) return '0 VND';\r\n  return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(value);\r\n};\r\n"],"names":["_ref","trip","onToggle","isOpen","loading","_jsxs","className","children","_jsx","Date","departureTime","toLocaleTimeString","hour","minute","departureLocation","name","Math","round","arrivalTime","arrivalLocation","src","busType","image","alt","availableSeats","formatCurrency","basePrice","onClick","disabled","seatsData","isLoadingSeats","handleSeatSelect","selectedSeats","lockTimers","totalPrice","handleContinue","error","userId","getSeatStyle","seat","includes","seatNumber","lockedBy","isAvailable","renderSeats","seats","floorLabel","map","Clock","_id","Transition","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","upper","lower","join","length","navigate","useNavigate","socketRef","useRef","userInfo","useSelector","state","user","id","setSelectedSeats","useState","setSeatsData","setLockTimers","setError","setLoading","data","initialSeatsData","isLoading","useGetSeatsByTripIdQuery","skip","setupSocket","useCallback","current","io","process","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","emit","disconnect","useEffect","socket","handleSeatLocked","_ref2","lockExpiration","prevSeats","handleSeatReleased","_ref3","clearTimeout","prev","newTimers","handleError","_ref4","type","message","filter","_ref5","s","off","Object","values","forEach","async","find","tripId","TripDetails","SeatSelection","filters","location","useLocation","searchParams","URLSearchParams","search","get","departureDate","returnDate","ticketCount","filteredTrips","setFilteredTrips","allTrips","setAllTrips","setTotalPrice","tripDetails","setTripDetails","trips","useSearchTripQuery","_trips$data","departureTrips","delayDebounceFn","setTimeout","applyFilters","filtered","priceRange","busOperator","_trip$busType","departureTimeRange","getHours","sort","a","b","SkeletonLoader","price","TripCard","onContinue","timeUtils","parseUTCTimeForForm","utcTimeString","formatTimeForServer","localDate","moment","utc","format","formatDisplayTime","tz","value","Intl","NumberFormat","style","currency"],"sourceRoot":""}