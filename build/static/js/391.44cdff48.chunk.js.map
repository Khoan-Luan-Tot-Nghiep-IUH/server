{"version":3,"file":"static/js/391.44cdff48.chunk.js","mappings":"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","sources":["components/CompanyAdmin/components/Revenue/CompletedTripsChart.js","components/CompanyAdmin/components/Revenue/RevenueChart.js","components/CompanyAdmin/components/Revenue/UserGrowthChart.js","components/CompanyAdmin/pages/Dashboard.js"],"sourcesContent":["import React from 'react';\r\nimport { useGetCompletedTripsByMonthQuery } from '../../../../Redux/Company/companyApiSlice';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Legend,\r\n  LabelList,\r\n  defs,\r\n  linearGradient,\r\n  stop,\r\n} from 'recharts';\r\nimport { Spin, Alert } from 'antd';\r\n\r\nconst CompletedTripsChart = () => {\r\n  const { data: responseData, error, isLoading } = useGetCompletedTripsByMonthQuery();\r\n\r\n  if (isLoading) return <Spin tip=\"Đang tải biểu đồ...\" />;\r\n  if (error) return <Alert message=\"Lỗi khi tải dữ liệu\" type=\"error\" showIcon />;\r\n\r\n  // Chuyển đổi dữ liệu thành dạng phù hợp cho biểu đồ\r\n  const chartData = responseData?.data?.map((trips, index) => ({\r\n    month: new Date(0, index).toLocaleString('vi', { month: 'short' }), // Chuyển index thành tên tháng viết tắt\r\n    completedTrips: trips, // Số chuyến đi hoàn thành trong mỗi tháng\r\n  }));\r\n\r\n  return (\r\n    <div\r\n      className=\"chart-container\"\r\n      style={{\r\n        padding: '20px',\r\n        background: '#fff',\r\n        borderRadius: '8px',\r\n        boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\r\n      }}\r\n    >\r\n      <h3 style={{ textAlign: 'center', fontSize: '20px', marginBottom: '20px', color: '#333' }}>\r\n        Số Chuyến Đi Hoàn Thành Theo Tháng\r\n      </h3>\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <BarChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 10 }}>\r\n          {/* Gradient màu cho cột biểu đồ */}\r\n          <defs>\r\n            <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop offset=\"5%\" stopColor=\"#4f85f1\" stopOpacity={0.9} />\r\n              <stop offset=\"95%\" stopColor=\"#4f85f1\" stopOpacity={0.5} />\r\n            </linearGradient>\r\n          </defs>\r\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\" />\r\n          <XAxis dataKey=\"month\" tick={{ fontSize: 14 }} />\r\n          <YAxis\r\n            tick={{ fontSize: 14 }}\r\n            label={{\r\n              value: 'Số chuyến đi hoàn thành',\r\n              angle: -90,\r\n              position: 'insideLeft',\r\n              \r\n              fontSize: 14,\r\n              color: '#333',\r\n            }}\r\n            allowDecimals={false}\r\n            domain={[0, 'dataMax']}\r\n          />\r\n          <Tooltip\r\n            contentStyle={{\r\n              backgroundColor: '#555',\r\n              color: '#fff',\r\n              borderRadius: '5px',\r\n              border: 'none',\r\n              fontSize: 14,\r\n            }}\r\n            labelStyle={{ color: '#fff', fontWeight: 'bold' }}\r\n            formatter={(value) => `${value} chuyến`}\r\n            labelFormatter={(label) => ` ${label}   `}\r\n          />\r\n          <Legend verticalAlign=\"top\" height={36} formatter={() => 'Số chuyến đi'} />\r\n          <Bar dataKey=\"completedTrips\" fill=\"url(#colorUv)\" radius={[4, 4, 0, 0]} barSize={40}>\r\n            <LabelList dataKey=\"completedTrips\" position=\"top\" style={{ fontSize: 12, fill: '#333', fontWeight: 'bold' }} />\r\n          </Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompletedTripsChart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useGetRevenueByPaymentMethodQuery, useGetRevenueByTimeRangeQuery } from '../../../../Redux/Company/companyApiSlice';\r\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer, Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid } from 'recharts';\r\nimport { Spin, Alert, Typography, Select, DatePicker, Space, Card, Row, Col } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\nconst COLORS = ['#4f85f1', '#82ca9d'];\r\n\r\nconst RevenueChart = () => {\r\n  const currentYear = moment().year();\r\n  const currentMonth = moment().month() + 1;\r\n  const [timeFrame, setTimeFrame] = useState('month');\r\n  const [selectedDate, setSelectedDate] = useState({\r\n    day: moment().format('YYYY-MM-DD'),\r\n    month: currentMonth,\r\n    year: currentYear,\r\n  });\r\n\r\n  const [dates, setDates] = useState({\r\n    startDate: moment().startOf('month').format('YYYY-MM-DD'),\r\n    endDate: moment().endOf('month').format('YYYY-MM-DD'),\r\n  });\r\n\r\n  useEffect(() => {\r\n    let startDate, endDate;\r\n\r\n    if (timeFrame === 'day') {\r\n      startDate = selectedDate.day;\r\n      endDate = selectedDate.day;\r\n    } else if (timeFrame === 'month') {\r\n      startDate = moment()\r\n        .year(selectedDate.year)\r\n        .month(selectedDate.month - 1)\r\n        .startOf('month')\r\n        .format('YYYY-MM-DD');\r\n      endDate = moment()\r\n        .year(selectedDate.year)\r\n        .month(selectedDate.month - 1)\r\n        .endOf('month')\r\n        .format('YYYY-MM-DD');\r\n    } else if (timeFrame === 'year') {\r\n      startDate = moment().year(selectedDate.year).startOf('year').format('YYYY-MM-DD');\r\n      endDate = moment().year(selectedDate.year).endOf('year').format('YYYY-MM-DD');\r\n    }\r\n\r\n    setDates({ startDate, endDate });\r\n  }, [timeFrame, selectedDate]);\r\n\r\n  const handleDateChange = (type, value) => {\r\n    if (type === 'day') {\r\n      setSelectedDate((prev) => ({\r\n        ...prev,\r\n        day: value ? value.format('YYYY-MM-DD') : prev.day,\r\n      }));\r\n    } else if (type === 'month') {\r\n      setSelectedDate((prev) => ({\r\n        ...prev,\r\n        month: value,\r\n        day: moment(`${prev.year}-${value}-01`).format('YYYY-MM-DD'),\r\n      }));\r\n    } else if (type === 'year') {\r\n      setSelectedDate((prev) => ({\r\n        ...prev,\r\n        year: value,\r\n        day: moment(`${value}-${prev.month}-01`).format('YYYY-MM-DD'),\r\n      }));\r\n    }\r\n  };\r\n\r\n  const { data: revenueData, isLoading: loadingRevenue, error: errorRevenue } = useGetRevenueByPaymentMethodQuery();\r\n  const { data: timeRevenueData, isLoading: loadingTimeRevenue, error: errorTimeRevenue } = useGetRevenueByTimeRangeQuery({\r\n    startDate: dates.startDate,\r\n    endDate: dates.endDate,\r\n    timeFrame,\r\n  });\r\n\r\n  const totalRevenue = revenueData?.data?.reduce((sum, item) => sum + item.revenue, 0) || 0;\r\n  const paymentMethodData = revenueData?.data?.map((item) => ({\r\n    name: item.method === 'OnBoard' ? 'Thanh toán trực tiếp' : 'Thanh toán trực tuyến',\r\n    value: item.revenue,\r\n  }));\r\n\r\n  const timeRevenueChartData = timeRevenueData?.data?.map((item) => ({\r\n    period: item.date,\r\n    revenue: item.revenue,\r\n  }));\r\n\r\n  if (loadingRevenue || loadingTimeRevenue) return <Spin tip=\"Đang tải dữ liệu biểu đồ doanh thu...\" />;\r\n  if (errorRevenue || errorTimeRevenue) return <Alert message=\"Lỗi khi tải dữ liệu doanh thu\" type=\"error\" showIcon />;\r\n\r\n  return (\r\n    <Card style={{ borderRadius: '10px', padding: '20px' }}>\r\n      <Title level={4} style={{ textAlign: 'center', marginBottom: '20px' }}>Báo Cáo Doanh Thu</Title>\r\n      \r\n      <Row gutter={16}>\r\n        <Col span={12}>\r\n          <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n            <Text strong>Chọn Thời Gian</Text>\r\n            <Select\r\n              defaultValue=\"month\"\r\n              style={{ width: '100%' }}\r\n              onChange={(value) => setTimeFrame(value)}\r\n            >\r\n              <Option value=\"day\">Theo ngày</Option>\r\n              <Option value=\"month\">Theo tháng</Option>\r\n              <Option value=\"year\">Theo năm</Option>\r\n            </Select>\r\n\r\n            {timeFrame === 'day' && (\r\n              <DatePicker\r\n                style={{ width: '100%' }}\r\n                onChange={(date) => handleDateChange('day', date)}\r\n                value={moment(selectedDate.day)}\r\n                format=\"YYYY-MM-DD\"\r\n                disabledDate={(current) => current && current > moment().endOf('day')}\r\n              />\r\n            )}\r\n\r\n            {timeFrame === 'month' && (\r\n              <Space>\r\n                <Select\r\n                  style={{ width: '100%' }}\r\n                  value={selectedDate.month}\r\n                  onChange={(value) => handleDateChange('month', value)}\r\n                >\r\n                  {[...Array(12)].map((_, i) => (\r\n                    <Option key={i + 1} value={i + 1}>\r\n                      Tháng {i + 1}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n                <Select\r\n                  style={{ width: '100%' }}\r\n                  value={selectedDate.year}\r\n                  onChange={(value) => handleDateChange('year', value)}\r\n                >\r\n                  {[currentYear - 1, currentYear, currentYear + 1].map((year) => (\r\n                    <Option key={year} value={year}>\r\n                      Năm {year}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Space>\r\n            )}\r\n\r\n            {timeFrame === 'year' && (\r\n              <Select\r\n                style={{ width: '100%' }}\r\n                value={selectedDate.year}\r\n                onChange={(value) => handleDateChange('year', value)}\r\n              >\r\n                {[currentYear - 1, currentYear, currentYear + 1].map((year) => (\r\n                  <Option key={year} value={year}>\r\n                    Năm {year}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            )}\r\n\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <BarChart data={timeRevenueChartData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"period\" />\r\n                <YAxis />\r\n                <Tooltip formatter={(value) => `${value.toLocaleString('vi-VN')} VND`} />\r\n                <Bar dataKey=\"revenue\" fill=\"#4f85f1\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </Space>\r\n        </Col>\r\n\r\n        <Col span={12}>\r\n          <Title level={5} style={{ textAlign: 'center', marginBottom: '10px' }}>Doanh Thu Theo Phương Thức Thanh Toán</Title>\r\n          <Text strong style={{ display: 'block', textAlign: 'center', fontSize: '16px', marginBottom: '10px' }}>\r\n            Tổng Doanh Thu: {totalRevenue.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}\r\n          </Text>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart>\r\n              <Pie\r\n                data={paymentMethodData}\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                outerRadius={100}\r\n                label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(1)}%`}\r\n              >\r\n                {paymentMethodData.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip formatter={(value) => `${value.toLocaleString('vi-VN')} VND`} />\r\n              <Legend verticalAlign=\"bottom\" height={36} />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RevenueChart;\r\n","import React from 'react';\r\nimport { useGetTopBookingUsersQuery } from '../../../../Redux/Company/companyApiSlice';\r\nimport { Table, Typography, Card } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Top10UsersTable = () => {\r\n  const { data, isLoading, isError } = useGetTopBookingUsersQuery();\r\n\r\n  if (isLoading) return <p>Loading...</p>;\r\n  if (isError) return <p>Error loading data...</p>;\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      dataIndex: 'rank',\r\n      key: 'rank',\r\n      align: 'center',\r\n      render: (_, __, index) => {\r\n        const rank = index + 1;\r\n        return (\r\n          <span style={{ fontWeight: rank <= 3 ? 'bold' : 'normal', color: rank <= 3 ? '#d48806' : 'inherit' }}>\r\n            {rank}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Tên người dùng',\r\n      dataIndex: 'userName',\r\n      key: 'userName',\r\n      render: (text, record, index) => (\r\n        <span style={{ fontWeight: index < 3 ? 'bold' : 'normal', color: index < 3 ? '#d48806' : 'inherit' }}>\r\n          {text}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Tổng doanh thu',\r\n      dataIndex: 'totalRevenue',\r\n      key: 'totalRevenue',\r\n      align: 'right',\r\n      render: (value) => (\r\n        <span style={{ color: '#3f8600', fontWeight: 'bold' }}>\r\n          {new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(value)}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const tableData = data?.data.map((user, index) => ({\r\n    key: index,\r\n    userName: user._id.fullName,\r\n    totalRevenue: user.totalRevenue,\r\n  }));\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        maxWidth: '600px',\r\n        padding: '16px',\r\n        boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\r\n        borderRadius: '8px',\r\n        backgroundColor: '#f5f5f5',\r\n      }}\r\n    >\r\n      <Title level={4} style={{ textAlign: 'center', color: '#1890ff', marginBottom: '16px', fontSize: '18px' }}>\r\n        Top 10 Người Dùng Đặt Vé Nhiều Nhất\r\n      </Title>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={tableData}\r\n        pagination={false}\r\n        bordered\r\n        size=\"small\"\r\n        rowKey=\"key\"\r\n        rowClassName={(record, index) => (index % 2 === 0 ? 'table-row-light' : 'table-row-dark')}\r\n        style={{ backgroundColor: '#fff', fontSize: '12px' }}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Top10UsersTable;\r\n","import React from \"react\";\r\nimport { Tabs, Row, Col } from \"antd\";\r\nimport CompletedTripsChart from \"../components/Revenue/CompletedTripsChart\";\r\n\r\nimport RevenueChart from \"../components/Revenue/RevenueChart\";\r\n\r\nimport UserGrowthChart from \"../components/Revenue/UserGrowthChart\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div className=\"p-6 h-[1000px] bg-white\">\r\n      <Tabs defaultActiveKey=\"1\">\r\n      <TabPane tab=\"Tăng trưởng người dùng\" key=\"1\">\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <UserGrowthChart />\r\n            </Col>\r\n          </Row>\r\n        </TabPane>\r\n      <TabPane tab=\"Doanh thu\" key=\"2\">\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <RevenueChart />\r\n            </Col>\r\n          </Row>\r\n        </TabPane>\r\n\r\n        <TabPane tab=\"Chuyến đi\" key=\"3\">\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <CompletedTripsChart />\r\n            </Col>\r\n          </Row>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["CompletedTripsChart","_responseData$data","data","responseData","error","isLoading","useGetCompletedTripsByMonthQuery","_jsx","Spin","tip","Alert","message","type","showIcon","chartData","map","trips","index","month","Date","toLocaleString","completedTrips","_jsxs","className","style","padding","background","borderRadius","boxShadow","children","textAlign","fontSize","marginBottom","color","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","stroke","XAxis","dataKey","tick","YAxis","label","value","angle","position","allowDecimals","domain","Tooltip","contentStyle","backgroundColor","border","labelStyle","fontWeight","formatter","labelFormatter","Legend","verticalAlign","Bar","fill","radius","barSize","LabelList","Title","Text","Typography","Option","Select","COLORS","RevenueChart","_revenueData$data","_revenueData$data2","_timeRevenueData$data","currentYear","moment","year","currentMonth","timeFrame","setTimeFrame","useState","selectedDate","setSelectedDate","day","format","dates","setDates","startDate","startOf","endDate","endOf","useEffect","handleDateChange","prev","revenueData","loadingRevenue","errorRevenue","useGetRevenueByPaymentMethodQuery","timeRevenueData","loadingTimeRevenue","errorTimeRevenue","useGetRevenueByTimeRangeQuery","totalRevenue","reduce","sum","item","revenue","paymentMethodData","name","method","timeRevenueChartData","period","date","Card","level","Row","gutter","Col","span","Space","direction","strong","defaultValue","onChange","DatePicker","disabledDate","current","Array","_","i","display","currency","PieChart","Pie","nameKey","cx","cy","outerRadius","_ref","percent","toFixed","entry","Cell","length","Top10UsersTable","isError","useGetTopBookingUsersQuery","columns","title","dataIndex","key","align","render","__","rank","text","record","Intl","NumberFormat","tableData","user","userName","_id","fullName","maxWidth","Table","dataSource","pagination","bordered","size","rowKey","rowClassName","TabPane","Tabs","Dashboard","defaultActiveKey","tab","UserGrowthChart"],"sourceRoot":""}