{"version":3,"file":"static/js/48.2a07ad2a.chunk.js","mappings":"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","sources":["components/CompanyAdmin/components/ManageTrip/TripList.js","components/CompanyAdmin/components/ManageTrip/TripForm.js","components/CompanyAdmin/pages/ManageTrips.js","components/shared/Notification/Notification.js","utils/formatUtils.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDeleteTripMutation, useUpdateTripDriversMutation } from '../../../../Redux/Trip/TripApiSlice';\r\nimport { useGetDriversQuery } from '../../../../Redux/Company/companyApiSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setTrips, setError, setSuccess } from '../../../../Redux/Trip/TripSlice';\r\nimport { Table, Button, Popconfirm, Modal, Select, Spin, Tooltip } from 'antd';\r\nimport Notification from '../../../../components/shared/Notification/Notification';\r\nimport { FaEdit, FaTrash, FaEye, FaUserPlus } from 'react-icons/fa';\r\nimport { formatCurrency, timeUtils } from 'utils/formatUtils';\r\nimport moment from 'moment-timezone';\r\n\r\nconst TripList = ({ trips, openDrawer, hideAddButton, refetch }) => {\r\n  const dispatch = useDispatch();\r\n  const [deleteTrip] = useDeleteTripMutation();\r\n  const [updateTripDrivers] = useUpdateTripDriversMutation();\r\n  const [notification, setNotification] = useState({ open: false, severity: '', message: '' });\r\n  const [selectedTrip, setSelectedTrip] = useState(null);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [selectedDrivers, setSelectedDrivers] = useState([]);\r\n\r\n  // Lấy danh sách tài xế từ API\r\n  const { data: driversData, isLoading: isDriversLoading } = useGetDriversQuery();\r\n\r\n  const showNotification = (severity, message) => {\r\n    setNotification({ open: true, severity, message });\r\n  };\r\n\r\n  const handleDelete = async (tripId) => {\r\n    try {\r\n      await deleteTrip(tripId).unwrap();\r\n      dispatch(setSuccess('Xóa chuyến đi thành công.'));\r\n      const updatedTrips = trips.filter((trip) => trip._id !== tripId);\r\n      dispatch(setTrips(updatedTrips));\r\n      showNotification('success', 'Xóa chuyến đi thành công.');\r\n      refetch();\r\n    } catch (err) {\r\n      dispatch(setError('Lỗi khi xóa chuyến đi: ' + err.message));\r\n      showNotification('error', `Lỗi khi xóa chuyến đi: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (record) => {\r\n    const tripToEdit = {\r\n      ...record,\r\n      departureTime: moment.utc(record.departureTime).toISOString(),\r\n      arrivalTime: moment.utc(record.arrivalTime).toISOString(),\r\n    };\r\n    openDrawer(tripToEdit);\r\n  };\r\n\r\n  const handleAddDriver = (trip) => {\r\n    setSelectedTrip(trip);\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleConfirmAddDriver = async () => {\r\n    if (!selectedDrivers.length) {\r\n      showNotification('error', 'Bạn phải chọn ít nhất một tài xế');\r\n      return;\r\n    }\r\n    try {\r\n      await updateTripDrivers({\r\n        tripId: selectedTrip._id,\r\n        driverIds: selectedDrivers,\r\n      }).unwrap();\r\n      showNotification('success', 'Thêm tài xế thành công.');\r\n      setIsModalVisible(false);\r\n      refetch();\r\n    } catch (err) {\r\n      const errorMessage = err.data?.message || 'Lỗi khi thêm tài xế.';\r\n      const conflictingDrivers = err.data?.conflictingDrivers || [];\r\n      const conflictingDriversMessage = conflictingDrivers.length\r\n        ? `Các tài xế gây xung đột: ${conflictingDrivers.join(', ')}`\r\n        : '';\r\n      showNotification('error', `${errorMessage} ${conflictingDriversMessage}`);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Điểm khởi hành',\r\n      dataIndex: ['departureLocation', 'name'],\r\n      key: 'departureLocation',\r\n    },\r\n    {\r\n      title: 'Điểm đến',\r\n      dataIndex: ['arrivalLocation', 'name'],\r\n      key: 'arrivalLocation',\r\n    },\r\n    {\r\n      title: 'Loại xe',\r\n      dataIndex: ['busType', 'name'],\r\n      key: 'busType',\r\n      render: (text) => <span className=\"bg-green-200 text-green-800 px-2 py-1 rounded-full\">{text}</span>,\r\n    },\r\n    {\r\n      title: 'Thời gian khởi hành',\r\n      dataIndex: 'departureTime',\r\n      key: 'departureTime',\r\n      render: (text) => timeUtils.formatDisplayTime(text),\r\n    },\r\n    {\r\n      title: 'Thời gian đến',\r\n      dataIndex: 'arrivalTime',\r\n      key: 'arrivalTime',\r\n      render: (text) => timeUtils.formatDisplayTime(text),\r\n    },\r\n    {\r\n      title: 'Giá vé',\r\n      dataIndex: 'basePrice',\r\n      key: 'basePrice',\r\n      render: (text) => formatCurrency(text),\r\n    },\r\n    {\r\n      title: 'Tài xế',\r\n      dataIndex: 'drivers',\r\n      key: 'drivers',\r\n      render: (drivers) => (\r\n        drivers && drivers.length > 0 ? (\r\n          drivers.map((driver) => (\r\n            <span key={driver._id} className=\"block\">\r\n              {driver.fullName ? `${driver.fullName} (Driver)` : 'Thông tin không xác định'}\r\n            </span>\r\n          ))\r\n        ) : (\r\n          <span className=\"text-rose-400\">Chưa có tài xế</span>\r\n        )\r\n      ),\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      key: 'action',\r\n      render: (text, record) => {\r\n        const hasDriver = record.drivers && record.drivers.length > 0;\r\n\r\n        return (\r\n          <div className=\"flex space-x-2\">\r\n            <Tooltip title=\"Chi tiết\">\r\n              <Link to={`/trips/${record._id}`} className=\"text-blue-500 hover:text-blue-700\">\r\n                <FaEye className=\"inline mr-1 text-lg align-middle\" />\r\n              </Link>\r\n            </Tooltip>\r\n            <Tooltip title=\"Sửa\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"text-yellow-500 hover:text-yellow-700\"\r\n                onClick={() => handleEdit(record)}\r\n              >\r\n                <FaEdit className=\"inline mr-1 text-lg align-middle\" />\r\n              </Button>\r\n            </Tooltip>\r\n            {!hasDriver && (\r\n              <Tooltip title=\"Thêm tài xế\">\r\n                <Button\r\n                  type=\"link\"\r\n                  className=\"text-green-500 hover:text-green-700\"\r\n                  onClick={() => handleAddDriver(record)}\r\n                >\r\n                  <FaUserPlus className=\"inline mr-1 text-lg align-middle\" />\r\n                </Button>\r\n              </Tooltip>\r\n            )}\r\n            <Tooltip title=\"Xóa\">\r\n              <Popconfirm\r\n                title=\"Bạn có chắc chắn muốn xóa chuyến đi này không?\"\r\n                onConfirm={() => handleDelete(record._id)}\r\n                okText=\"Có\"\r\n                cancelText=\"Không\"\r\n              >\r\n                <Button type=\"link\" className=\"text-red-500 hover:text-red-700\">\r\n                  <FaTrash className=\"inline mr-1 text-lg align-middle\" />\r\n                </Button>\r\n              </Popconfirm>\r\n            </Tooltip>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <Table\r\n        columns={columns}\r\n        dataSource={trips}\r\n        rowKey={(record) => record._id}\r\n        pagination={false}\r\n        bordered\r\n        className=\"bg-white shadow-md rounded-lg overflow-hidden\"\r\n      />\r\n      <Notification\r\n        open={notification.open}\r\n        severity={notification.severity}\r\n        message={notification.message}\r\n        onClose={() => setNotification({ ...notification, open: false })}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      />\r\n      <Modal\r\n        title=\"Thêm tài xế\"\r\n        visible={isModalVisible}\r\n        onOk={handleConfirmAddDriver}\r\n        onCancel={() => setIsModalVisible(false)}\r\n      >\r\n        {isDriversLoading ? (\r\n          <Spin />\r\n        ) : driversData && Array.isArray(driversData.drivers) && driversData.drivers.length > 0 ? (\r\n          <Select\r\n            mode=\"multiple\"\r\n            style={{ width: '100%' }}\r\n            placeholder=\"Chọn tài xế\"\r\n            onChange={(value) => setSelectedDrivers(value)}\r\n          >\r\n            {driversData.drivers.map((driver) => (\r\n              <Select.Option key={driver._id} value={driver._id}>\r\n                {driver.userId?.fullName ? driver.userId.fullName : 'Tên không xác định'}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        ) : (\r\n          <p>Không có tài xế nào</p>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TripList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useCreateTripMutation, useUpdateTripMutation, useGetTripByIdQuery } from '../../../../Redux/Trip/TripApiSlice';\r\nimport { useGetLocationsQuery } from '../../../../Redux/Location/locationApiSlice';\r\nimport { useGetBusTypesQuery } from '../../../../Redux/Bustype/BusTypeApiSlice';\r\nimport { formatCurrency,timeUtils} from '../../../../utils/formatUtils';\r\nimport moment from 'moment';\r\n\r\nconst TripForm = ({ tripId, closeDrawer }) => {\r\n  const { companyId } = useSelector((state) => state.user.userInfo);\r\n  const [createTrip] = useCreateTripMutation();\r\n  const [updateTrip] = useUpdateTripMutation();\r\n\r\n  const { data: tripData } = useGetTripByIdQuery(tripId, { skip: !tripId });\r\n  const { data: locationData, isLoading: isLoadingLocations } = useGetLocationsQuery();\r\n  const { data: busTypeData, isLoading: isLoadingBusTypes, error: busTypeError } = useGetBusTypesQuery({ companyId }, { skip: !companyId });\r\n\r\n  const [formData, setFormData] = useState({\r\n    departureLocation: '',\r\n    arrivalLocation: '',\r\n    busType: '',\r\n    departureTime: new Date(),\r\n    arrivalTime: new Date(),\r\n    basePrice: '',\r\n    isRoundTrip: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (tripData && tripData.data) {\r\n      const trip = tripData.data.trip;\r\n      console.log('Server time:', trip.departureTime);\r\n      console.log('Parsed time for form:', timeUtils.parseUTCTimeForForm(trip.departureTime));\r\n      setFormData({\r\n        departureLocation: trip?.departureLocation?._id || '',\r\n        arrivalLocation: trip?.arrivalLocation?._id || '',\r\n        busType: trip?.busType?._id || '',\r\n        departureTime: timeUtils.parseUTCTimeForForm(trip.departureTime),\r\n        arrivalTime: timeUtils.parseUTCTimeForForm(trip.arrivalTime),\r\n         basePrice: trip?.basePrice,\r\n        isRoundTrip: trip?.isRoundTrip || false,\r\n      });\r\n    }\r\n  }, [tripData]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleDateChange = (name, date) => {\r\n    setFormData({\r\n      ...formData,\r\n      [name]: date,\r\n    });\r\n  };\r\n  \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const tripDetails = {\r\n        ...formData,\r\n        companyId,\r\n        departureTime: timeUtils.formatTimeForServer(formData.departureTime),\r\n        arrivalTime: timeUtils.formatTimeForServer(formData.arrivalTime),\r\n        basePrice: parseInt(formData.basePrice, 10),\r\n      };\r\n\r\n      if (tripId) {\r\n        await updateTrip({ tripId, updatedTrip: tripDetails }).unwrap();\r\n      } else {\r\n        await createTrip(tripDetails).unwrap();\r\n      }\r\n      closeDrawer();\r\n    } catch (err) {\r\n      console.error('Lỗi khi lưu chuyến đi:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"p-6 bg-white rounded-lg shadow-lg\">\r\n      <h1 className=\"text-2xl font-bold mb-6 text-gray-700\">{tripId ? 'Sửa Chuyến Đi' : 'Tạo Chuyến Đi Mới'}</h1>\r\n\r\n      {/* Điểm Khởi Hành */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Điểm Khởi Hành:</label>\r\n        <select\r\n          name=\"departureLocation\"\r\n          value={formData.departureLocation}\r\n          onChange={handleChange}\r\n          className=\"mt-2 p-2 border rounded w-full focus:ring focus:ring-green-500\"\r\n          required\r\n        >\r\n          <option value=\"\">Chọn điểm khởi hành</option>\r\n          {!isLoadingLocations && locationData?.data?.map((location) => (\r\n            <option key={location._id} value={location._id}>\r\n              {location.name} - {location.city}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Điểm Đến */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Điểm Đến:</label>\r\n        <select\r\n          name=\"arrivalLocation\"\r\n          value={formData.arrivalLocation}\r\n          onChange={handleChange}\r\n          className=\"mt-2 p-2 border rounded w-full focus:ring focus:ring-green-500\"\r\n          required\r\n        >\r\n          <option value=\"\">Chọn điểm đến</option>\r\n          {!isLoadingLocations && locationData?.data?.map((location) => (\r\n            <option key={location._id} value={location._id}>\r\n              {location.name} - {location.city}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Loại Xe */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Loại Xe:</label>\r\n        {isLoadingBusTypes ? (\r\n          <p>Đang tải danh sách loại xe...</p>\r\n        ) : busTypeError ? (\r\n          <p className=\"text-red-500\">Lỗi khi tải danh sách loại xe: {busTypeError.message}</p>\r\n        ) : (\r\n          <select\r\n            name=\"busType\"\r\n            value={formData.busType}\r\n            onChange={handleChange}\r\n            className=\"mt-2 p-2 border rounded w-full focus:ring focus:ring-green-500\"\r\n            required\r\n          >\r\n            <option value=\"\">Chọn loại xe</option>\r\n            {busTypeData?.data.map((busType) => (\r\n              <option key={busType._id} value={busType._id}>\r\n                {busType.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n      </div>\r\n\r\n      {/* Thời Gian Khởi Hành */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Thời Gian Khởi Hành:</label>\r\n          <DatePicker\r\n            selected={formData.departureTime}\r\n            onChange={(date) => handleDateChange('departureTime', date)}\r\n            showTimeSelect\r\n            timeFormat=\"HH:mm\"\r\n            timeIntervals={15}\r\n            dateFormat=\"dd/MM/yyyy HH:mm\"\r\n            className=\"mt-2 p-3 border border-gray-300 text-gray-700 rounded-lg shadow-sm w-full \r\n                   focus:outline-none focus:border-blue-400 focus:ring focus:ring-blue-200 \r\n                   transition duration-200 ease-in-out hover:shadow-lg\"\r\n            required\r\n          />\r\n      </div>\r\n\r\n      {/* Thời Gian Đến */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Thời Gian Đến:</label>\r\n        <DatePicker\r\n          selected={formData.arrivalTime}\r\n          onChange={(date) => handleDateChange('arrivalTime', date)}\r\n          showTimeSelect\r\n          timeFormat=\"HH:mm\"\r\n          timeIntervals={15}\r\n          dateFormat=\"dd/MM/yyyy HH:mm\"\r\n          className=\"mt-2 p-3 border border-gray-300 text-gray-700 rounded-lg shadow-sm w-full \r\n                   focus:outline-none focus:border-blue-400 focus:ring focus:ring-blue-200 \r\n                   transition duration-200 ease-in-out hover:shadow-lg\"\r\n          required\r\n        />\r\n        \r\n      </div>\r\n\r\n      {/* Giá Vé Cơ Bản */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Giá Vé Cơ Bản:</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"basePrice\"\r\n          value={formData.basePrice}\r\n          onChange={handleChange}\r\n          placeholder=\"Nhập giá vé cơ bản\"\r\n          className=\"mt-2 p-2 border rounded w-full focus:ring focus:ring-green-500\"\r\n          required\r\n        />\r\n        <div className=\"mt-2 text-sm text-gray-600\">\r\n          Giá vé: {formatCurrency(formData.basePrice)}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2 rounded w-full\">\r\n        {tripId ? 'Cập Nhật Chuyến Đi' : 'Tạo Chuyến Đi'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TripForm;\r\n","import React, { useState, useMemo, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetTripsByCompanyQuery, useDeleteExpiredTripsForCompanyMutation } from '../../../Redux/Trip/TripApiSlice';\r\nimport TripList from '../components/ManageTrip/TripList';\r\nimport TripForm from '../components/ManageTrip/TripForm';\r\nimport { Button, Drawer, Typography, Spin, Alert, notification, Popconfirm, Space, Tabs } from 'antd';\r\n\r\nconst { Title } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nconst ManageTrips = () => {\r\n  const companyId = useSelector((state) => state.user.userInfo?.companyId);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [editingTripId, setEditingTripId] = useState(null);\r\n  const [formMode, setFormMode] = useState('add');\r\n  const [activeTab, setActiveTab] = useState('active');\r\n\r\n  const { data = {}, isLoading, error, refetch } = useGetTripsByCompanyQuery(companyId, {\r\n    skip: !companyId,\r\n  });\r\n\r\n  const trips = data.trips || [];\r\n  const { activeTrips, completedTrips } = useMemo(() => {\r\n    const active = [];\r\n    const completed = [];\r\n    trips.forEach((trip) => {\r\n      if (trip.status === 'Completed') {\r\n        completed.push(trip);\r\n      } else {\r\n        active.push(trip);\r\n      }\r\n    });\r\n    return { activeTrips: active, completedTrips: completed };\r\n  }, [trips]);\r\n\r\n  const [deleteExpiredTripsForCompany, { isLoading: isDeleting }] = useDeleteExpiredTripsForCompanyMutation();\r\n\r\n  const showNotification = useCallback((type, message, description) => {\r\n    notification[type]({\r\n      message,\r\n      description,\r\n    });\r\n  }, []);\r\n\r\n  const openDrawer = useCallback((trip = null) => {\r\n    setEditingTripId(trip ? trip._id : null);\r\n    setFormMode(trip ? 'edit' : 'add');\r\n    setIsDrawerOpen(true);\r\n  }, []);\r\n\r\n  const closeDrawer = useCallback((success = false, message) => {\r\n    setIsDrawerOpen(false);\r\n    setEditingTripId(null);\r\n    setFormMode('add');\r\n    if (success) {\r\n      showNotification('success', 'Thành công', message);\r\n    }\r\n    refetch();\r\n  }, [showNotification, refetch]);\r\n\r\n  const handleDeleteExpiredTrips = async () => {\r\n    try {\r\n      const response = await deleteExpiredTripsForCompany().unwrap();\r\n      showNotification('success', 'Thành công', response.message || 'Các chuyến đi đã quá hạn đã được xóa thành công.');\r\n      refetch();\r\n    } catch (error) {\r\n      const errorMessage = error?.data?.message || 'Có lỗi xảy ra khi xóa các chuyến đi đã quá hạn.';\r\n      showNotification('error', 'Lỗi', errorMessage);\r\n    }\r\n  };\r\n\r\n  const onTabChange = (key) => {\r\n    setActiveTab(key);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-8 bg-white shadow-md rounded-md\">\r\n      <div className=\"header flex justify-between items-center mb-6\">\r\n        <Title level={3} className=\"text-gray-800\">Quản Lý Chuyến Đi</Title>\r\n        <Space size=\"large\">\r\n          {activeTab === 'active' && (\r\n            <Popconfirm\r\n              title=\"Bạn có chắc chắn muốn xóa tất cả các chuyến đi đã quá hạn?\"\r\n              onConfirm={handleDeleteExpiredTrips}\r\n              okText=\"Xóa\"\r\n              cancelText=\"Hủy\"\r\n            >\r\n              <Button \r\n                type=\"primary\" \r\n                danger \r\n                loading={isDeleting} \r\n                style={{ backgroundColor: '#ff4d4f', borderColor: '#ff4d4f' }}\r\n              >\r\n                Xóa Chuyến Đi Quá Hạn\r\n              </Button>\r\n            </Popconfirm>\r\n          )}\r\n          {activeTab === 'active' && (\r\n            <Button type=\"primary\" onClick={() => openDrawer()}>\r\n              Tạo Chuyến Đi\r\n            </Button>\r\n          )}\r\n        </Space>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        <Tabs activeKey={activeTab} onChange={onTabChange} type=\"card\">\r\n          <TabPane tab=\"Chuyến đi đang hoạt động\" key=\"active\">\r\n            {isLoading ? (\r\n              <div className=\"loading-spinner flex justify-center py-10\">\r\n                <Spin tip=\"Đang tải danh sách chuyến đi...\" size=\"large\" />\r\n              </div>\r\n            ) : error ? (\r\n              <Alert\r\n                message=\"Có lỗi xảy ra khi tải danh sách chuyến đi\"\r\n                description={error.message}\r\n                type=\"error\"\r\n                showIcon\r\n                className=\"error-alert\"\r\n              />\r\n            ) : (\r\n              <TripList \r\n                trips={activeTrips} \r\n                openDrawer={openDrawer} \r\n                hideAddButton={isDrawerOpen} \r\n                showNotification={showNotification} \r\n                refetch={refetch} \r\n              />\r\n            )}\r\n          </TabPane>\r\n          <TabPane tab=\"Chuyến đi đã hoàn thành\" key=\"completed\">\r\n            {isLoading ? (\r\n              <div className=\"loading-spinner flex justify-center py-10\">\r\n                <Spin tip=\"Đang tải danh sách chuyến đi...\" size=\"large\" />\r\n              </div>\r\n            ) : error ? (\r\n              <Alert\r\n                message=\"Có lỗi xảy ra khi tải danh sách chuyến đi\"\r\n                description={error.message}\r\n                type=\"error\"\r\n                showIcon\r\n                className=\"error-alert\"\r\n              />\r\n            ) : (\r\n              <TripList \r\n                trips={completedTrips} \r\n                openDrawer={openDrawer} \r\n                hideAddButton={isDrawerOpen} \r\n                showNotification={showNotification} \r\n                refetch={refetch} \r\n                isCompleted\r\n              />\r\n            )}\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n\r\n      <Drawer\r\n        title={editingTripId ? 'Chỉnh Sửa Chuyến Đi' : 'Thêm Chuyến Đi Mới'}\r\n        width={500}\r\n        onClose={() => closeDrawer(false)}\r\n        open={isDrawerOpen}\r\n        destroyOnClose\r\n      >\r\n        <TripForm\r\n          tripId={editingTripId}\r\n          closeDrawer={(message) => closeDrawer(true, message)}\r\n          trips={trips}\r\n          formMode={formMode}\r\n          showNotification={showNotification}\r\n        />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageTrips;\r\n","import React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Slide from '@mui/material/Slide';\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Notification = ({ open, onClose, severity, message, autoHideDuration = 3000, TransitionComponent = Slide }) => {\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={autoHideDuration}\r\n      onClose={onClose}\r\n      TransitionComponent={TransitionComponent}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }} \r\n    >\r\n      <Alert onClose={onClose} severity={severity} sx={{ width: '100%' }}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\nexport default Notification;\r\n","import moment from 'moment-timezone';\r\n\r\nconst VN_TIMEZONE = 'Asia/Ho_Chi_Minh';\r\n\r\nexport const timeUtils = {\r\n  parseUTCTimeForForm: (utcTimeString) => {\r\n    if (!utcTimeString) return new Date();\r\n    return new Date(utcTimeString);\r\n  },\r\n\r\n  formatTimeForServer: (localDate) => {\r\n    if (!localDate) return null;\r\n    return moment(localDate).utc().format();\r\n  },\r\n\r\n  formatDisplayTime: (utcTimeString) => {\r\n    if (!utcTimeString) return '';\r\n    return moment(utcTimeString).tz(VN_TIMEZONE).format('DD/MM/YYYY HH:mm');\r\n  }\r\n};\r\nexport const formatCurrency = (value) => {\r\n  if (!value) return '0 VND';\r\n  return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(value);\r\n};\r\n"],"names":["_ref","trips","openDrawer","hideAddButton","refetch","dispatch","useDispatch","deleteTrip","useDeleteTripMutation","updateTripDrivers","useUpdateTripDriversMutation","notification","setNotification","useState","open","severity","message","selectedTrip","setSelectedTrip","isModalVisible","setIsModalVisible","selectedDrivers","setSelectedDrivers","data","driversData","isLoading","isDriversLoading","useGetDriversQuery","showNotification","columns","title","dataIndex","key","render","text","_jsx","className","children","timeUtils","formatDisplayTime","formatCurrency","drivers","length","map","driver","fullName","_id","record","hasDriver","_jsxs","Tooltip","Link","to","FaEye","Button","type","onClick","tripToEdit","departureTime","moment","toISOString","arrivalTime","handleEdit","FaEdit","FaUserPlus","Popconfirm","onConfirm","async","tripId","unwrap","setSuccess","updatedTrips","filter","trip","setTrips","err","setError","handleDelete","okText","cancelText","FaTrash","Table","dataSource","rowKey","pagination","bordered","Notification","onClose","anchorOrigin","vertical","horizontal","Modal","visible","onOk","driverIds","_err$data","_err$data2","errorMessage","conflictingDrivers","conflictingDriversMessage","join","onCancel","Spin","Array","isArray","Select","mode","style","width","placeholder","onChange","value","_driver$userId","Option","userId","_locationData$data","_locationData$data2","closeDrawer","companyId","useSelector","state","user","userInfo","createTrip","useCreateTripMutation","updateTrip","useUpdateTripMutation","tripData","useGetTripByIdQuery","skip","locationData","isLoadingLocations","useGetLocationsQuery","busTypeData","isLoadingBusTypes","error","busTypeError","useGetBusTypesQuery","formData","setFormData","departureLocation","arrivalLocation","busType","Date","basePrice","isRoundTrip","useEffect","_trip$departureLocati","_trip$arrivalLocation","_trip$busType","console","log","parseUTCTimeForForm","handleChange","e","name","checked","target","handleDateChange","date","onSubmit","preventDefault","tripDetails","formatTimeForServer","parseInt","updatedTrip","required","location","city","DatePicker","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","Title","Typography","TabPane","Tabs","ManageTrips","_state$user$userInfo","isDrawerOpen","setIsDrawerOpen","editingTripId","setEditingTripId","formMode","setFormMode","activeTab","setActiveTab","useGetTripsByCompanyQuery","activeTrips","completedTrips","useMemo","active","completed","forEach","status","push","deleteExpiredTripsForCompany","isDeleting","useDeleteExpiredTripsForCompanyMutation","useCallback","description","arguments","undefined","success","level","Space","size","response","_error$data","danger","loading","backgroundColor","borderColor","activeKey","tab","tip","Alert","showIcon","TripList","isCompleted","Drawer","destroyOnClose","TripForm","React","props","ref","MuiAlert","elevation","variant","autoHideDuration","TransitionComponent","Slide","Snackbar","sx","utcTimeString","localDate","utc","format","tz","Intl","NumberFormat","currency"],"sourceRoot":""}