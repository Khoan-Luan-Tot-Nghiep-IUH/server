{"version":3,"file":"static/js/386.14a2e402.chunk.js","mappings":"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","sources":["components/CompanyAdmin/components/ManageTrip/TripList.js","components/CompanyAdmin/components/ManageTrip/TripForm.js","components/CompanyAdmin/components/ManageTrip/TripRequest.js","components/CompanyAdmin/pages/ManageTrips.js","utils/formatUtils.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDeleteTripMutation, useUpdateTripDriversMutation } from '../../../../Redux/Trip/TripApiSlice';\r\nimport { useGetDriversQuery } from '../../../../Redux/Company/companyApiSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setTrips, setError, setSuccess } from '../../../../Redux/Trip/TripSlice';\r\nimport { Table, Button, Popconfirm, Modal, Select, Spin, Tooltip } from 'antd';\r\nimport Notification from '../../../../components/shared/Notification/Notification';\r\nimport { FaEdit, FaTrash, FaEye, FaUserPlus } from 'react-icons/fa';\r\nimport { formatCurrency, timeUtils } from 'utils/formatUtils';\r\nimport moment from 'moment-timezone';\r\n\r\nconst TripList = ({ trips, openDrawer, hideAddButton, refetch }) => {\r\n  const dispatch = useDispatch();\r\n  const [deleteTrip] = useDeleteTripMutation();\r\n  const [updateTripDrivers] = useUpdateTripDriversMutation();\r\n  const [notification, setNotification] = useState({ open: false, severity: '', message: '' });\r\n  const [selectedTrip, setSelectedTrip] = useState(null);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [selectedDrivers, setSelectedDrivers] = useState([]);\r\n\r\n  // Lấy danh sách tài xế từ API\r\n  const { data: driversData, isLoading: isDriversLoading } = useGetDriversQuery();\r\n\r\n  const showNotification = (severity, message) => {\r\n    setNotification({ open: true, severity, message });\r\n  };\r\n\r\n  const handleDelete = async (tripId) => {\r\n    try {\r\n      await deleteTrip(tripId).unwrap();\r\n      dispatch(setSuccess('Xóa chuyến đi thành công.'));\r\n      const updatedTrips = trips.filter((trip) => trip._id !== tripId);\r\n      dispatch(setTrips(updatedTrips));\r\n      showNotification('success', 'Xóa chuyến đi thành công.');\r\n      refetch();\r\n    } catch (err) {\r\n      dispatch(setError('Lỗi khi xóa chuyến đi: ' + err.message));\r\n      showNotification('error', `Lỗi khi xóa chuyến đi: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (record) => {\r\n    const tripToEdit = {\r\n      ...record,\r\n      departureTime: moment.utc(record.departureTime).toISOString(),\r\n      arrivalTime: moment.utc(record.arrivalTime).toISOString(),\r\n    };\r\n    openDrawer(tripToEdit);\r\n  };\r\n\r\n  const handleAddDriver = (trip) => {\r\n    setSelectedTrip(trip);\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleConfirmAddDriver = async () => {\r\n    if (!selectedDrivers.length) {\r\n      showNotification('error', 'Bạn phải chọn ít nhất một tài xế');\r\n      return;\r\n    }\r\n    try {\r\n      await updateTripDrivers({\r\n        tripId: selectedTrip._id,\r\n        driverIds: selectedDrivers,\r\n      }).unwrap();\r\n      showNotification('success', 'Thêm tài xế thành công.');\r\n      setIsModalVisible(false);\r\n      refetch();\r\n    } catch (err) {\r\n      const errorMessage = err.data?.message || 'Lỗi khi thêm tài xế.';\r\n      const conflictingDrivers = err.data?.conflictingDrivers || [];\r\n      const conflictingDriversMessage = conflictingDrivers.length\r\n        ? `Các tài xế gây xung đột: ${conflictingDrivers.join(', ')}`\r\n        : '';\r\n      showNotification('error', `${errorMessage} ${conflictingDriversMessage}`);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Điểm khởi hành',\r\n      dataIndex: ['departureLocation', 'name'],\r\n      key: 'departureLocation',\r\n    },\r\n    {\r\n      title: 'Điểm đến',\r\n      dataIndex: ['arrivalLocation', 'name'],\r\n      key: 'arrivalLocation',\r\n    },\r\n    {\r\n      title: 'Loại xe',\r\n      dataIndex: ['busType', 'name'],\r\n      key: 'busType',\r\n      render: (text) => <span className=\"bg-green-200 text-green-800 px-2 py-1 rounded-full\">{text}</span>,\r\n    },\r\n    {\r\n      title: 'Thời gian khởi hành',\r\n      dataIndex: 'departureTime',\r\n      key: 'departureTime',\r\n      render: (text) => timeUtils.formatDisplayTime(text),\r\n    },\r\n    {\r\n      title: 'Thời gian đến',\r\n      dataIndex: 'arrivalTime',\r\n      key: 'arrivalTime',\r\n      render: (text) => timeUtils.formatDisplayTime(text),\r\n    },\r\n    {\r\n      title: 'Giá vé',\r\n      dataIndex: 'basePrice',\r\n      key: 'basePrice',\r\n      render: (text) => formatCurrency(text),\r\n    },\r\n    {\r\n      title: 'Tài xế',\r\n      dataIndex: 'drivers',\r\n      key: 'drivers',\r\n      render: (drivers) => (\r\n        drivers && drivers.length > 0 ? (\r\n          drivers.map((driver) => (\r\n            <span key={driver._id} className=\"block\">\r\n              {driver.fullName ? `${driver.fullName} (Driver)` : 'Thông tin không xác định'}\r\n            </span>\r\n          ))\r\n        ) : (\r\n          <span className=\"text-rose-400\">Chưa có tài xế</span>\r\n        )\r\n      ),\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      key: 'action',\r\n      render: (text, record) => {\r\n        const hasDriver = record.drivers && record.drivers.length > 0;\r\n\r\n        return (\r\n          <div className=\"flex space-x-2\">\r\n            <Tooltip title=\"Chi tiết\">\r\n              <Link to={`/trips/${record._id}`} className=\"text-blue-500 hover:text-blue-700\">\r\n                <FaEye className=\"inline mr-1 text-lg align-middle\" />\r\n              </Link>\r\n            </Tooltip>\r\n            <Tooltip title=\"Sửa\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"text-yellow-500 hover:text-yellow-700\"\r\n                onClick={() => handleEdit(record)}\r\n              >\r\n                <FaEdit className=\"inline mr-1 text-lg align-middle\" />\r\n              </Button>\r\n            </Tooltip>\r\n            {!hasDriver && (\r\n              <Tooltip title=\"Thêm tài xế\">\r\n                <Button\r\n                  type=\"link\"\r\n                  className=\"text-green-500 hover:text-green-700\"\r\n                  onClick={() => handleAddDriver(record)}\r\n                >\r\n                  <FaUserPlus className=\"inline mr-1 text-lg align-middle\" />\r\n                </Button>\r\n              </Tooltip>\r\n            )}\r\n            <Tooltip title=\"Xóa\">\r\n              <Popconfirm\r\n                title=\"Bạn có chắc chắn muốn xóa chuyến đi này không?\"\r\n                onConfirm={() => handleDelete(record._id)}\r\n                okText=\"Có\"\r\n                cancelText=\"Không\"\r\n              >\r\n                <Button type=\"link\" className=\"text-red-500 hover:text-red-700\">\r\n                  <FaTrash className=\"inline mr-1 text-lg align-middle\" />\r\n                </Button>\r\n              </Popconfirm>\r\n            </Tooltip>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <Table\r\n        columns={columns}\r\n        dataSource={trips}\r\n        rowKey={(record) => record._id}\r\n        pagination={false}\r\n        bordered\r\n        className=\"bg-white shadow-md rounded-lg overflow-hidden\"\r\n      />\r\n      <Notification\r\n        open={notification.open}\r\n        severity={notification.severity}\r\n        message={notification.message}\r\n        onClose={() => setNotification({ ...notification, open: false })}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      />\r\n      <Modal\r\n        title=\"Thêm tài xế\"\r\n        visible={isModalVisible}\r\n        onOk={handleConfirmAddDriver}\r\n        onCancel={() => setIsModalVisible(false)}\r\n      >\r\n        {isDriversLoading ? (\r\n          <Spin />\r\n        ) : driversData && Array.isArray(driversData.drivers) && driversData.drivers.length > 0 ? (\r\n          <Select\r\n            mode=\"multiple\"\r\n            style={{ width: '100%' }}\r\n            placeholder=\"Chọn tài xế\"\r\n            onChange={(value) => setSelectedDrivers(value)}\r\n          >\r\n            {driversData.drivers.map((driver) => (\r\n              <Select.Option key={driver._id} value={driver._id}>\r\n                {driver.userId?.fullName ? driver.userId.fullName : 'Tên không xác định'}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        ) : (\r\n          <p>Không có tài xế nào</p>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TripList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useCreateTripMutation, useUpdateTripMutation, useGetTripByIdQuery } from '../../../../Redux/Trip/TripApiSlice';\r\nimport { useGetLocationsQuery } from '../../../../Redux/Location/locationApiSlice';\r\nimport { useGetBusTypesQuery } from '../../../../Redux/Bustype/BusTypeApiSlice';\r\nimport { formatCurrency, timeUtils } from '../../../../utils/formatUtils';\r\nimport moment from 'moment';\r\n\r\nconst TripForm = ({ tripId, closeDrawer }) => {\r\n  const { companyId } = useSelector((state) => state.user.userInfo);\r\n  const [createTrip] = useCreateTripMutation();\r\n  const [updateTrip] = useUpdateTripMutation();\r\n\r\n  const { data: tripData } = useGetTripByIdQuery(tripId, { skip: !tripId });\r\n  const { data: locationData, isLoading: isLoadingLocations } = useGetLocationsQuery();\r\n  const { data: busTypeData, isLoading: isLoadingBusTypes, error: busTypeError } = useGetBusTypesQuery({ companyId }, { skip: !companyId });\r\n\r\n  const [formData, setFormData] = useState({\r\n    departureLocation: '',\r\n    arrivalLocation: '',\r\n    busType: '',\r\n    departureTime: new Date(),\r\n    arrivalTime: new Date(),\r\n    basePrice: '',\r\n    isRoundTrip: false,\r\n    pickupPoints: [],\r\n    dropOffPoints: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (tripData && tripData.data) {\r\n      const trip = tripData.data.trip;\r\n      setFormData({\r\n        departureLocation: trip?.departureLocation?._id || '',\r\n        arrivalLocation: trip?.arrivalLocation?._id || '',\r\n        busType: trip?.busType?._id || '',\r\n        departureTime: timeUtils.parseUTCTimeForForm(trip.departureTime),\r\n        arrivalTime: timeUtils.parseUTCTimeForForm(trip.arrivalTime),\r\n        basePrice: trip?.basePrice,\r\n        isRoundTrip: trip?.isRoundTrip || false,\r\n        pickupPoints: trip?.pickupPoints || [],\r\n        dropOffPoints: trip?.dropOffPoints || [],\r\n      });\r\n    }\r\n  }, [tripData]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleDateChange = (name, date) => {\r\n    setFormData({\r\n      ...formData,\r\n      [name]: date,\r\n    });\r\n  };\r\n\r\n  // Tính toán thời gian tự động cho điểm đón\r\n  const calculatePickupTimes = (departureTime, pickupPoints) => {\r\n    const departureMoment = moment(departureTime);\r\n    return pickupPoints.map((point, index) => {\r\n      const timeOffset = index * 15; // Giả định mỗi điểm cách nhau 15 phút\r\n      return {\r\n        ...point,\r\n        time: departureMoment.clone().add(timeOffset, 'minutes').format('HH:mm'),\r\n      };\r\n    });\r\n  };\r\n\r\n  // Tính toán thời gian tự động cho điểm trả\r\n  const calculateDropOffTimes = (arrivalTime, dropOffPoints) => {\r\n    const arrivalMoment = moment(arrivalTime);\r\n    return dropOffPoints.map((point, index) => {\r\n      const timeOffset = (dropOffPoints.length - 1 - index) * 15; // Tính ngược thời gian\r\n      return {\r\n        ...point,\r\n        time: arrivalMoment.clone().subtract(timeOffset, 'minutes').format('HH:mm'),\r\n      };\r\n    });\r\n  };\r\n\r\n  // Xử lý thêm/xóa/chỉnh sửa điểm đón\r\n  const handleAddPickup = () => {\r\n    setFormData({\r\n      ...formData,\r\n      pickupPoints: [...formData.pickupPoints, { location: '', note: '' }],\r\n    });\r\n  };\r\n\r\n  const handleRemovePickup = (index) => {\r\n    const updatedPickupPoints = [...formData.pickupPoints];\r\n    updatedPickupPoints.splice(index, 1);\r\n    setFormData({ ...formData, pickupPoints: updatedPickupPoints });\r\n  };\r\n\r\n  const handlePickupChange = (index, field, value) => {\r\n    const updatedPickupPoints = [...formData.pickupPoints];\r\n    updatedPickupPoints[index][field] = value;\r\n    setFormData({ ...formData, pickupPoints: updatedPickupPoints });\r\n  };\r\n\r\n  // Xử lý thêm/xóa/chỉnh sửa điểm trả\r\n  const handleAddDropOff = () => {\r\n    setFormData({\r\n      ...formData,\r\n      dropOffPoints: [...formData.dropOffPoints, { location: '', note: '' }],\r\n    });\r\n  };\r\n\r\n  const handleRemoveDropOff = (index) => {\r\n    const updatedDropOffPoints = [...formData.dropOffPoints];\r\n    updatedDropOffPoints.splice(index, 1);\r\n    setFormData({ ...formData, dropOffPoints: updatedDropOffPoints });\r\n  };\r\n\r\n  const handleDropOffChange = (index, field, value) => {\r\n    const updatedDropOffPoints = [...formData.dropOffPoints];\r\n    updatedDropOffPoints[index][field] = value;\r\n    setFormData({ ...formData, dropOffPoints: updatedDropOffPoints });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Tự động tính toán thời gian cho điểm đón và điểm trả\r\n      const pickupPointsWithTimes = calculatePickupTimes(formData.departureTime, formData.pickupPoints);\r\n      const dropOffPointsWithTimes = calculateDropOffTimes(formData.arrivalTime, formData.dropOffPoints);\r\n\r\n      const tripDetails = {\r\n        ...formData,\r\n        pickupPoints: pickupPointsWithTimes,\r\n        dropOffPoints: dropOffPointsWithTimes,\r\n        departureTime: timeUtils.formatTimeForServer(formData.departureTime),\r\n        arrivalTime: timeUtils.formatTimeForServer(formData.arrivalTime),\r\n        basePrice: parseInt(formData.basePrice, 10),\r\n      };\r\n\r\n      if (tripId) {\r\n        await updateTrip({ tripId, updatedTrip: tripDetails }).unwrap();\r\n      } else {\r\n        await createTrip(tripDetails).unwrap();\r\n      }\r\n      closeDrawer();\r\n    } catch (err) {\r\n      console.error('Lỗi khi lưu chuyến đi:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"p-4 bg-white rounded-lg shadow-lg\">\r\n      {/* Điểm Khởi Hành */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Điểm Khởi Hành:</label>\r\n        <select\r\n          name=\"departureLocation\"\r\n          value={formData.departureLocation}\r\n          onChange={handleChange}\r\n          className=\"mt-2 p-2 border rounded w-full focus:ring focus:ring-green-500\"\r\n          required\r\n        >\r\n          <option value=\"\">Chọn điểm khởi hành</option>\r\n          {!isLoadingLocations &&\r\n            locationData?.data?.map((location) => (\r\n              <option key={location._id} value={location._id}>\r\n                {location.name} - {location.city}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Điểm Đến */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Điểm Đến:</label>\r\n        <select\r\n          name=\"arrivalLocation\"\r\n          value={formData.arrivalLocation}\r\n          onChange={handleChange}\r\n          className=\"mt-2 p-2 border rounded w-full focus:ring focus:ring-green-500\"\r\n          required\r\n        >\r\n          <option value=\"\">Chọn điểm đến</option>\r\n          {!isLoadingLocations &&\r\n            locationData?.data?.map((location) => (\r\n              <option key={location._id} value={location._id}>\r\n                {location.name} - {location.city}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n  <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Thời Gian Khởi Hành:</label>\r\n        <DatePicker\r\n          selected={formData.departureTime}\r\n          onChange={(date) => handleDateChange('departureTime', date)}\r\n          showTimeSelect\r\n          timeFormat=\"HH:mm\"\r\n          timeIntervals={15}\r\n          dateFormat=\"dd/MM/yyyy HH:mm\"\r\n          className=\"mt-2 p-3 border rounded w-full focus:ring focus:ring-blue-500\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      {/* Thời Gian Đến */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Thời Gian Đến:</label>\r\n        <DatePicker\r\n          selected={formData.arrivalTime}\r\n          onChange={(date) => handleDateChange('arrivalTime', date)}\r\n          showTimeSelect\r\n          timeFormat=\"HH:mm\"\r\n          timeIntervals={15}\r\n          dateFormat=\"dd/MM/yyyy HH:mm\"\r\n          className=\"mt-2 p-3 border rounded w-full focus:ring focus:ring-blue-500\"\r\n          required\r\n        />\r\n      </div>\r\n      {/* Điểm Đón */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Điểm Đón:</label>\r\n        {formData.pickupPoints.map((point, index) => (\r\n          <div key={index} className=\"flex items-center mb-2\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Địa điểm\"\r\n              value={point.location}\r\n              onChange={(e) => handlePickupChange(index, 'location', e.target.value)}\r\n              className=\"mr-2 p-2 border rounded w-2/3 focus:ring focus:ring-green-500\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Ghi chú\"\r\n              value={point.note}\r\n              onChange={(e) => handlePickupChange(index, 'note', e.target.value)}\r\n              className=\"mr-2 p-2 border rounded w-1/3 focus:ring focus:ring-green-500\"\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleRemovePickup(index)}\r\n              className=\"text-red-500 hover:text-red-700\"\r\n            >\r\n              Xóa\r\n            </button>\r\n          </div>\r\n        ))}\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleAddPickup}\r\n          className=\"mt-2 text-blue-500 hover:text-blue-700\"\r\n        >\r\n          + Thêm Điểm Đón\r\n        </button>\r\n      </div>\r\n\r\n      {/* Điểm Trả */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Điểm Trả:</label>\r\n        {formData.dropOffPoints.map((point, index) => (\r\n          <div key={index} className=\"flex items-center mb-2\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Địa điểm\"\r\n              value={point.location}\r\n              onChange={(e) => handleDropOffChange(index, 'location', e.target.value)}\r\n              className=\"mr-2 p-2 border rounded w-2/3 focus:ring focus:ring-green-500\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Ghi chú\"\r\n              value={point.note}\r\n              onChange={(e) => handleDropOffChange(index, 'note', e.target.value)}\r\n              className=\"mr-2 p-2 border rounded w-1/3 focus:ring focus:ring-green-500\"\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleRemoveDropOff(index)}\r\n              className=\"text-red-500 hover:text-red-700\"\r\n            >\r\n              Xóa\r\n            </button>\r\n          </div>\r\n        ))}\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleAddDropOff}\r\n          className=\"mt-2 text-blue-500 hover:text-blue-700\"\r\n        >\r\n          + Thêm Điểm Trả\r\n        </button>\r\n      </div>\r\n {/* Loại Xe */}\r\n <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Loại Xe:</label>\r\n        {isLoadingBusTypes ? (\r\n          <p>Đang tải danh sách loại xe...</p>\r\n        ) : busTypeError ? (\r\n          <p className=\"text-red-500\">Lỗi khi tải danh sách loại xe: {busTypeError.message}</p>\r\n        ) : (\r\n          <select\r\n            name=\"busType\"\r\n            value={formData.busType}\r\n            onChange={handleChange}\r\n            className=\"mt-2 p-2 border rounded w-full focus:ring focus:ring-green-500\"\r\n            required\r\n          >\r\n            <option value=\"\">Chọn loại xe</option>\r\n            {busTypeData?.data.map((busType) => (\r\n              <option key={busType._id} value={busType._id}>\r\n                {busType.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n      </div>\r\n      {/* Giá Vé Cơ Bản */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">Giá Vé Cơ Bản:</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"basePrice\"\r\n          value={formData.basePrice}\r\n          onChange={handleChange}\r\n          placeholder=\"Nhập giá vé cơ bản\"\r\n          className=\"mt-2 p-2 border rounded w-full focus:ring focus:ring-green-500\"\r\n          required\r\n        />\r\n        <div className=\"mt-2 text-sm text-gray-600\">\r\n          Giá vé: {formatCurrency(formData.basePrice)}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2 rounded w-full\">\r\n        {tripId ? 'Cập Nhật Chuyến Đi' : 'Tạo Chuyến Đi'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TripForm;\r\n","import React, { useState } from 'react';\r\nimport { useGetTripRequestsForCompanyQuery, useApproveTripRequestMutation, useRejectTripRequestMutation } from '../../../../Redux/Company/companyApiSlice';\r\nimport { Button, Spin, Alert, Table, Popconfirm, message, Badge, Modal, Form, Input, InputNumber } from 'antd';\r\n\r\nconst TripRequest = () => {\r\n  // Fetch trip requests\r\n  const { data: tripRequestsData = {}, isLoading, error, refetch } = useGetTripRequestsForCompanyQuery();\r\n  const tripRequests = tripRequestsData.data || []; // Extract the `data` array\r\n\r\n  // Approve and reject mutations\r\n  const [approveTripRequest, { isLoading: isApproving }] = useApproveTripRequestMutation();\r\n  const [rejectTripRequest, { isLoading: isRejecting }] = useRejectTripRequestMutation();\r\n\r\n  // Modal state\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [currentRequestId, setCurrentRequestId] = useState(null);\r\n  const [form] = Form.useForm();\r\n\r\n  const showApproveModal = (requestId) => {\r\n    setCurrentRequestId(requestId);\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleApprove = async (values) => {\r\n    try {\r\n      const formattedValues = {\r\n        basePrice: values.basePrice,\r\n        pickupPoints: values.pickupPoints.split(',').map((point) => ({\r\n          time: '',\r\n          location: point.trim(),\r\n          note: '',\r\n        })),\r\n        dropOffPoints: values.dropOffPoints.split(',').map((point) => ({\r\n          time: '',\r\n          location: point.trim(),\r\n          note: '',\r\n        })),\r\n      };\r\n  \r\n      console.log('Sending approve request with ID:', currentRequestId);\r\n      console.log('Sending approve request with values:', formattedValues);\r\n  \r\n      const response = await approveTripRequest({\r\n        requestId: currentRequestId,\r\n        ...formattedValues,\r\n      }).unwrap();\r\n  \r\n      console.log('Approve response:', response);\r\n      message.success('Yêu cầu đã được duyệt thành công!');\r\n      setIsModalVisible(false);\r\n      form.resetFields();\r\n      refetch();\r\n    } catch (error) {\r\n      console.error('Approve error:', error);\r\n      message.error(error?.data?.message || 'Duyệt yêu cầu thất bại.');\r\n    }\r\n  };\r\n  \r\n\r\n  const handleReject = async (requestId) => {\r\n    try {\r\n      const response = await rejectTripRequest({ requestId, reason: 'Không phù hợp với lịch trình' }).unwrap();\r\n      message.success('Yêu cầu đã bị từ chối!');\r\n      refetch();\r\n    } catch (error) {\r\n      message.error(error?.data?.message || 'Từ chối yêu cầu thất bại.');\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Người Yêu Cầu',\r\n      dataIndex: 'userId',\r\n      key: 'userId',\r\n      render: (user) => user?.fullName || 'N/A',\r\n    },\r\n    {\r\n      title: 'Khởi Hành',\r\n      dataIndex: 'departureLocation',\r\n      key: 'departureLocation',\r\n      render: (location) => location?.name || 'N/A',\r\n    },\r\n    {\r\n      title: 'Điểm Đến',\r\n      dataIndex: 'arrivalLocation',\r\n      key: 'arrivalLocation',\r\n      render: (location) => location?.name || 'N/A',\r\n    },\r\n    {\r\n      title: 'Thời Gian',\r\n      dataIndex: 'preferredDepartureTime',\r\n      key: 'preferredDepartureTime',\r\n      render: (time) => (time ? new Date(time).toLocaleString() : 'N/A'),\r\n    },\r\n    {\r\n      title: 'Số Ghế',\r\n      dataIndex: 'seatNumbers',\r\n      key: 'seatNumbers',\r\n      render: (seatNumbers) => seatNumbers?.join(', ') || 'N/A',\r\n    },\r\n    {\r\n      title: 'Trạng Thái',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (status) => (\r\n        <Badge\r\n          status={\r\n            status === 'Pending'\r\n              ? 'processing'\r\n              : status === 'Approved'\r\n              ? 'success'\r\n              : 'error'\r\n          }\r\n          text={\r\n            status === 'Pending'\r\n              ? 'Đang Chờ'\r\n              : status === 'Approved'\r\n              ? 'Đã Duyệt'\r\n              : 'Đã Từ Chối'\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Hành Động',\r\n      key: 'actions',\r\n      render: (record) => (\r\n        <div className=\"flex gap-2\">\r\n          {record.status === 'Pending' && (\r\n            <>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => showApproveModal(record._id)}\r\n                loading={isApproving}\r\n                disabled={isApproving || isRejecting}\r\n              >\r\n                Duyệt\r\n              </Button>\r\n              <Popconfirm\r\n                title=\"Bạn có chắc chắn muốn từ chối yêu cầu này?\"\r\n                onConfirm={() => handleReject(record._id)}\r\n                okText=\"Từ Chối\"\r\n                cancelText=\"Hủy\"\r\n              >\r\n                <Button\r\n                  type=\"danger\"\r\n                  loading={isRejecting}\r\n                  disabled={isApproving || isRejecting}\r\n                >\r\n                  Từ Chối\r\n                </Button>\r\n              </Popconfirm>\r\n            </>\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 bg-white rounded-md shadow-md\">\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center py-2\">\r\n          <Spin tip=\"Đang tải danh sách yêu cầu...\" size=\"large\" />\r\n        </div>\r\n      ) : error ? (\r\n        <Alert\r\n          message=\"Có lỗi xảy ra khi tải danh sách yêu cầu\"\r\n          description={error.message}\r\n          type=\"error\"\r\n          showIcon\r\n        />\r\n      ) : tripRequests.length === 0 ? (\r\n        <p className=\"text-center text-gray-500\">Không có yêu cầu nào.</p>\r\n      ) : (\r\n        <Table\r\n          columns={columns}\r\n          dataSource={tripRequests}\r\n          rowKey={(record) => record._id}\r\n          pagination={{\r\n            pageSize: 5,\r\n            showSizeChanger: true,\r\n            pageSizeOptions: ['5', '10', '20'],\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <Modal\r\n        title=\"Nhập thông tin chuyến đi\"\r\n        visible={isModalVisible}\r\n        onCancel={() => setIsModalVisible(false)}\r\n        onOk={() => form.submit()}\r\n        okText=\"Xác Nhận\"\r\n        cancelText=\"Hủy\"\r\n      >\r\n        <Form form={form} layout=\"vertical\" onFinish={handleApprove}>\r\n          <Form.Item\r\n            label=\"Giá Vé Cơ Bản\"\r\n            name=\"basePrice\"\r\n            rules={[{ required: true, message: 'Vui lòng nhập giá vé cơ bản!' }]}\r\n          >\r\n            <InputNumber min={0} style={{ width: '100%' }} placeholder=\"Nhập giá vé\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Điểm Đón\"\r\n            name=\"pickupPoints\"\r\n            rules={[{ required: true, message: 'Vui lòng nhập điểm đón!' }]}\r\n          >\r\n            <Input.TextArea rows={2} placeholder=\"Nhập danh sách điểm đón (ngăn cách bởi dấu phẩy)\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Điểm Trả\"\r\n            name=\"dropOffPoints\"\r\n            rules={[{ required: true, message: 'Vui lòng nhập điểm trả!' }]}\r\n          >\r\n            <Input.TextArea rows={2} placeholder=\"Nhập danh sách điểm trả (ngăn cách bởi dấu phẩy)\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TripRequest;\r\n","import React, { useState, useMemo, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  useGetTripsByCompanyQuery,\r\n  useDeleteExpiredTripsForCompanyMutation,\r\n} from '../../../Redux/Trip/TripApiSlice';\r\nimport TripList from '../components/ManageTrip/TripList';\r\nimport TripForm from '../components/ManageTrip/TripForm';\r\nimport { useGetTripRequestsForCompanyQuery } from '../../../Redux/Company/companyApiSlice';\r\nimport { Button, Drawer, Typography, Spin, Alert, notification, Popconfirm, Space, Tabs } from 'antd';\r\nimport TripRequest from '../components/ManageTrip/TripRequest';\r\n\r\nconst { Title } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nconst ManageTrips = () => {\r\n  const companyId = useSelector((state) => state.user.userInfo?.companyId);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [editingTripId, setEditingTripId] = useState(null);\r\n  const [formMode, setFormMode] = useState('add');\r\n  const [activeTab, setActiveTab] = useState('active');\r\n\r\n  // Fetch trips\r\n  const { data = {}, isLoading, error, refetch } = useGetTripsByCompanyQuery(companyId, {\r\n    skip: !companyId,\r\n  });\r\n\r\n  const trips = data.trips || [];\r\n  const { activeTrips, completedTrips } = useMemo(() => {\r\n    const active = [];\r\n    const completed = [];\r\n    trips.forEach((trip) => {\r\n      if (trip.status === 'Completed') {\r\n        completed.push(trip);\r\n      } else {\r\n        active.push(trip);\r\n      }\r\n    });\r\n    return { activeTrips: active, completedTrips: completed };\r\n  }, [trips]);\r\n\r\n  // Fetch trip requests\r\n  const { data: tripRequestsData = {}, isLoading: isRequestsLoading } = useGetTripRequestsForCompanyQuery();\r\n  const tripRequests = tripRequestsData.data || [];\r\n\r\n  const [deleteExpiredTripsForCompany, { isLoading: isDeleting }] = useDeleteExpiredTripsForCompanyMutation();\r\n\r\n  const showNotification = useCallback((type, message, description) => {\r\n    notification[type]({\r\n      message,\r\n      description,\r\n    });\r\n  }, []);\r\n\r\n  const openDrawer = useCallback((trip = null) => {\r\n    setEditingTripId(trip ? trip._id : null);\r\n    setFormMode(trip ? 'edit' : 'add');\r\n    setIsDrawerOpen(true);\r\n  }, []);\r\n\r\n  const closeDrawer = useCallback(\r\n    (success = false, message) => {\r\n      setIsDrawerOpen(false);\r\n      setEditingTripId(null);\r\n      setFormMode('add');\r\n      if (success) {\r\n        showNotification('success', 'Thành công', message);\r\n      }\r\n      refetch();\r\n    },\r\n    [showNotification, refetch]\r\n  );\r\n\r\n  const handleDeleteExpiredTrips = async () => {\r\n    try {\r\n      const response = await deleteExpiredTripsForCompany().unwrap();\r\n      showNotification(\r\n        'success',\r\n        'Thành công',\r\n        response.message || 'Các chuyến đi đã quá hạn đã được xóa thành công.'\r\n      );\r\n      refetch();\r\n    } catch (error) {\r\n      const errorMessage = error?.data?.message || 'Có lỗi xảy ra khi xóa các chuyến đi đã quá hạn.';\r\n      showNotification('error', 'Lỗi', errorMessage);\r\n    }\r\n  };\r\n\r\n  const onTabChange = (key) => {\r\n    setActiveTab(key);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-8 bg-white shadow-md rounded-md\">\r\n      <div className=\"header flex justify-between items-center mb-6\">\r\n        <Title level={3} className=\"text-gray-800\">\r\n          Quản Lý Chuyến Đi\r\n        </Title>\r\n        <Space size=\"large\">\r\n          {activeTab === 'active' && (\r\n            <Popconfirm\r\n              title=\"Bạn có chắc chắn muốn xóa tất cả các chuyến đi đã quá hạn?\"\r\n              onConfirm={handleDeleteExpiredTrips}\r\n              okText=\"Xóa\"\r\n              cancelText=\"Hủy\"\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                danger\r\n                loading={isDeleting}\r\n                style={{ backgroundColor: '#ff4d4f', borderColor: '#ff4d4f' }}\r\n              >\r\n                Xóa Chuyến Đi Quá Hạn\r\n              </Button>\r\n            </Popconfirm>\r\n          )}\r\n          {activeTab === 'active' && (\r\n            <Button type=\"primary\" onClick={() => openDrawer()}>\r\n              Tạo Chuyến Đi\r\n            </Button>\r\n          )}\r\n        </Space>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        <Tabs activeKey={activeTab} onChange={onTabChange} type=\"card\">\r\n          <TabPane tab={`Chuyến đi đang hoạt động (${activeTrips.length})`} key=\"active\">\r\n            {isLoading ? (\r\n              <div className=\"loading-spinner flex justify-center py-10\">\r\n                <Spin tip=\"Đang tải danh sách chuyến đi...\" size=\"large\" />\r\n              </div>\r\n            ) : error ? (\r\n              <Alert\r\n                message=\"Có lỗi xảy ra khi tải danh sách chuyến đi\"\r\n                description={error.message}\r\n                type=\"error\"\r\n                showIcon\r\n                className=\"error-alert\"\r\n              />\r\n            ) : (\r\n              <TripList\r\n                trips={activeTrips}\r\n                openDrawer={openDrawer}\r\n                hideAddButton={isDrawerOpen}\r\n                showNotification={showNotification}\r\n                refetch={refetch}\r\n              />\r\n            )}\r\n          </TabPane>\r\n          <TabPane tab={`Chuyến đi đã hoàn thành (${completedTrips.length})`} key=\"completed\">\r\n            {isLoading ? (\r\n              <div className=\"loading-spinner flex justify-center py-10\">\r\n                <Spin tip=\"Đang tải danh sách chuyến đi...\" size=\"large\" />\r\n              </div>\r\n            ) : error ? (\r\n              <Alert\r\n                message=\"Có lỗi xảy ra khi tải danh sách chuyến đi\"\r\n                description={error.message}\r\n                type=\"error\"\r\n                showIcon\r\n                className=\"error-alert\"\r\n              />\r\n            ) : (\r\n              <TripList\r\n                trips={completedTrips}\r\n                openDrawer={openDrawer}\r\n                hideAddButton={isDrawerOpen}\r\n                showNotification={showNotification}\r\n                refetch={refetch}\r\n                isCompleted\r\n              />\r\n            )}\r\n          </TabPane>\r\n          <TabPane\r\n            tab={`Yêu cầu mở chuyến đi (${isRequestsLoading ? '...' : tripRequests.length})`}\r\n            key=\"requests\"\r\n          >\r\n            <TripRequest companyId={companyId} />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n\r\n      <Drawer\r\n        title={editingTripId ? 'Chỉnh Sửa Chuyến Đi' : 'Thêm Chuyến Đi Mới'}\r\n        width={500}\r\n        onClose={() => closeDrawer(false)}\r\n        open={isDrawerOpen}\r\n        destroyOnClose\r\n      >\r\n        <TripForm\r\n          tripId={editingTripId}\r\n          closeDrawer={(message) => closeDrawer(true, message)}\r\n          trips={trips}\r\n          formMode={formMode}\r\n          showNotification={showNotification}\r\n        />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageTrips;\r\n ","import moment from 'moment-timezone';\r\n\r\nconst VN_TIMEZONE = 'Asia/Ho_Chi_Minh';\r\n\r\nexport const timeUtils = {\r\n  parseUTCTimeForForm: (utcTimeString) => {\r\n    if (!utcTimeString) return new Date();\r\n    return new Date(utcTimeString);\r\n  },\r\n\r\n  formatTimeForServer: (localDate) => {\r\n    if (!localDate) return null;\r\n    return moment(localDate).utc().format();\r\n  },\r\n\r\n  formatDisplayTime: (utcTimeString) => {\r\n    if (!utcTimeString) return '';\r\n    return moment(utcTimeString).tz(VN_TIMEZONE).format('DD/MM/YYYY HH:mm');\r\n  }\r\n};\r\nexport const formatCurrency = (value) => {\r\n  if (!value) return '0 VND';\r\n  return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(value);\r\n};\r\n"],"names":["_ref","trips","openDrawer","hideAddButton","refetch","dispatch","useDispatch","deleteTrip","useDeleteTripMutation","updateTripDrivers","useUpdateTripDriversMutation","notification","setNotification","useState","open","severity","message","selectedTrip","setSelectedTrip","isModalVisible","setIsModalVisible","selectedDrivers","setSelectedDrivers","data","driversData","isLoading","isDriversLoading","useGetDriversQuery","showNotification","columns","title","dataIndex","key","render","text","_jsx","className","children","timeUtils","formatDisplayTime","formatCurrency","drivers","length","map","driver","fullName","_id","record","hasDriver","_jsxs","Tooltip","Link","to","FaEye","Button","type","onClick","tripToEdit","departureTime","moment","toISOString","arrivalTime","handleEdit","FaEdit","FaUserPlus","Popconfirm","onConfirm","async","tripId","unwrap","setSuccess","updatedTrips","filter","trip","setTrips","err","setError","handleDelete","okText","cancelText","FaTrash","Table","dataSource","rowKey","pagination","bordered","Notification","onClose","anchorOrigin","vertical","horizontal","Modal","visible","onOk","driverIds","_err$data","_err$data2","errorMessage","conflictingDrivers","conflictingDriversMessage","join","onCancel","Spin","Array","isArray","Select","mode","style","width","placeholder","onChange","value","_driver$userId","Option","userId","_locationData$data","_locationData$data2","closeDrawer","companyId","useSelector","state","user","userInfo","createTrip","useCreateTripMutation","updateTrip","useUpdateTripMutation","tripData","useGetTripByIdQuery","skip","locationData","isLoadingLocations","useGetLocationsQuery","busTypeData","isLoadingBusTypes","error","busTypeError","useGetBusTypesQuery","formData","setFormData","departureLocation","arrivalLocation","busType","Date","basePrice","isRoundTrip","pickupPoints","dropOffPoints","useEffect","_trip$departureLocati","_trip$arrivalLocation","_trip$busType","parseUTCTimeForForm","handleChange","e","name","checked","target","handleDateChange","date","handlePickupChange","index","field","updatedPickupPoints","handleDropOffChange","updatedDropOffPoints","onSubmit","preventDefault","pickupPointsWithTimes","calculatePickupTimes","departureMoment","point","timeOffset","time","clone","add","format","dropOffPointsWithTimes","calculateDropOffTimes","arrivalMoment","subtract","tripDetails","formatTimeForServer","parseInt","updatedTrip","console","required","location","city","DatePicker","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","note","splice","handleRemovePickup","handleAddPickup","handleRemoveDropOff","handleAddDropOff","TripRequest","tripRequestsData","useGetTripRequestsForCompanyQuery","tripRequests","approveTripRequest","isApproving","useApproveTripRequestMutation","rejectTripRequest","isRejecting","useRejectTripRequestMutation","currentRequestId","setCurrentRequestId","form","Form","useForm","toLocaleString","seatNumbers","status","Badge","_Fragment","showApproveModal","requestId","loading","disabled","reason","success","_error$data2","handleReject","tip","size","Alert","description","showIcon","pageSize","showSizeChanger","pageSizeOptions","submit","layout","onFinish","formattedValues","values","split","trim","log","response","resetFields","_error$data","Item","label","rules","InputNumber","min","Input","TextArea","rows","Title","Typography","TabPane","Tabs","ManageTrips","_state$user$userInfo","isDrawerOpen","setIsDrawerOpen","editingTripId","setEditingTripId","formMode","setFormMode","activeTab","setActiveTab","useGetTripsByCompanyQuery","activeTrips","completedTrips","useMemo","active","completed","forEach","push","isRequestsLoading","deleteExpiredTripsForCompany","isDeleting","useDeleteExpiredTripsForCompanyMutation","useCallback","arguments","undefined","level","Space","danger","backgroundColor","borderColor","activeKey","tab","TripList","isCompleted","Drawer","destroyOnClose","TripForm","utcTimeString","localDate","utc","tz","Intl","NumberFormat","currency"],"sourceRoot":""}